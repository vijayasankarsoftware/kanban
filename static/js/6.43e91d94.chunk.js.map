{"version":3,"sources":["components/ColumnTitle.tsx","styles.tsx","components/LabelChip.tsx","features/task/TaskLabels.tsx","features/task/Task.tsx","features/task/AddTask.tsx","features/task/TaskList.tsx","features/column/Column.tsx","utils/reorder.tsx","components/Spinner.tsx","components/PageError.tsx","features/board/Board.tsx","features/board/NewBoardDialog.tsx","features/board/BoardList.tsx","components/Popup.tsx","components/UserMenu.tsx","components/Navbar.tsx","features/home/Home.tsx","components/BoardName.tsx","components/AvatarTag.tsx","components/AvatarOption.tsx","components/UserSearch.tsx","features/member/MemberInvite.tsx","features/member/MemberDetail.tsx","features/member/MemberDialog.tsx","utils/shortcuts.ts","components/PriorityOption.tsx","features/task/CreateTaskDialog.tsx","components/AssigneeAutoComplete.tsx","features/task/TaskAssignees.tsx","features/task/TaskReporter.tsx","components/MemberAvatar.tsx","features/comment/CommentTextarea.tsx","features/comment/CommentItem.tsx","features/comment/CommentSection.tsx","features/task/SpectatorsDialog.tsx","features/task/EditTaskDialog.tsx","components/Flex.tsx","features/label/LabelFields.tsx","features/label/LabelRow.tsx","features/label/LabelCreate.tsx","features/label/LabelDialog.tsx","features/member/MemberList.tsx","features/member/MemberFilter.tsx","features/board/BoardBar.tsx","features/profile/UserAvatar.tsx","features/profile/Profile.tsx","static/svg/logo.svg","features/sidebar/Sidebar.tsx","AuthenticatedApp.tsx"],"names":["Container","grid","PRIMARY","P100","taskHeaderTextareaWidth","borderRadius","InputTitle","RegularTitle","Extra","InnerExtra","Count","OptionsContent","ColumnTitle","id","title","tasksCount","props","dispatch","useDispatch","React","useState","anchorEl","setAnchorEl","pendingTitle","setPendingTitle","editing","setEditing","titleTextAreaRef","useRef","useEffect","current","blur","handleOptionsClose","open","Boolean","popoverId","undefined","TextareaAutosize","ref","value","onChange","e","target","onBlur","length","patchColumn","fields","onKeyDown","keyCode","Key","Enter","preventDefault","Escape","data-testid","onFocus","select","autoFocus","onClick","Button","event","currentTarget","css","icon","faEllipsisV","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","startIcon","fixedWidth","faTrash","window","confirm","deleteColumn","size","ACTION_G","boardCardBaseStyles","taskContainerStyles","imageSize","N900","avatarStyles","createMdEditorStyles","descriptionStyles","LabelChip","label","onCard","rest","contrastColor","getContrastColor","color","Chip","variant","name","WHITE","TaskLabels","task","labelsById","useSelector","selectLabelEntities","labels","map","labelId","key","isDragging","isGroupedOver","N30","N0","N70","Content","TextContent","Footer","CardIcon","TaskId","Assignees","getStyle","provided","style","draggableProps","TaskFooter","membersByIds","selectMembersEntities","assignees","assigneeId","faArrowUp","PRIO_COLORS","priority","AvatarGroup","max","assignee","Avatar","src","avatar","photo","alt","username","charAt","memo","index","handleClick","setEditDialogOpen","draggableId","dragProvided","dragSnapshot","combineTargetFor","innerRef","dragHandleProps","data-is-dragging","data-index","aria-label","AddTask","columnId","N80A","faPlus","setCreateDialogColumn","setCreateDialogOpen","fullWidth","Wrapper","isDraggingOver","isDraggingFrom","R50","T50","COLUMN_COLOR","taskWidth","DropZone","InnerTaskList","tasks","InnerList","dropProvided","barHeight","placeholder","TaskList","listType","droppableId","toString","type","dropSnapshot","draggingFromThisWith","droppableProps","Header","Column","snapshot","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","Spinner","loading","Fade","in","transitionDelay","unmountOnExit","CircularProgress","PageError","children","Alert","severity","BoardContainer","sidebarWidth","ColumnContainer","EmptyBoard","ColumnsBlock","RightMargin","Board","detail","state","board","error","detailError","columns","columnSelectors","selectAll","tasksByColumn","byColumn","tasksById","byId","useParams","fetchBoardById","boardId","detailDataExists","SEO","onDragEnd","destination","source","data","next","reordered","reorderTasks","updateTasksByColumn","newOrdered","updateColumns","direction","column","taskId","openBtnStyles","NewBoardDialog","createError","createDialogOpen","useForm","register","handleSubmit","errors","reset","onSubmit","createBoard","maxWidth","maxHeight","marginTop","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","margin","inputRef","required","maxLength","message","helperText","DialogActions","BoardsSection","Title","TitleText","Cards","OwnerBadge","OWNER_COLOR","boardCardStyles","Card","keyframes","cardCss","to","isOwner","hover","setHover","Grid","item","xs","sm","Tooltip","placement","arrow","faUserAlt","onMouseEnter","onMouseLeave","BoardList","fetchLoading","boards","all","userId","auth","user","fetchAllBoards","handleKeydown","metaKey","document","addEventListener","removeEventListener","faTh","container","spacing","owner","MyDialog","setOpen","newPassword","setNewPassword","rePassword","setRePassword","setError","handleClose","MenuItem","marginRight","marginBottom","changePassword","Username","UserMenu","history","useHistory","aria-controls","aria-haspopup","photo_url","Menu","getContentAnchorEl","transitionDuration","keepMounted","logout","push","Item","Icons","Navbar","Hidden","smUp","implementation","faBars","setMobileDrawerOpen","xsDown","faRocket","HeroContainer","Home","width","height","textTransform","BoardName","pendingName","setPendingName","nameTextAreaRef","patchBoard","AvatarTag","option","AvatarOption","UserSearch","tagsValue","setTagsValue","theme","useTheme","inputValue","setInputValue","setLoading","options","setOptions","useDebounce","equalityFn","a","b","debouncedInput","api","CancelToken","fetchData","API_SEARCH_USERS","cancelToken","token","response","isCancel","console","cancel","handleInputChange","Autocomplete","multiple","onOpen","getOptionSelected","getOptionLabel","filterSelectedOptions","_event","newValues","renderOption","renderInput","params","InputProps","endAdornment","renderTags","getTagProps","breakpoints","down","InviteMember","Description","MemberInvite","postInviteMember","users","post","API_BOARDS","newMembers","addBoardMembers","createSuccessToast","m","join","createErrorToast","Box","display","alignItems","v","disabled","scaleUp","animationStyles","MemberDetail","member","setDialogMember","PrimaryText","Main","SecondaryText","ConfirmAction","MemberDialog","memberId","dialogMember","members","boardOwner","currentBoardOwner","useMediaQuery","confirmDelete","setConfirmDelete","memberIsOwner","handleRemoveMember","removedMember","removeBoardMember","fullScreen","Close","Fab","faAngleLeft","first_name","last_name","email","getMetaKey","navigator","platform","indexOf","PrioLabel","PriorityOption","mdParser","MarkdownIt","EditorWrapper","CreateTaskDialog","labelsOptions","selectAllLabels","selectAllMembers","createDialogColumn","createLoading","titleTouched","setTitleTouched","setTitle","description","setDescription","setAssignees","reporters","setReporters","spectators","setSpectators","setPriority","setLabels","log","PRIORITY_2","handleCreate","newTask","l","reporter","c","createTask","plugins","MD_EDITOR_PLUGINS","config","MD_EDITOR_CONFIG","renderHTML","text","render","disableClearable","openOnFocus","autoHighlight","PRIORITY_OPTIONS","_","newLabels","AssigneeAutoComplete","controlId","dataTestId","setAssignee","disableCloseOnSelect","ContentTitle","modalPopperWidth","AssigneeContainer","Label","List","TaskAssignees","membersById","pendingAssignees","setPendingAssignees","zIndex","modalPopperIndex","TaskReporters","MemberAvatar","CommentTextarea","rowsMin","N800","commentBoxWidth","commentBoxWidthMobile","Link","HINT","Name","Text","TimeAgo","CommentItem","comment","author","mb","mt","formatDistanceToNow","Date","created","addSuffix","deleteComment","CommentActionRow","CommentSection","selectMe","comments","selectAllComments","memberEntities","fetchStatus","selectFetchCommentsStatus","createStatus","selectCreateCommentStatus","setText","fetchComments","currentTaskComments","filter","faComments","flexDirection","justifyContent","marginLeft","createComment","SpectatorDialog","handleClickOpen","Typography","cursor","TASK_G","breaks","taskDialogHeight","Side","up","taskSideWidth","DescriptionHeader","DescriptionActions","ButtonsContainer","EditTaskDialog","selectAllColumns","columnsById","selectColumnsEntities","editDialogOpen","editingDescription","setEditingDescription","wrapperRef","editorRef","cancelRef","handleSaveDescription","patchTask","handleCancelDescription","handleClickOutside","contains","setSelection","start","end","findTaskColumnId","handleDelete","deleteTask","activeElement","HTMLInputElement","HTMLTextAreaElement","createInfoToast","stopPropagation","faAlignLeft","onDoubleClick","MD_EDITING_CONFIG","MD_READ_ONLY_CONFIG","TaskReporter","currentId","updatedTasksByColumn","blurOnSelect","PRIORITY_MAP","handleLabelsChange","modified","Flex","Actions","LabelFields","fieldsId","setActive","useFormContext","setValue","triggerValidation","watch","pendingColor","IconButton","getRandomHexColor","DANGER","BLACK","faRedoAlt","pattern","RowDiv","LabelRow","methods","defaultValues","mode","patchLabel","deleteLabel","LabelCreate","setCreating","includes","createLabel","LabelCount","Table","LabelDialog","dialogOpen","searchValue","setSearchValue","creating","filteredLabels","toLowerCase","match","trim","setDialogOpen","startAdornment","InputAdornment","position","faSearch","Row","MemberListDialog","memberListOpen","filteredMembers","setMemberListOpen","FilterButton","MemberFilter","filteredAssignee","setFilteredAssignee","postFilterMember","assigneeIds","handleClickClearFilter","flexGrow","Items","Left","Right","buttonStyles","BoardBar","classList","faPen","addColumn","MemberList","avatarBorderStyles","pulseStyles","GridTitle","GridFooter","AvatarListContainer","UserAvatar","profile","userDetail","avatars","avatarLoading","popupState","usePopupState","popupId","handleChangeAvatar","updateAvatar","bindTrigger","bindPopover","close","faTimes","href","FormContainer","UserForm","Fields","Profile","apiErrors","fetchUserDetail","fetchAvatarList","errorKey","updateUser","is_guest","AlertTitle","Divider","defaultValue","_extends","Object","assign","i","arguments","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","x","y","rx","transform","_ref9","_ref10","_ref11","_ref12","_ref","svgRef","viewBox","ForwardRef","forwardRef","TopArea","linkStyles","BottomBlock","DrawerContent","exact","Sidebar","mobileOpen","mobileDrawerOpen","Drawer","anchor","ModalProps","AppRoute","AuthenticatedApp","path"],"mappings":"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","file":"static/js/6.43e91d94.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { grid, borderRadius, Key, taskHeaderTextareaWidth } from \"const\";\nimport { P100, PRIMARY, TASK_G as ACTION_G } from \"utils/colors\";\nimport { TextareaAutosize, Button, Popover } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { Id } from \"types\";\nimport { patchColumn, deleteColumn } from \"features/column/ColumnSlice\";\nimport { css } from \"@emotion/core\";\n\nconst Container = styled.h4`\n  padding: ${grid}px;\n  transition: background-color ease 0.2s;\n  flex-grow: 1;\n  user-select: none;\n  position: relative;\n  color: ${PRIMARY};\n  font-size: 1rem;\n  font-weight: bold;\n  margin: 0;\n  margin-top: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  min-height: 40px;\n  &:focus {\n    outline: 2px solid ${P100};\n    outline-offset: 2px;\n  }\n  textarea {\n    color: ${PRIMARY};\n    font-weight: bold;\n    width: ${taskHeaderTextareaWidth}px;\n    border: none;\n    resize: none;\n    border-radius: ${borderRadius}px;\n    box-shadow: inset 0 0 0 1px #ccc;\n    line-height: 1.43;\n    &:focus {\n      outline: none;\n      box-shadow: inset 0 0 0 2px ${PRIMARY};\n    }\n  }\n`;\n\nconst InputTitle = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst RegularTitle = styled.div`\n  margin: 0;\n  font-size: 14px;\n  align-self: center;\n  word-break: break-word;\n  width: ${taskHeaderTextareaWidth}px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nconst Extra = styled.div`\n  display: flex;\n  align-items: flex-start;\n`;\n\nconst InnerExtra = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Count = styled.div`\n  overflow-wrap: anywhere;\n  font-size: 14px;\n`;\n\nconst OptionsContent = styled.div`\n  padding: 0.75rem;\n`;\n\ninterface Props {\n  id: Id;\n  title: string;\n  tasksCount: number;\n}\n\nconst ColumnTitle = ({ id, title, tasksCount, ...props }: Props) => {\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n    null\n  );\n  const [pendingTitle, setPendingTitle] = useState<string>(title);\n  const [editing, setEditing] = useState<boolean>(false);\n  const titleTextAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (!editing && title === pendingTitle) {\n      titleTextAreaRef?.current?.blur();\n    }\n  }, [pendingTitle, editing]);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === Key.Enter) {\n      e.preventDefault();\n      if (pendingTitle.length > 0) {\n        titleTextAreaRef?.current?.blur();\n      }\n    }\n    if (e.keyCode === Key.Escape) {\n      e.preventDefault();\n      setPendingTitle(title);\n      setEditing(false);\n      // blur via useEffect\n    }\n  };\n\n  const handleSave = () => {\n    if (editing && pendingTitle.length > 0) {\n      setEditing(false);\n      if (pendingTitle !== title) {\n        dispatch(patchColumn({ id, fields: { title: pendingTitle } }));\n      }\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setPendingTitle(e.target.value);\n  };\n\n  const handleFocus = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    e.target.select();\n  };\n\n  const handleOptionsClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleOptionsClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleDelete = () => {\n    if (\n      window.confirm(\n        \"Are you sure? Deleting the column will also delete related tasks and this cannot be undone.\"\n      )\n    ) {\n      dispatch(deleteColumn(id));\n      handleOptionsClose();\n    }\n  };\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? `col-${id}options-popover` : undefined;\n\n  return (\n    <Container {...props}>\n      {editing ? (\n        <InputTitle>\n          <TextareaAutosize\n            ref={titleTextAreaRef}\n            value={pendingTitle}\n            onChange={handleChange}\n            onBlur={handleSave}\n            onKeyDown={handleKeyDown}\n            data-testid=\"column-title-textarea\"\n            onFocus={handleFocus}\n            autoFocus\n          />\n        </InputTitle>\n      ) : (\n        <RegularTitle onClick={() => setEditing(true)}>\n          {pendingTitle}\n        </RegularTitle>\n      )}\n      <Extra>\n        <InnerExtra>\n          <Count>{tasksCount}</Count>\n          <Button\n            onClick={handleOptionsClick}\n            data-testid=\"col-options\"\n            css={css`\n              margin-left: 0.25rem;\n              min-width: 0;\n              padding: 2px 8px;\n              height: 22px;\n            `}\n          >\n            <FontAwesomeIcon icon={faEllipsisV} />\n          </Button>\n        </InnerExtra>\n        <Popover\n          id={popoverId}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleOptionsClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\",\n          }}\n        >\n          <OptionsContent>\n            <Button\n              startIcon={<FontAwesomeIcon fixedWidth icon={faTrash} />}\n              onClick={handleDelete}\n              data-testid=\"delete-column\"\n              size=\"small\"\n              css={css`\n                font-size: 12px;\n                font-weight: bold;\n                color: ${ACTION_G};\n              `}\n            >\n              Delete column\n            </Button>\n          </OptionsContent>\n        </Popover>\n      </Extra>\n    </Container>\n  );\n};\n\nexport default ColumnTitle;\n","import { css } from \"@emotion/core\";\nimport { borderRadius, imageSize, grid } from \"const\";\nimport { N900 } from \"utils/colors\";\n\nexport const boardCardBaseStyles = css`\n  position: relative;\n  display: block;\n  height: 100px;\n  border-radius: 6px;\n  padding: 0.5rem;\n  text-decoration: none;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const iconBoxStyles = css`\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 5px;\n  margin: 1px;\n  color: rgba(0, 0, 0, 0.5);\n  opacity: 0.9;\n  &:hover {\n    opacity: 1;\n    background: rgba(220, 220, 220, 1);\n  }\n`;\n\nexport const taskContainerStyles = css`\n  border-radius: ${borderRadius}px;\n  border: 2px solid transparent;\n  box-shadow: 0 1px 2px rgba(10, 30, 60, 0.25);\n  box-sizing: border-box;\n  padding: ${grid}px;\n  min-height: ${imageSize}px;\n  margin-bottom: ${grid}px;\n  user-select: none;\n  color: ${N900};\n\n  &:hover,\n  &:active {\n    color: ${N900};\n    background-color: #f5f5f5;\n    text-decoration: none;\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: none;\n  }\n\n  /* flexbox */\n  display: flex;\n`;\n\nexport const avatarStyles = css`\n  height: 2rem;\n  width: 2rem;\n  font-size: 12px;\n  margin-left: -4px;\n`;\n\nexport const createMdEditorStyles = (editing: boolean) => css`\n  .rc-md-editor {\n    border-color: #c4c4c4;\n    border-radius: ${borderRadius}px;\n\n    .rc-md-navigation {\n      border-top-left-radius: ${borderRadius}px;\n      border-top-right-radius: ${borderRadius}px;\n    }\n    .section-container {\n      border-bottom-left-radius: ${borderRadius}px;\n      border-bottom-right-radius: ${borderRadius}px;\n      ${editing &&\n      `border-top-left-radius: ${borderRadius}px;\n      border-top-right-radius: ${borderRadius}px;`}\n    }\n  }\n`;\n\nexport const descriptionStyles = css`\n  h1 {\n    font-weight: 600;\n    font-size: 24px;\n    line-height: 28px;\n    margin: 0 0 12px;\n  }\n  h2 {\n    font-size: 20px;\n    line-height: 24px;\n    margin: 16px 0 8px;\n  }\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 600;\n    margin: 0 0 8px;\n  }\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-size: 16px;\n    line-height: 20px;\n  }\n  ol,\n  ul {\n    margin: 8px 0;\n    padding: 0;\n\n    margin-block-start: 0.25em;\n    margin-block-end: 0.25em;\n    padding-inline-start: 16px;\n  }\n  li {\n    margin-bottom: 0;\n  }\n  p {\n    margin: 0;\n    margin-bottom: 10px;\n    line-height: 20px;\n  }\n  pre {\n    padding: 10px 16px;\n    line-height: 16px;\n  }\n  code {\n    font-size: 12px;\n  }\n  blockquote p {\n    margin: 0;\n  }\n`;\n","import React from \"react\";\nimport { css } from \"@emotion/core\";\nimport { Chip, ChipProps } from \"@material-ui/core\";\nimport { getContrastColor, WHITE } from \"utils/colors\";\nimport { Label } from \"types\";\n\ninterface Props extends ChipProps {\n  label: Label;\n  onCard?: boolean;\n}\n\nconst LabelChip = ({ label, onCard = false, ...rest }: Props) => {\n  const contrastColor = getContrastColor(label.color);\n\n  return (\n    <Chip\n      variant=\"outlined\"\n      data-testid={`label${label.id}`}\n      label={label.name}\n      css={css`\n        overflow: auto;\n        background-color: ${label.color};\n        color: ${contrastColor};\n        border: ${contrastColor === WHITE && \"none\"};\n        border-radius: 4px;\n        ${onCard &&\n        `\n          cursor: pointer;\n          max-width: fit-content; \n          margin-bottom: 0.125rem; \n          margin-right: 0.125rem; \n          font-size: 10px; \n          height: unset;\n        `}\n        .MuiChip-label {\n          ${onCard &&\n          `\n            font-weight: 500;\n            padding: 1px 0.75em;\n            line-height: 1.5;\n            height: 18px;\n            font-size: 10px;\n          `}\n        }\n        .MuiChip-deleteIcon {\n          color: ${contrastColor};\n        }\n      `}\n      {...rest}\n    />\n  );\n};\n\nexport default LabelChip;\n","import React from \"react\";\nimport { ITask, Label } from \"types\";\nimport { useSelector } from \"react-redux\";\nimport LabelChip from \"components/LabelChip\";\nimport styled from \"@emotion/styled\";\nimport { selectLabelEntities } from \"features/label/LabelSlice\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 4px;\n`;\n\ninterface Props {\n  task: ITask;\n}\n\nconst TaskLabels = ({ task }: Props) => {\n  const labelsById = useSelector(selectLabelEntities);\n  const labels = task.labels.map((labelId) => labelsById[labelId]) as Label[];\n\n  return (\n    <Container>\n      {labels.map((label) => (\n        <LabelChip key={label.id} label={label} onCard />\n      ))}\n    </Container>\n  );\n};\n\nexport default TaskLabels;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ITask, BoardMember } from \"types\";\nimport {\n  DraggableProvided,\n  Draggable,\n  DraggableStateSnapshot,\n} from \"react-beautiful-dnd\";\nimport { N30, N0, N70, PRIMARY } from \"utils/colors\";\nimport { PRIO_COLORS } from \"const\";\nimport { taskContainerStyles } from \"styles\";\nimport { AvatarGroup } from \"@material-ui/lab\";\nimport { css } from \"@emotion/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Avatar } from \"@material-ui/core\";\nimport { setEditDialogOpen } from \"./TaskSlice\";\nimport TaskLabels from \"./TaskLabels\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { selectMembersEntities } from \"features/member/MemberSlice\";\n\nconst getBackgroundColor = (isDragging: boolean, isGroupedOver: boolean) => {\n  if (isDragging) {\n    return \"#eee\";\n  }\n\n  if (isGroupedOver) {\n    return N30;\n  }\n\n  return N0;\n};\n\nconst getBorderColor = (isDragging: boolean) =>\n  isDragging ? \"orange\" : \"transparent\";\n\ninterface ContainerProps {\n  isDragging: boolean;\n  isGroupedOver: boolean;\n}\n\nconst Container = styled.span<ContainerProps>`\n  border-color: ${(props) => getBorderColor(props.isDragging)};\n  background-color: ${(props) =>\n    getBackgroundColor(props.isDragging, props.isGroupedOver)};\n  box-shadow: ${({ isDragging }) =>\n    isDragging ? `2px 2px 1px ${N70}` : \"none\"};\n\n  &:focus {\n    border-color: #aaa;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst TextContent = styled.div`\n  position: relative;\n  padding-right: 14px;\n  word-break: break-word;\n  color: ${PRIMARY};\n  font-weight: bold;\n  font-size: 12px;\n`;\n\nconst Footer = styled.div`\n  height: 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CardIcon = styled.div`\n  display: flex;\n  font-size: 0.75rem;\n`;\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst TaskId = styled.small`\n  flex-grow: 1;\n  flex-shrink: 1;\n  margin: 0;\n  font-weight: normal;\n  text-overflow: ellipsis;\n  text-align: left;\n  font-weight: bold;\n  color: #aaa;\n  font-size: 8px;\n`;\n\nconst Assignees = styled.div``;\n\nconst getStyle = (provided: DraggableProvided, style?: Record<string, any>) => {\n  if (!style) {\n    return provided.draggableProps.style;\n  }\n\n  return {\n    ...provided.draggableProps.style,\n    ...style,\n  };\n};\n\nexport const TaskFooter = ({ task }: { task: ITask }) => {\n  const membersByIds = useSelector(selectMembersEntities);\n  const assignees = task.assignees.map(\n    (assigneeId) => membersByIds[assigneeId]\n  ) as BoardMember[];\n\n  return (\n    <Footer>\n      <CardIcon data-testid=\"task-priority\">\n        <FontAwesomeIcon icon={faArrowUp} color={PRIO_COLORS[task.priority]} />\n      </CardIcon>\n      {assignees.length > 0 && (\n        <Assignees>\n          <AvatarGroup\n            max={3}\n            css={css`\n              & .MuiAvatarGroup-avatar {\n                height: 1.25rem;\n                width: 1.25rem;\n                font-size: 8px;\n                margin-left: -4px;\n                border: none;\n              }\n            `}\n          >\n            {assignees.map((assignee) => (\n              <Avatar\n                key={assignee.id}\n                css={css`\n                  height: 1.25rem;\n                  width: 1.25rem;\n                  font-size: 8px;\n                  margin-left: -12px;\n                `}\n                src={assignee.avatar?.photo}\n                alt={assignee.avatar?.name}\n              >\n                {assignee.username.charAt(0)}\n              </Avatar>\n            ))}\n          </AvatarGroup>\n        </Assignees>\n      )}\n    </Footer>\n  );\n};\n\ninterface Props {\n  task: ITask;\n  style?: Record<string, any>;\n  index: number;\n}\n\nconst Task = ({ task: task, style, index }: Props) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setEditDialogOpen(task.id));\n  };\n\n  return (\n    <Draggable key={task.id} draggableId={`task-${task.id}`} index={index}>\n      {(\n        dragProvided: DraggableProvided,\n        dragSnapshot: DraggableStateSnapshot\n      ) => (\n        <Container\n          isDragging={dragSnapshot.isDragging}\n          isGroupedOver={Boolean(dragSnapshot.combineTargetFor)}\n          ref={dragProvided.innerRef}\n          {...dragProvided.draggableProps}\n          {...dragProvided.dragHandleProps}\n          style={getStyle(dragProvided, style)}\n          data-is-dragging={dragSnapshot.isDragging}\n          data-testid={`task-${task.id}`}\n          data-index={index}\n          aria-label={`task ${task.title}`}\n          onClick={handleClick}\n          css={taskContainerStyles}\n        >\n          <Content>\n            <TextContent>{task.title}</TextContent>\n            <TaskId>id: {task.id}</TaskId>\n            <TaskLabels task={task} />\n            <TaskFooter task={task} />\n          </Content>\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default React.memo<Props>(Task);\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { N80A, N900 } from \"utils/colors\";\nimport { Id } from \"types\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { css } from \"@emotion/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setCreateDialogColumn, setCreateDialogOpen } from \"./TaskSlice\";\n\ninterface Props {\n  columnId: Id;\n  index: number;\n}\n\nconst AddTask = ({ columnId, index }: Props) => {\n  const dispatch = useDispatch();\n\n  const handleOnClick = () => {\n    dispatch(setCreateDialogColumn(columnId));\n    dispatch(setCreateDialogOpen(true));\n  };\n\n  return (\n    <Button\n      css={css`\n        text-transform: inherit;\n        color: ${N80A};\n        padding: 4px 0;\n        margin-top: 6px;\n        margin-bottom: 6px;\n        &:hover {\n          color: ${N900};\n        }\n        &:focus {\n          outline: 2px solid #aaa;\n        }\n        .MuiButton-iconSizeMedium > *:first-of-type {\n          font-size: 12px;\n        }\n      `}\n      startIcon={<FontAwesomeIcon icon={faPlus} />}\n      onClick={handleOnClick}\n      fullWidth\n    >\n      Add card\n    </Button>\n  );\n};\n\nexport default AddTask;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { R50, T50, COLUMN_COLOR } from \"utils/colors\";\nimport { grid, barHeight, taskWidth } from \"const\";\nimport { ITask } from \"types\";\nimport {\n  DroppableProvided,\n  DroppableStateSnapshot,\n  Droppable,\n} from \"react-beautiful-dnd\";\nimport Task from \"./Task\";\nimport AddTask from \"./AddTask\";\nimport { css } from \"@emotion/core\";\n\nexport const getBackgroundColor = (\n  isDraggingOver: boolean,\n  isDraggingFrom: boolean\n): string => {\n  if (isDraggingOver) {\n    return R50;\n  }\n  if (isDraggingFrom) {\n    return T50;\n  }\n  return COLUMN_COLOR;\n};\n\nconst Wrapper = styled.div<{\n  isDraggingOver: boolean;\n  isDraggingFrom: boolean;\n}>`\n  background-color: ${(props) =>\n    getBackgroundColor(props.isDraggingOver, props.isDraggingFrom)};\n  display: flex;\n  flex-direction: column;\n  padding: ${grid}px;\n  border: ${grid}px;\n  padding-bottom: 0;\n  transition: background-color 0.2s ease, opacity 0.1s ease;\n  user-select: none;\n  width: ${taskWidth}px;\n`;\n\nconst scrollContainerHeight = 250;\n\nconst DropZone = styled.div`\n  /* stop the list collapsing when empty */\n  min-height: ${scrollContainerHeight}px;\n  /*\n    not relying on the items for a margin-bottom\n    as it will collapse when the list is empty\n  */\n  padding-bottom: ${grid}px;\n`;\n\nconst Container = styled.div``;\n\ninterface Props {\n  columnId: number;\n  listType: string;\n  tasks: ITask[];\n  index: number;\n}\n\ninterface TaskListProps {\n  tasks: ITask[];\n}\n\nconst InnerTaskList = ({ tasks }: TaskListProps) => (\n  <>\n    {tasks.map((task: ITask, index: number) => (\n      <Task key={task.id} task={task} index={index} />\n    ))}\n  </>\n);\n\ninterface InnerListProps {\n  dropProvided: DroppableProvided;\n  columnId: number;\n  tasks: ITask[];\n  index: number;\n}\n\nconst InnerList = ({\n  columnId,\n  tasks,\n  dropProvided,\n  index,\n}: InnerListProps) => (\n  <Container>\n    <DropZone\n      data-testid=\"drop-zone\"\n      ref={dropProvided.innerRef}\n      css={css`\n        max-height: calc(100vh - ${barHeight * 5}px);\n        overflow-y: scroll;\n      `}\n    >\n      <InnerTaskList tasks={tasks} />\n      {dropProvided.placeholder}\n    </DropZone>\n    <AddTask columnId={columnId} index={index} />\n  </Container>\n);\n\nconst TaskList = ({ columnId, listType, tasks: tasks, index }: Props) => (\n  <Droppable droppableId={columnId.toString()} type={listType}>\n    {(\n      dropProvided: DroppableProvided,\n      dropSnapshot: DroppableStateSnapshot\n    ) => (\n      <Wrapper\n        isDraggingOver={dropSnapshot.isDraggingOver}\n        isDraggingFrom={Boolean(dropSnapshot.draggingFromThisWith)}\n        {...dropProvided.droppableProps}\n      >\n        <InnerList\n          columnId={columnId}\n          tasks={tasks}\n          dropProvided={dropProvided}\n          index={index}\n        />\n      </Wrapper>\n    )}\n  </Droppable>\n);\n\nexport default TaskList;\n","import styled from \"@emotion/styled\";\nimport ColumnTitle from \"components/ColumnTitle\";\nimport { grid } from \"const\";\nimport TaskList from \"features/task/TaskList\";\nimport React from \"react\";\nimport {\n  Draggable,\n  DraggableProvided,\n  DraggableStateSnapshot,\n} from \"react-beautiful-dnd\";\nimport { ITask } from \"types\";\nimport { COLUMN_COLOR } from \"utils/colors\";\n\nconst Container = styled.div`\n  margin: ${grid / 2}px;\n  display: flex;\n  flex-direction: column;\n  border-top: 3px solid #cfd3dc;\n`;\n\nconst Header = styled.div<{ isDragging: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${COLUMN_COLOR};\n  transition: background-color 0.2s ease;\n  [data-rbd-drag-handle-context-id=\"0\"] {\n    cursor: initial;\n  }\n`;\n\ntype Props = {\n  id: number;\n  title: string;\n  tasks: ITask[];\n  index: number;\n};\n\nconst Column = ({ id, title, tasks, index }: Props) => {\n  return (\n    <Draggable draggableId={`col-${id}`} index={index}>\n      {(provided: DraggableProvided, snapshot: DraggableStateSnapshot) => (\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          data-testid={`col-${title}`}\n        >\n          <Header isDragging={snapshot.isDragging}>\n            <ColumnTitle\n              {...provided.dragHandleProps}\n              id={id}\n              title={title}\n              tasksCount={tasks.length}\n              aria-label={`${title} task list`}\n              data-testid=\"column-title\"\n            />\n          </Header>\n          <TaskList columnId={id} listType=\"TASK\" tasks={tasks} index={index} />\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Column;\n","import { TasksByColumn, Id } from \"types\";\nimport { DraggableLocation } from \"react-beautiful-dnd\";\n\n// a little function to help us with reordering the result\nconst reorder = (list: any[], startIndex: number, endIndex: number): any[] => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nexport default reorder;\n\ninterface ReorderTasksArgs {\n  tasksByColumn: TasksByColumn;\n  source: DraggableLocation;\n  destination: DraggableLocation;\n}\n\nexport interface ReorderTasksResult {\n  tasksByColumn: TasksByColumn;\n}\n\nexport const reorderTasks = ({\n  tasksByColumn,\n  source,\n  destination,\n}: ReorderTasksArgs): ReorderTasksResult => {\n  const current: Id[] = [...tasksByColumn[source.droppableId]];\n  const next: Id[] = [...tasksByColumn[destination.droppableId]];\n  const target: Id = current[source.index];\n\n  // moving to same list\n  if (source.droppableId === destination.droppableId) {\n    const reordered: Id[] = reorder(current, source.index, destination.index);\n    const result: TasksByColumn = {\n      ...tasksByColumn,\n      [source.droppableId]: reordered,\n    };\n    return {\n      tasksByColumn: result,\n    };\n  }\n\n  // moving to different list\n\n  // remove from original\n  current.splice(source.index, 1);\n  // insert into next\n  next.splice(destination.index, 0, target);\n\n  const result: TasksByColumn = {\n    ...tasksByColumn,\n    [source.droppableId]: current,\n    [destination.droppableId]: next,\n  };\n\n  return {\n    tasksByColumn: result,\n  };\n};\n","import React from \"react\";\nimport { Fade, CircularProgress } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\n\ninterface Props {\n  loading: boolean;\n}\n\nconst Spinner = ({ loading }: Props) => (\n  <Fade\n    in={loading}\n    style={{\n      transitionDelay: loading ? \"800ms\" : \"0ms\",\n    }}\n    unmountOnExit\n    css={css`\n      padding: 0.5rem;\n    `}\n  >\n    <CircularProgress />\n  </Fade>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport { Alert } from \"@material-ui/lab\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  margin-top: 10rem;\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 1.25rem;\n`;\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nconst PageError = ({ children }: Props) => (\n  <Container>\n    <Alert severity=\"warning\" variant=\"outlined\">\n      {children}\n    </Alert>\n  </Container>\n);\n\nexport default PageError;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  DragDropContext,\n  Droppable,\n  DroppableProvided,\n  DraggableLocation,\n  DropResult,\n} from \"react-beautiful-dnd\";\nimport Column from \"features/column\";\nimport { IColumn } from \"types\";\nimport reorder, { reorderTasks } from \"utils/reorder\";\nimport { RootState } from \"store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateTasksByColumn } from \"features/task/TaskSlice\";\nimport { updateColumns, columnSelectors } from \"features/column/ColumnSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchBoardById } from \"./BoardSlice\";\nimport Spinner from \"components/Spinner\";\nimport { barHeight, sidebarWidth } from \"const\";\nimport PageError from \"components/PageError\";\nimport SEO from \"components/SEO\";\n\nconst BoardContainer = styled.div`\n  min-width: calc(100vw - ${sidebarWidth});\n  min-height: calc(100vh - ${barHeight * 2}px);\n  overflow-x: scroll;\n  display: flex;\n`;\n\nconst ColumnContainer = styled.div`\n  display: inline-flex;\n  width: 100%;\n`;\n\nconst EmptyBoard = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\n\nconst ColumnsBlock = styled.div``;\n\nconst RightMargin = styled.div`\n  /* \n  With overflow-x the right-margin of the rightmost column is hidden.\n  This is a dummy element that fills up the space to make it \n  seem like there's some right margin.\n   */\n  &:after {\n    content: \"\";\n    display: block;\n    width: 0.5rem;\n  }\n`;\n\nconst Board = () => {\n  const detail = useSelector((state: RootState) => state.board.detail);\n  const error = useSelector((state: RootState) => state.board.detailError);\n  const columns = useSelector(columnSelectors.selectAll);\n  const tasksByColumn = useSelector((state: RootState) => state.task.byColumn);\n  const tasksById = useSelector((state: RootState) => state.task.byId);\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  React.useEffect(() => {\n    if (id) {\n      dispatch(fetchBoardById({ boardId: id }));\n    }\n  }, [id]);\n\n  const onDragEnd = (result: DropResult) => {\n    // dropped nowhere\n    if (!result.destination) {\n      return;\n    }\n\n    const source: DraggableLocation = result.source;\n    const destination: DraggableLocation = result.destination;\n\n    // did not move anywhere - can bail early\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    // reordering column\n    if (result.type === \"COLUMN\") {\n      const newOrdered: IColumn[] = reorder(\n        columns,\n        source.index,\n        destination.index\n      );\n      dispatch(updateColumns(newOrdered));\n      return;\n    }\n\n    const data = reorderTasks({\n      tasksByColumn,\n      source,\n      destination,\n    });\n    dispatch(updateTasksByColumn(data.tasksByColumn));\n  };\n\n  const detailDataExists = detail?.id.toString() === id;\n\n  if (error) {\n    return <PageError>{error}</PageError>;\n  }\n\n  if (!detailDataExists) {\n    return <Spinner loading={!detailDataExists} />;\n  }\n\n  return (\n    <>\n      <SEO title={detail?.name} />\n      {columns.length !== 0 ? (\n        <BoardContainer data-testid=\"board-container\">\n          <ColumnsBlock>\n            <DragDropContext onDragEnd={onDragEnd}>\n              <Droppable\n                droppableId=\"board\"\n                type=\"COLUMN\"\n                direction=\"horizontal\"\n              >\n                {(provided: DroppableProvided) => (\n                  <ColumnContainer\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                  >\n                    {columns.map((column: IColumn, index: number) => (\n                      <Column\n                        key={column.id}\n                        id={column.id}\n                        title={column.title}\n                        index={index}\n                        tasks={tasksByColumn[column.id].map(\n                          (taskId) => tasksById[taskId]\n                        )}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </ColumnContainer>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </ColumnsBlock>\n          <RightMargin />\n        </BoardContainer>\n      ) : (\n        <EmptyBoard>This board is empty.</EmptyBoard>\n      )}\n    </>\n  );\n};\n\nexport default Board;\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  DialogContentText,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createBoard, setCreateDialogOpen } from \"./BoardSlice\";\nimport { RootState } from \"store\";\nimport { Alert } from \"@material-ui/lab\";\nimport { css } from \"@emotion/core\";\nimport { boardCardBaseStyles } from \"styles\";\nimport { useForm } from \"react-hook-form\";\nimport getMetaKey from \"utils/shortcuts\";\n\nconst openBtnStyles = css`\n  ${boardCardBaseStyles}\n  background-color: #d0d2d5;\n  color: blue;\n  width: 100%;\n  font-size: 0.9rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background-color: #d0d2d5;\n  }\n`;\n\ninterface FormData {\n  name: string;\n}\n\nconst NewBoardDialog = () => {\n  const dispatch = useDispatch();\n  const error = useSelector((state: RootState) => state.board.createError);\n  const open = useSelector((state: RootState) => state.board.createDialogOpen);\n  const { register, handleSubmit, errors, reset } = useForm<FormData>();\n\n  const handleOpen = () => {\n    reset();\n    dispatch(setCreateDialogOpen(true));\n  };\n\n  const handleClose = () => {\n    dispatch(setCreateDialogOpen(false));\n  };\n\n  const onSubmit = handleSubmit(({ name }) => {\n    dispatch(createBoard(name));\n  });\n\n  return (\n    <div>\n      <Button\n        style={{\n          maxWidth: \"240px\",\n          maxHeight: \"50px\",\n          marginTop: \"10px\",\n        }}\n        css={openBtnStyles}\n        onClick={handleOpen}\n      >\n        Create board\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"new-board\"\n        fullWidth\n        maxWidth=\"xs\"\n      >\n        <DialogTitle id=\"new-board-title\">New board</DialogTitle>\n        <form onSubmit={onSubmit}>\n          <DialogContent>\n            <DialogContentText>\n              Create a new private board. Only members of the board will be able\n              to see and edit it.\n            </DialogContentText>\n            {error && <Alert severity=\"error\">{error}</Alert>}\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"board-name\"\n              label=\"Board name\"\n              fullWidth\n              name=\"name\"\n              inputRef={register({\n                required: \"This field is required\",\n                maxLength: {\n                  value: 50,\n                  message: \"This field can't be more than 50 chars long.\",\n                },\n              })}\n              helperText={errors.name?.message}\n              error={Boolean(errors.name)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={onSubmit}\n              color=\"primary\"\n              data-testid=\"create-board-btn\"\n            >\n              Create Board\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default NewBoardDialog;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Container, Grid, Tooltip } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllBoards, setCreateDialogOpen } from \"./BoardSlice\";\nimport { RootState } from \"store\";\nimport { css, SerializedStyles, keyframes } from \"@emotion/core\";\nimport { Link } from \"react-router-dom\";\nimport NewBoardDialog from \"./NewBoardDialog\";\nimport Spinner from \"components/Spinner\";\nimport SEO from \"components/SEO\";\nimport { boardCardBaseStyles } from \"styles\";\nimport { faUserAlt, faTh } from \"@fortawesome/free-solid-svg-icons\";\nimport { OWNER_COLOR } from \"utils/colors\";\n\nconst BoardsSection = styled.div`\n  margin-top: 2rem;\n  text-align: left;\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-bottom: 1rem;\n  color: #333;\n`;\n\nconst TitleText = styled.span`\n  margin-left: 0.75rem;\n  font-size: 18px;\n`;\n\nconst Cards = styled.div`\n  width: 100%;\n`;\n\nconst Fade = styled.div`\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 6px;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n`;\n\nconst OwnerBadge = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 1;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 10px;\n  background-color: ${OWNER_COLOR};\n  color: #fff;\n  padding: 4px 6px;\n  border-radius: 6px;\n`;\n\nconst boardCardStyles = css`\n  ${boardCardBaseStyles}\n  background-color: #a2abf9;\n  color: #fff;\n`;\n\ninterface CardProps {\n  cardCss: SerializedStyles;\n  to: string;\n  isOwner: boolean;\n  children: React.ReactNode;\n}\n\nconst scaleUp = keyframes`\n    0% {\n        transform: scale(1.0);\n    }\n    100% {\n        transform: scale(1.05);\n    }\n`;\n\nconst Card = ({ cardCss, to, isOwner, children }: CardProps) => {\n  const [hover, setHover] = React.useState(false);\n\n  return (\n    <Grid item xs={6} sm={4} key=\"new-board\">\n      {isOwner && (\n        <Tooltip title=\"Owner of this board\" placement=\"top\" arrow>\n          <OwnerBadge>\n            <FontAwesomeIcon icon={faUserAlt} />\n          </OwnerBadge>\n        </Tooltip>\n      )}\n      <Link\n        css={cardCss}\n        to={to}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        {hover && <Fade data-testid=\"fade\" />}\n        {children}\n      </Link>\n    </Grid>\n  );\n};\n\nconst BoardList = () => {\n  const dispatch = useDispatch();\n  const loading = useSelector((state: RootState) => state.board.fetchLoading);\n  const boards = useSelector((state: RootState) => state.board.all);\n  const userId = useSelector((state: RootState) => state.auth.user?.id);\n\n  React.useEffect(() => {\n    dispatch(fetchAllBoards());\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (e.key === \"b\" && e.metaKey) {\n        dispatch(setCreateDialogOpen(true));\n      }\n    };\n\n    document.addEventListener(\"keydown\", (e) => handleKeydown(e));\n    return () => document.removeEventListener(\"keydown\", handleKeydown);\n  }, []);\n\n  if (loading && boards.length === 0) {\n    return <Spinner loading={loading} />;\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <SEO title=\"Boards\" />\n      <BoardsSection>\n        <Title>\n          <FontAwesomeIcon icon={faTh} />\n          <TitleText>All Boards</TitleText>\n          <Grid sm={2}>\n            <NewBoardDialog />\n          </Grid>\n        </Title>\n        <Cards>\n          <Grid container spacing={2}>\n            {boards.map((board) => {\n              return (\n                <Card\n                  key={board.id}\n                  cardCss={boardCardStyles}\n                  to={`/b/${board.id}`}\n                  isOwner={board.owner === userId}\n                >\n                  {board.name}\n                </Card>\n              );\n            })}\n          </Grid>\n        </Cards>\n      </BoardsSection>\n    </Container>\n  );\n};\n\nexport default BoardList;\n","/*import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Button, TextField, DialogContent, Dialog } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport axios from \"api\";\nimport { User } from \"types\";\nimport { changePassword } from \"../features/auth/AuthSlice\";\nimport { createInfoToast, initialState } from \"features/toast/ToastSlice\";\nimport Token from \"markdown-it/lib/token\";\n\ninterface PopupProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst PopupOverlay = styled.div<{ isOpen: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 999;\n  transition: opacity 0.3s ease;\n  opacity: ${({ isOpen }) => (isOpen ? 1 : 0)};\n`;\n\nconst PopupContent = styled.div<{ isOpen: boolean }>`\n  background-color: white;\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n  transition: transform 0.3s ease;\n  transform: scale(${({ isOpen }) => (isOpen ? 1 : 0.8)});\n`;\n\nconst Popup: React.FC<PopupProps> = ({ isOpen, onClose }) => {\n  const dispatch = useDispatch();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const loading = useSelector((state: RootState) => state.auth.loginLoading);\n  const handleChangePassword = async () => {\n    if (newPassword === rePassword) {\n      createInfoToast(`${changePassword(newPassword)}`);\n    } else {\n      setError(\"Passwords do not match\");\n    }\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <PopupOverlay isOpen={isOpen}>\n          <PopupContent isOpen={isOpen}>\n            <div className=\"popup-content\">\n              <DialogContent>\n                <TextField\n                  autoFocus\n                  name=\"newpassword\"\n                  margin=\"dense\"\n                  id=\"newpassword\"\n                  label=\"New Password\"\n                  variant=\"outlined\"\n                  fullWidth\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                />\n                <TextField\n                  name=\"repassword\"\n                  margin=\"dense\"\n                  id=\"repassword\"\n                  label=\"Re-Password\"\n                  variant=\"outlined\"\n                  type=\"password\"\n                  fullWidth\n                  value={rePassword}\n                  onChange={(e) => setRePassword(e.target.value)}\n                  error={error !== \"\"}\n                  helperText={error}\n                />\n                <div style={{ marginTop: \"20px\", textAlign: \"right\" }}>\n                  <Button variant=\"text\" onClick={onClose}>\n                    Cancel\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"button\"\n                    onClick={handleChangePassword}\n                    style={{ marginLeft: \"20px\" }}\n                  >\n                    Change Password\n                  </Button>\n                  <h1></h1>\n                </div>\n              </DialogContent>\n            </div>\n          </PopupContent>\n        </PopupOverlay>\n      )}\n    </>\n  );\n};\n\nexport default Popup;*/\n\nimport React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Button,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { changePassword } from \"../features/auth/AuthSlice\";\n\nconst MyDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setNewPassword(\"\");\n    setRePassword(\"\");\n    setError(\"\");\n  };\n\n  const handleChangePassword = () => {\n    if (newPassword !== rePassword) {\n      setError(\"Passwords do not match\");\n    } else {\n      setError(\"\");\n      // Proceed with the password change logic\n      changePassword(newPassword);\n      handleClose();\n    }\n  };\n\n  return (\n    <div>\n      <MenuItem onClick={handleClickOpen}>Change Password</MenuItem>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{\"Change Password Here\"}</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            name=\"newpassword\"\n            margin=\"dense\"\n            id=\"newpassword\"\n            label=\"New Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            fullWidth\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <TextField\n            name=\"repassword\"\n            margin=\"dense\"\n            id=\"repassword\"\n            label=\"Re-Password\"\n            variant=\"outlined\"\n            type=\"password\"\n            fullWidth\n            value={rePassword}\n            onChange={(e) => setRePassword(e.target.value)}\n            error={error !== \"\"}\n            helperText={error}\n          />\n        </DialogContent>\n        <DialogActions style={{ marginRight: \"20px\", marginBottom: \"20px\" }}>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={handleChangePassword}\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n          >\n            Change\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default MyDialog;\n","import React, { useState } from \"react\";\nimport { Button, Menu, MenuItem, Avatar, Dialog } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { createInfoToast } from \"features/toast/ToastSlice\";\nimport { logout } from \"features/auth/AuthSlice\";\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { avatarStyles } from \"styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Popup from \"./Popup\";\nimport MyDialog from \"./Popup\";\n\nconst Username = styled.div`\n  color: #333;\n  text-align: center;\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 0.5rem;\n  max-width: 200px;\n  word-break: break-all;P\n  padding: 0.25rem 1rem 0.5rem 1rem;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst UserMenu = () => {\n  const user = useSelector((state: RootState) => state.auth.user);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleNotImplemented = () => {\n    dispatch(createInfoToast(\"Not implemented yet 😟\"));\n  };\n\n  const handleLogout = () => {\n    setAnchorEl(null);\n    dispatch(logout());\n    history.push(\"/\");\n  };\n\n  const handleToProfile = () => {\n    setAnchorEl(null);\n    history.push(\"/profile\");\n  };\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const openPopup = () => {\n    setIsPopupOpen(true);\n  };\n\n  return (\n    <>\n      <Button\n        aria-controls=\"user-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        data-testid=\"user-menu\"\n        css={css`\n          min-width: 1.5rem;\n          padding: 0;\n          border-radius: 50%;\n          &:hover {\n            background-color: initial;\n          }\n        `}\n      >\n        <Avatar\n          css={avatarStyles}\n          src={user && user.photo_url ? user.photo_url : \"\"}\n          alt=\"user-avatar\"\n        />\n      </Button>\n      <Menu\n        id=\"user-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        transitionDuration={0}\n        keepMounted\n      >\n        <Username>{user?.username}</Username>\n        <MyDialog />\n        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default UserMenu;\n\n// create it under menu\n/*{isPopupOpen && (\n        <Popup isOpen={isPopupOpen} onClose={() => setIsPopupOpen(false)} />\n      )}*/\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { barHeight } from \"const\";\nimport UserMenu from \"./UserMenu\";\nimport { faRocket, faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { setMobileDrawerOpen } from \"features/responsive/ResponsiveSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { Hidden } from \"@material-ui/core\";\n\nconst Container = styled.div`\n  min-height: ${barHeight}px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  border-bottom: 1px solid #999;\n`;\n\nconst Item = styled.div`\n  font-size: 1rem;\n  color: #333;\n`;\n\nconst Icons = styled.div`\n  font-size: 1.25rem;\n  a {\n    color: #888;\n    &:hover {\n      color: #333;\n    }\n  }\n  .active {\n    color: #333;\n  }\n`;\n\nconst Navbar = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <Item>\n        <Icons>\n          <Hidden smUp implementation=\"css\">\n            <FontAwesomeIcon\n              icon={faBars}\n              onClick={() => dispatch(setMobileDrawerOpen(true))}\n            />\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <FontAwesomeIcon icon={faRocket} />\n          </Hidden>\n        </Icons>\n      </Item>\n      <Item>Knboard</Item>\n      <Item>\n        <UserMenu />\n      </Item>\n    </Container>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport { ReactComponent as Hero } from \"static/svg/board.svg\";\nimport { css } from \"@emotion/core\";\nimport SEO from \"components/SEO\";\nimport Popup from \"components/Popup\";\nimport MyDialog from \"components/Popup\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst HeroContainer = styled.div``;\n\nconst Home = () => {\n  /*const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const openPopup = () => {\n    setIsPopupOpen(true);\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n  };*/\n  return (\n    <Container>\n      <SEO title=\"Home\" />\n      <HeroContainer>\n        <Hero width={560} height={560} />\n      </HeroContainer>\n\n      <Link\n        css={css`\n          text-decoration: none;\n          color: #333;\n        `}\n        to=\"/boards/\"\n      >\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ textTransform: \"none\" }}\n        >\n          View Boards\n        </Button>\n      </Link>\n    </Container>\n  );\n};\n\nexport default Home;\n// create it upon Link\n/*<div>\n        <Popup isOpen={isPopupOpen} onClose={closePopup} />\n      </div>*/\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Key } from \"const\";\nimport { TextareaAutosize } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport { useDispatch } from \"react-redux\";\nimport { Id } from \"types\";\nimport { patchBoard } from \"features/board/BoardSlice\";\n\nconst Container = styled.div`\n  color: #6869f6;\n  textarea {\n    color: #6869f6;\n    font-weight: bold;\n  }\n`;\n\ninterface Props {\n  id: Id;\n  name: string;\n  isOwner: boolean;\n}\n\nconst BoardName = ({ id, name, isOwner, ...props }: Props) => {\n  const dispatch = useDispatch();\n  const [pendingName, setPendingName] = useState<string>(name);\n  const [editing, setEditing] = useState<boolean>(false);\n  const nameTextAreaRef = useRef<HTMLTextAreaElement>(null);\n\n  useEffect(() => {\n    if (!editing && name === pendingName) {\n      nameTextAreaRef?.current?.blur();\n    }\n  }, [pendingName, editing]);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === Key.Enter) {\n      e.preventDefault();\n      if (pendingName.length > 0) {\n        nameTextAreaRef?.current?.blur();\n      }\n    }\n    if (e.keyCode === Key.Escape) {\n      e.preventDefault();\n      setPendingName(name);\n      setEditing(false);\n      // blur via useEffect\n    }\n  };\n\n  const handleSave = () => {\n    if (editing && pendingName.length > 0) {\n      setEditing(false);\n      if (pendingName !== name) {\n        dispatch(patchBoard({ id, fields: { name: pendingName } }));\n      }\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setPendingName(e.target.value);\n  };\n\n  const handleFocus = (e: React.FocusEvent<HTMLTextAreaElement>) => {\n    e.target.select();\n  };\n\n  return (\n    <Container {...props}>\n      {editing ? (\n        <div>\n          <TextareaAutosize\n            ref={nameTextAreaRef}\n            value={pendingName}\n            onChange={handleChange}\n            onBlur={handleSave}\n            onKeyDown={handleKeyDown}\n            data-testid=\"board-name-textarea\"\n            onFocus={handleFocus}\n            autoFocus\n          />\n        </div>\n      ) : (\n        <div\n          css={css`\n            ${isOwner && `&:hover {cursor: pointer;}`}\n          `}\n          onClick={() => setEditing(isOwner)}\n        >\n          {pendingName}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default BoardName;\n","import React from \"react\";\nimport { Avatar as UserAvatar } from \"types\";\nimport { Chip, Avatar, ChipProps } from \"@material-ui/core\";\n\ninterface Option {\n  id: number;\n  username: string;\n  avatar: UserAvatar | null;\n}\n\ninterface Props extends ChipProps {\n  option: Option;\n}\n\nconst AvatarTag = ({ option, ...rest }: Props) => {\n  return (\n    <Chip\n      key={option.id}\n      avatar={<Avatar alt={option.avatar?.name} src={option.avatar?.photo} />}\n      variant=\"outlined\"\n      label={option.username}\n      size=\"small\"\n      {...rest}\n    />\n  );\n};\n\nexport default AvatarTag;\n","import React from \"react\";\nimport { Avatar as UserAvatar } from \"types\";\nimport { Avatar, ChipProps } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\n\nconst Username = styled.span`\n  margin-left: 0.5rem;\n  word-break: break-all;\n`;\n\ninterface Option {\n  id: number;\n  username: string;\n  avatar: UserAvatar | null;\n}\n\ninterface Props extends ChipProps {\n  option: Option;\n}\n\nconst AvatarOption = ({ option }: Props) => {\n  return (\n    <>\n      <Avatar\n        css={css`\n          height: 1.5rem;\n          width: 1.5rem;\n        `}\n        alt={option.avatar?.name}\n        src={option.avatar?.photo}\n      />\n      <Username>{option.username}</Username>\n    </>\n  );\n};\n\nexport default AvatarOption;\n","import React, { useState, useEffect } from \"react\";\nimport { TextField, CircularProgress, useTheme } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport api, { API_SEARCH_USERS } from \"api\";\nimport { useDebounce } from \"use-debounce\";\nimport AvatarTag from \"./AvatarTag\";\nimport { Avatar } from \"types\";\nimport AvatarOption from \"./AvatarOption\";\nimport { css } from \"@emotion/core\";\n\nexport interface UserOption {\n  id: number;\n  username: string;\n  avatar: Avatar | null;\n}\n\ninterface Props {\n  boardId: number;\n  tagsValue: UserOption[];\n  setTagsValue: (val: UserOption[]) => void;\n}\n\nconst UserSearch = ({ boardId, tagsValue, setTagsValue }: Props) => {\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState<UserOption[]>([]);\n  const [debouncedInput] = useDebounce(inputValue, 300, {\n    equalityFn: (a, b) => a === b,\n  });\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n      setLoading(false);\n    }\n  }, [open]);\n\n  useEffect(() => {\n    if (inputValue) {\n      setLoading(true);\n    }\n  }, [inputValue]);\n\n  useEffect(() => {\n    const source = api.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response = await api(\n          `${API_SEARCH_USERS}?board=${boardId}&search=${inputValue}`,\n          { cancelToken: source.token }\n        );\n        setLoading(false);\n        setOptions(response.data);\n      } catch (err) {\n        if (!api.isCancel(err)) {\n          console.error(err);\n        }\n      }\n    };\n\n    if (inputValue === \"\") {\n      setLoading(false);\n      setOptions([]);\n    } else {\n      fetchData();\n    }\n\n    return () => {\n      source.cancel(\"unmount/debouncedInput changed\");\n    };\n  }, [debouncedInput, tagsValue]);\n\n  useEffect(() => {\n    if (debouncedInput === inputValue) {\n      setLoading(false);\n    }\n  }, [debouncedInput, inputValue]);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleTagsChange = (_event: React.ChangeEvent<{}>, newValues: any) => {\n    setTagsValue(newValues);\n    setOptions([]);\n  };\n\n  return (\n    <Autocomplete\n      multiple\n      id=\"user-search\"\n      size=\"small\"\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      getOptionSelected={(option, value) => option.username === value.username}\n      getOptionLabel={(option) => option.username}\n      filterSelectedOptions\n      onChange={handleTagsChange}\n      options={options}\n      loading={loading}\n      value={tagsValue}\n      renderOption={(option) => <AvatarOption option={option} />}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          autoFocus\n          label=\"Search username\"\n          variant=\"outlined\"\n          onChange={handleInputChange}\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading && <CircularProgress color=\"inherit\" size={20} />}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <AvatarTag\n            key={option.id}\n            option={option}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n      css={css`\n        width: ${theme.breakpoints.down(\"xs\") ? 200 : 300}px;\n      `}\n    />\n  );\n};\n\nexport default UserSearch;\n","import React, { useState } from \"react\";\nimport { Button, Popover, Box } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport UserSearch, { UserOption } from \"components/UserSearch\";\nimport api, { API_BOARDS } from \"api\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  createErrorToast,\n  createSuccessToast,\n} from \"features/toast/ToastSlice\";\nimport { BoardMember } from \"types\";\nimport { addBoardMembers } from \"features/member/MemberSlice\";\n\nconst InviteMember = styled.div`\n  margin-left: 0.5rem;\n`;\n\nconst Content = styled.div`\n  padding: 2rem;\n`;\n\nconst Description = styled.p`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  font-size: 0.875rem;\n  font-weight: bold;\n`;\n\ninterface Props {\n  boardId: number;\n}\n\nconst MemberInvite = ({ boardId }: Props) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [tagsValue, setTagsValue] = useState<UserOption[]>([]);\n  const dispatch = useDispatch();\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const postInviteMember = async (users: number[]) => {\n    try {\n      const response = await api.post(\n        `${API_BOARDS}${boardId}/invite_member/`,\n        { users }\n      );\n      const newMembers = response.data as BoardMember[];\n      dispatch(addBoardMembers(newMembers));\n      dispatch(\n        createSuccessToast(\n          `Invited ${newMembers.map((m) => m.username).join(\", \")}`\n        )\n      );\n      handleClose();\n      setTagsValue([]);\n    } catch (err) {\n      dispatch(createErrorToast(err.toString()));\n    }\n  };\n\n  const handleClickInvite = () => {\n    postInviteMember(tagsValue.map((v) => v.id));\n  };\n\n  return (\n    <>\n      <InviteMember>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          css={css`\n            text-transform: none;\n          `}\n          onClick={handleClick}\n          aria-controls=\"member-invite-menu\"\n          aria-haspopup=\"true\"\n          data-testid=\"member-invite\"\n        >\n          Invite\n        </Button>\n      </InviteMember>\n      <Popover\n        id=\"member-invite-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        transitionDuration={0}\n      >\n        <Content>\n          <Description>Invite to this board</Description>\n          <Box display=\"flex\" alignItems=\"center\">\n            <UserSearch\n              boardId={boardId}\n              tagsValue={tagsValue}\n              setTagsValue={setTagsValue}\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              css={css`\n                font-size: 0.625rem;\n                margin-left: 0.5rem;\n              `}\n              onClick={handleClickInvite}\n              data-testid=\"invite-selected\"\n              disabled={tagsValue.length === 0}\n            >\n              Invite\n            </Button>\n          </Box>\n        </Content>\n      </Popover>\n    </>\n  );\n};\n\nexport default MemberInvite;\n","import React from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport { BoardMember } from \"types\";\nimport { avatarStyles } from \"styles\";\nimport { css, keyframes } from \"@emotion/core\";\nimport { useDispatch } from \"react-redux\";\nimport { setDialogMember } from \"features/member/MemberSlice\";\nimport { OWNER_COLOR } from \"utils/colors\";\n\nconst scaleUp = keyframes`\n    0% {\n        transform: scale(1.0);\n    }\n    100% {\n        transform: scale(1.15);\n    }\n`;\n\nconst animationStyles = css`\n  animation: 0.2s ${scaleUp} forwards;\n`;\n\ninterface Props {\n  member: BoardMember;\n  isOwner: boolean;\n}\n\nconst MemberDetail = ({ member, isOwner }: Props) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(setDialogMember(member.id));\n  };\n\n  return (\n    <Avatar\n      css={css`\n        ${avatarStyles}\n        ${isOwner &&\n        `border: 1px solid ${OWNER_COLOR}; border-radius: 50%;`}\n        &:hover {\n          ${animationStyles}\n        }\n      `}\n      onClick={handleClick}\n      data-testid={`member-${member.id}`}\n      src={member?.avatar?.photo}\n      alt={member?.avatar?.name}\n    >\n      {member.username.charAt(0)}\n    </Avatar>\n  );\n};\n\nexport default MemberDetail;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  Avatar,\n  Button,\n  Fab,\n  useMediaQuery,\n  useTheme,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { BoardMember, Board, WithTheme } from \"types\";\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport api, { API_BOARDS } from \"api\";\nimport {\n  createSuccessToast,\n  createErrorToast,\n} from \"features/toast/ToastSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  removeBoardMember,\n  setDialogMember,\n  selectMembersEntities,\n} from \"features/member/MemberSlice\";\nimport { RootState } from \"store\";\nimport { currentBoardOwner } from \"features/board/BoardSlice\";\nimport Close from \"components/Close\";\n\nconst Container = styled.div<WithTheme>`\n  display: flex;\n  align-items: center;\n  padding: 0.5rem 2rem 2rem 2rem;\n  ${(props) => props.theme.breakpoints.down(\"xs\")} {\n    flex-direction: column;\n  }\n`;\n\nconst PrimaryText = styled.h3`\n  margin-top: 0;\n  word-break: break-all;\n`;\n\nconst Main = styled.div`\n  margin-left: 2rem;\n  font-size: 16px;\n`;\n\nconst SecondaryText = styled.p`\n  margin: 0;\n  font-size: 14px;\n  color: #777;\n  word-break: break-all;\n`;\n\nconst ConfirmAction = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\ninterface Props {\n  board: Board;\n}\n\nconst MemberDialog = ({ board }: Props) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const memberId = useSelector((state: RootState) => state.member.dialogMember);\n  const members = useSelector(selectMembersEntities);\n  const boardOwner = useSelector((state: RootState) =>\n    currentBoardOwner(state)\n  );\n  const xsDown = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const member = memberId === null ? null : members[memberId];\n  const memberIsOwner = member?.id === board.owner;\n  const open = member !== null;\n\n  if (!member) {\n    return null;\n  }\n\n  const handleClose = () => {\n    dispatch(setDialogMember(null));\n    setConfirmDelete(false);\n  };\n\n  const handleRemoveMember = async () => {\n    try {\n      const response = await api.post(\n        `${API_BOARDS}${board.id}/remove_member/`,\n        { username: member.username }\n      );\n      const removedMember = response.data as BoardMember;\n      dispatch(removeBoardMember(removedMember.id));\n      dispatch(createSuccessToast(`Removed ${removedMember.username}`));\n      handleClose();\n    } catch (err) {\n      dispatch(createErrorToast(err.toString()));\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"xs\"\n      fullWidth\n      fullScreen={xsDown}\n    >\n      <Close onClose={handleClose} />\n      <DialogTitle id=\"member-detail\">Member</DialogTitle>\n      <Container theme={theme}>\n        {confirmDelete ? (\n          <div>\n            <Alert\n              severity=\"error\"\n              css={css`\n                margin-bottom: 2rem;\n              `}\n            >\n              Are you sure you want to remove this member? This member will be\n              removed from all cards.\n            </Alert>\n            <ConfirmAction>\n              <Fab\n                size=\"small\"\n                onClick={() => setConfirmDelete(false)}\n                css={css`\n                  box-shadow: none;\n                  &.MuiFab-sizeSmall {\n                    width: 32px;\n                    height: 32px;\n                  }\n                `}\n              >\n                <FontAwesomeIcon icon={faAngleLeft} color=\"#555\" />\n              </Fab>\n              <Button\n                size=\"small\"\n                color=\"secondary\"\n                variant=\"contained\"\n                onClick={handleRemoveMember}\n                css={css`\n                  font-size: 0.625rem;\n                `}\n              >\n                Remove member\n              </Button>\n            </ConfirmAction>\n          </div>\n        ) : (\n          <>\n            <Avatar\n              css={css`\n                height: 6rem;\n                width: 6rem;\n                font-size: 36px;\n                margin-bottom: 1rem;\n              `}\n              src={member?.avatar?.photo}\n              alt={member?.avatar?.name}\n            >\n              {member.username.charAt(0)}\n            </Avatar>\n            <Main>\n              <PrimaryText>\n                {member.first_name} {member.last_name}\n              </PrimaryText>\n              <SecondaryText>\n                username: <b>{member.username}</b>\n              </SecondaryText>\n              <SecondaryText\n                css={css`\n                  margin-bottom: 1.5rem;\n                `}\n              >\n                email: <b>{member?.email || \"-\"}</b>\n              </SecondaryText>\n              {memberIsOwner && (\n                <Alert severity=\"info\">Owner of this board</Alert>\n              )}\n              {boardOwner && !memberIsOwner && (\n                <Button\n                  size=\"small\"\n                  css={css`\n                    color: #333;\n                    font-size: 0.625rem;\n                  `}\n                  variant=\"outlined\"\n                  onClick={() => setConfirmDelete(true)}\n                >\n                  Remove from board\n                </Button>\n              )}\n            </Main>\n          </>\n        )}\n      </Container>\n    </Dialog>\n  );\n};\n\nexport default MemberDialog;\n","const getMetaKey = () =>\n  navigator.platform.indexOf(\"Mac\") > -1 ? \"⌘\" : \"ctrl\";\n\nexport default getMetaKey;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { PRIO_COLORS } from \"const\";\nimport { Priority } from \"types\";\nimport styled from \"@emotion/styled\";\n\ninterface Props {\n  option: Priority;\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst PrioLabel = styled.div`\n  margin-left: 1rem;\n`;\n\nconst PriorityOption = ({ option }: Props) => {\n  return (\n    <Container>\n      <FontAwesomeIcon\n        icon={faArrowUp}\n        color={PRIO_COLORS[option.value]}\n        data-testid=\"priority-icon\"\n      />\n      <PrioLabel>{option.label}</PrioLabel>\n    </Container>\n  );\n};\n\nexport default PriorityOption;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Dialog,\n  TextField,\n  Button,\n  CircularProgress,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { RootState } from \"store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRocket } from \"@fortawesome/free-solid-svg-icons\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\n\nimport { setCreateDialogOpen, createTask } from \"./TaskSlice\";\nimport { PRIMARY } from \"utils/colors\";\nimport {\n  PRIORITY_OPTIONS,\n  PRIORITY_2,\n  MD_EDITOR_PLUGINS,\n  MD_EDITOR_CONFIG,\n  Key,\n} from \"const\";\nimport { selectAllMembers } from \"features/member/MemberSlice\";\nimport {\n  Priority,\n  BoardMember,\n  Label,\n  ReporterMember,\n  SpectatorMember,\n} from \"types\";\nimport { createMdEditorStyles } from \"styles\";\nimport AvatarTag from \"components/AvatarTag\";\nimport AvatarOption from \"components/AvatarOption\";\nimport { selectAllLabels } from \"features/label/LabelSlice\";\nimport getMetaKey from \"utils/shortcuts\";\nimport LabelChip from \"components/LabelChip\";\nimport PriorityOption from \"components/PriorityOption\";\nimport { createInfoToast } from \"features/toast/ToastSlice\";\nimport { set } from \"date-fns\";\n\nconst mdParser = new MarkdownIt();\n\nconst DialogTitle = styled.h3`\n  color: ${PRIMARY};\n  margin-top: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n`;\n\nconst EditorWrapper = styled.div`\n  margin: 1rem 0;\n  ${createMdEditorStyles(false)}\n  .rc-md-editor {\n    min-height: 160px;\n  }\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  border-top: 1px solid #ccc;\n  padding: 1rem 2rem;\n`;\n\nconst CreateTaskDialog = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const labelsOptions = useSelector(selectAllLabels);\n  const members = useSelector(selectAllMembers);\n  const open = useSelector((state: RootState) => state.task.createDialogOpen);\n  const columnId = useSelector(\n    (state: RootState) => state.task.createDialogColumn\n  );\n  const createLoading = useSelector(\n    (state: RootState) => state.task.createLoading\n  );\n  const [titleTouched, setTitleTouched] = useState<boolean>(false);\n  const [title, setTitle] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [assignees, setAssignees] = useState<BoardMember[]>([]);\n  const [reporters, setReporters] = useState<ReporterMember[]>([]);\n  const [spectators, setSpectators] = useState<SpectatorMember[]>([]);\n  const [priority, setPriority] = useState<Priority | null>({\n    value: \"M\",\n    label: \"Medium\",\n  });\n  const [labels, setLabels] = useState<Label[]>([]);\n  const xsDown = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const handleEditorChange = ({ text }: any) => {\n    setDescription(text);\n  };\n\n  const setInitialValues = () => {\n    console.log(\"================\");\n    if (columnId) {\n      setTitleTouched(false);\n      setTitle(\"\");\n      setDescription(\"\"); // Set the first member as the default assignee\n      setPriority(PRIORITY_2);\n      setLabels([]);\n    }\n  };\n\n  useEffect(() => {\n    setInitialValues();\n  }, [open]);\n\n  const handleClose = () => {\n    if (window.confirm(\"Are you sure? Any progress made will be lost.\")) {\n      dispatch(setCreateDialogOpen(false));\n    }\n  };\n\n  const handleCreate = async () => {\n    setTitleTouched(true);\n    if (columnId && priority) {\n      const newTask = {\n        title,\n        description,\n        column: columnId,\n        labels: labels.map((l) => l.id),\n        assignees: assignees.map((a) => a.id),\n        reporter: reporters.map((b) => b.id),\n        spectators: spectators.map((c) => c.id),\n        priority: priority.value,\n      };\n      console.log(newTask);\n      dispatch(createTask(newTask));\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === Key.Enter && e.metaKey) {\n      handleCreate();\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"sm\"\n      fullWidth\n      keepMounted={false}\n      fullScreen={xsDown}\n    >\n      <Content onKeyDown={handleKeyDown}>\n        <DialogTitle>New issue</DialogTitle>\n\n        <TextField\n          autoFocus\n          id=\"create-task-title\"\n          data-testid=\"create-task-title\"\n          label=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          variant=\"outlined\"\n          fullWidth\n          size=\"small\"\n          onBlur={() => setTitleTouched(true)}\n          error={titleTouched && !title}\n        />\n\n        <EditorWrapper>\n          <MdEditor\n            plugins={MD_EDITOR_PLUGINS}\n            config={MD_EDITOR_CONFIG}\n            value={description}\n            renderHTML={(text) => mdParser.render(text)}\n            onChange={handleEditorChange}\n            placeholder=\"Describe the issue...\"\n          />\n        </EditorWrapper>\n\n        <Autocomplete\n          multiple\n          filterSelectedOptions\n          disableClearable\n          openOnFocus\n          id=\"create-assignee-select\"\n          size=\"small\"\n          options={members}\n          getOptionLabel={(option) => option.username}\n          value={assignees}\n          onChange={(_event, value) => setAssignees(value)}\n          renderOption={(option) => <AvatarOption option={option} />}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Assignees\" variant=\"outlined\" />\n          )}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <AvatarTag\n                key={option.id}\n                option={option}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          css={css`\n            width: 100%;\n            margin-top: 1rem;\n          `}\n        />\n        <Autocomplete\n          multiple\n          filterSelectedOptions\n          disableClearable\n          openOnFocus\n          id=\"create-assignee-select\"\n          size=\"small\"\n          options={members}\n          getOptionLabel={(option) => option.username}\n          // Remove the 'value' prop to allow manual selection\n          onChange={(_event, value) => setReporters(value)} // Update the assignees state on change\n          renderOption={(option) => <AvatarOption option={option} />}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Reporter\" variant=\"outlined\" />\n          )}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <AvatarTag\n                key={option.id}\n                option={option}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          css={css`\n            width: 100%;\n            margin-top: 1rem;\n          `}\n        />\n        <Autocomplete\n          multiple\n          filterSelectedOptions\n          disableClearable\n          openOnFocus\n          id=\"create-assignee-select\"\n          size=\"small\"\n          options={members}\n          getOptionLabel={(option) => option.username}\n          // Remove the 'value' prop to allow manual selection\n          onChange={(_event, value) => setSpectators(value)} // Update the assignees state on change\n          renderOption={(option) => <AvatarOption option={option} />}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Spectators\" variant=\"outlined\" />\n          )}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <AvatarTag\n                key={option.id}\n                option={option}\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          css={css`\n            width: 100%;\n            margin-top: 1rem;\n          `}\n        />\n        <Autocomplete\n          id=\"create-priority-select\"\n          size=\"small\"\n          autoHighlight\n          options={PRIORITY_OPTIONS}\n          getOptionLabel={(option) => option.label}\n          value={priority}\n          onChange={(_: any, value: Priority | null) => setPriority(value)}\n          renderOption={(option) => <PriorityOption option={option} />}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Priority\" variant=\"outlined\" />\n          )}\n          openOnFocus\n          disableClearable\n          css={css`\n            width: 100%;\n            margin-top: 1rem;\n          `}\n        />\n\n        <Autocomplete\n          multiple\n          id=\"create-labels-select\"\n          size=\"small\"\n          filterSelectedOptions\n          autoHighlight\n          openOnFocus\n          options={labelsOptions}\n          getOptionLabel={(option) => option.name}\n          value={labels}\n          onChange={(_, newLabels) => setLabels(newLabels)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Labels\" variant=\"outlined\" />\n          )}\n          renderTags={(value, getTagProps) =>\n            value.map((option, index) => (\n              <LabelChip\n                key={option.id}\n                label={option}\n                size=\"small\"\n                {...getTagProps({ index })}\n              />\n            ))\n          }\n          renderOption={(option) => <LabelChip label={option} size=\"small\" />}\n          css={css`\n            margin-top: 1rem;\n            width: 100%;\n          `}\n        />\n      </Content>\n\n      <Footer theme={theme}>\n        <Button\n          startIcon={\n            createLoading ? (\n              <CircularProgress color=\"inherit\" size={16} />\n            ) : (\n              <FontAwesomeIcon icon={faRocket} />\n            )\n          }\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={handleCreate}\n          disabled={createLoading}\n          data-testid=\"task-create\"\n          css={css`\n            ${theme.breakpoints.down(\"xs\")} {\n              flex-grow: 1;\n            }\n          `}\n        >\n          Create issue ({getMetaKey()}+⏎)\n        </Button>\n        <Button\n          css={css`\n            margin-left: 1rem;\n          `}\n          onClick={handleClose}\n        >\n          Cancel (Esc)\n        </Button>\n      </Footer>\n    </Dialog>\n  );\n};\n\nexport default CreateTaskDialog;\n","import { TextField } from \"@material-ui/core\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React from \"react\";\nimport { BoardMember } from \"types\";\nimport AvatarOption from \"./AvatarOption\";\nimport AvatarTag from \"./AvatarTag\";\n\ninterface Props {\n  controlId: string;\n  dataTestId: string;\n  members: BoardMember[];\n  assignee: BoardMember[];\n  setAssignee: (assignees: BoardMember[]) => void;\n}\n\nconst AssigneeAutoComplete = ({\n  controlId,\n  dataTestId,\n  members,\n  assignee,\n  setAssignee,\n}: Props) => {\n  return (\n    <Autocomplete\n      multiple\n      openOnFocus\n      filterSelectedOptions\n      disableClearable\n      disableCloseOnSelect\n      id={controlId}\n      data-testid={dataTestId}\n      size=\"small\"\n      options={members}\n      getOptionLabel={(option) => option.username}\n      value={assignee}\n      onChange={(_event, value) => setAssignee(value)}\n      renderOption={(option) => <AvatarOption option={option} />}\n      renderInput={(params) => (\n        <TextField {...params} autoFocus label=\"Assignees\" variant=\"outlined\" />\n      )}\n      renderTags={(value, getTagProps) =>\n        value.map((option, index) => (\n          <AvatarTag\n            key={option.id}\n            option={option}\n            {...getTagProps({ index })}\n          />\n        ))\n      }\n    />\n  );\n};\n\nexport default AssigneeAutoComplete;\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Avatar, Button, Popover } from \"@material-ui/core\";\nimport AssigneeAutoComplete from \"components/AssigneeAutoComplete\";\nimport Close from \"components/Close\";\nimport { modalPopperIndex, modalPopperWidth } from \"const\";\nimport {\n  selectAllMembers,\n  selectMembersEntities,\n} from \"features/member/MemberSlice\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoardMember, ITask } from \"types\";\nimport { PRIMARY } from \"utils/colors\";\nimport { patchTask } from \"./TaskSlice\";\n\nconst Container = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ContentTitle = styled.h3`\n  margin: 0.5rem 1rem;\n  margin-bottom: 0;\n  font-size: 1rem;\n  font-weight: normal;\n`;\n\nconst Content = styled.div`\n  border-bottom: 1px solid #e1e4e8;\n  padding: 8px 0;\n  width: ${modalPopperWidth}px;\n`;\n\nconst AssigneeContainer = styled.div`\n  padding: 16px;\n`;\n\nconst Label = styled.p`\n  color: #757575;\n  margin: 0;\n`;\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0.5rem 0;\n  overflow-wrap: anywhere;\n`;\n\ninterface Props {\n  task: ITask;\n}\n\nconst TaskAssignees = ({ task }: Props) => {\n  const dispatch = useDispatch();\n  const membersById = useSelector(selectMembersEntities);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [pendingAssignees, setPendingAssignees] = useState<BoardMember[]>([]);\n  console.log(pendingAssignees);\n  const members = useSelector(selectAllMembers);\n  const assignees = task.assignees.map(\n    (id) => membersById[id]\n  ) as BoardMember[];\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPendingAssignees(assignees);\n    setAnchorEl(event.currentTarget);\n  };\n\n  /*const handleClose = () => {\n    const currentIds = assignees.map((a) => a.id);\n    const pendingIds = pendingAssignees.map((member) => member.id);\n    if (\n      !(\n        pendingIds.length === currentIds.length &&\n        pendingIds\n          .sort()\n          .every((value, index) => value === currentIds.sort()[index])\n      )\n    ) {\n      dispatch(\n        patchTask({\n          id: task.id,\n          fields: { assignees: pendingIds },\n        })\n      );\n    }\n    setAnchorEl(null);\n  };*/\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? \"task-assignees-popover\" : undefined;\n\n  return (\n    <Container>\n      <Label>Assign By</Label>\n      {assignees.map((assignee) => (\n        <List key={assignee.id}>\n          <div>\n            <Avatar\n              css={css`\n                height: 2rem;\n                width: 2rem;\n                margin-right: 0.5rem;\n              `}\n              src={assignee.avatar?.photo}\n              alt={assignee.avatar?.name}\n            >\n              {assignee.username.charAt(0)}\n            </Avatar>\n          </div>\n          <div>{assignee.username}</div>\n        </List>\n      ))}\n\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        transitionDuration={0}\n        style={{ zIndex: modalPopperIndex }}\n        /*onClose={handleClose}*/\n        css={css`\n          .MuiPaper-rounded {\n            border-radius: 0;\n          }\n        `}\n      >\n        <Content>\n          <ContentTitle>Assigned board members</ContentTitle>\n          <AssigneeContainer>\n            <AssigneeAutoComplete\n              assignee={pendingAssignees}\n              members={members}\n              setAssignee={setPendingAssignees}\n              controlId=\"assignee-select\"\n              dataTestId={\"edit-assignees\"}\n            />\n          </AssigneeContainer>\n        </Content>\n      </Popover>\n    </Container>\n  );\n};\n\nexport default TaskAssignees;\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Avatar, Button, Popover } from \"@material-ui/core\";\nimport AssigneeAutoComplete from \"components/AssigneeAutoComplete\";\nimport Close from \"components/Close\";\nimport { modalPopperIndex, modalPopperWidth } from \"const\";\nimport {\n  selectAllMembers,\n  selectMembersEntities,\n} from \"features/member/MemberSlice\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoardMember, ITask, ReporterMember } from \"types\";\nimport { PRIMARY } from \"utils/colors\";\nimport { patchTask } from \"./TaskSlice\";\n\nconst Container = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst ContentTitle = styled.h3`\n  margin: 0.5rem 1rem;\n  margin-bottom: 0;\n  font-size: 1rem;\n  font-weight: normal;\n`;\n\nconst Content = styled.div`\n  border-bottom: 1px solid #e1e4e8;\n  padding: 8px 0;\n  width: ${modalPopperWidth}px;\n`;\n\nconst AssigneeContainer = styled.div`\n  padding: 16px;\n`;\n\nconst Label = styled.p`\n  color: #757575;\n  margin: 0;\n`;\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0.5rem 0;\n  overflow-wrap: anywhere;\n`;\n\ninterface Props {\n  task: ITask;\n}\n\nconst TaskReporters = ({ task }: Props) => {\n  const dispatch = useDispatch();\n  const membersById = useSelector(selectMembersEntities);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [pendingAssignees, setPendingAssignees] = useState<ReporterMember[]>(\n    []\n  );\n  console.log(pendingAssignees);\n  const members = useSelector(selectAllMembers);\n  const assignees = task.reporter.map(\n    (id) => membersById[id]\n  ) as ReporterMember[];\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setPendingAssignees(assignees);\n    setAnchorEl(event.currentTarget);\n  };\n\n  /*const handleClose = () => {\n    const currentIds = assignees.map((a) => a.id);\n    const pendingIds = pendingAssignees.map((member) => member.id);\n    if (\n      !(\n        pendingIds.length === currentIds.length &&\n        pendingIds\n          .sort()\n          .every((value, index) => value === currentIds.sort()[index])\n      )\n    ) {\n      dispatch(\n        patchTask({\n          id: task.id,\n          fields: { assignees: pendingIds },\n        })\n      );\n    }\n    setAnchorEl(null);\n  };*/\n\n  const open = Boolean(anchorEl);\n  const popoverId = open ? \"task-assignees-popover\" : undefined;\n\n  return (\n    <Container>\n      <Label>Assign To</Label>\n      {assignees.map((assignee) => (\n        <List key={assignee.id}>\n          <div>\n            <Avatar\n              css={css`\n                height: 2rem;\n                width: 2rem;\n                margin-right: 0.5rem;\n              `}\n              src={assignee.avatar?.photo}\n              alt={assignee.avatar?.name}\n            >\n              {assignee.username.charAt(0)}\n            </Avatar>\n          </div>\n          <div>{assignee.username}</div>\n        </List>\n      ))}\n\n      <Popover\n        id={popoverId}\n        open={open}\n        anchorEl={anchorEl}\n        transitionDuration={0}\n        style={{ zIndex: modalPopperIndex }}\n        /*onClose={handleClose}*/\n        css={css`\n          .MuiPaper-rounded {\n            border-radius: 0;\n          }\n        `}\n      >\n        <Content>\n          <ContentTitle>Assigned board members</ContentTitle>\n          <AssigneeContainer>\n            <AssigneeAutoComplete\n              assignee={pendingAssignees}\n              members={members}\n              setAssignee={setPendingAssignees}\n              controlId=\"assignee-select\"\n              dataTestId={\"edit-assignees\"}\n            />\n          </AssigneeContainer>\n        </Content>\n      </Popover>\n    </Container>\n  );\n};\n\nexport default TaskReporters;\n","import { Avatar } from \"@material-ui/core\";\nimport React from \"react\";\nimport { avatarStyles } from \"styles\";\nimport { BoardMember } from \"types\";\n\ninterface Props {\n  member?: BoardMember;\n}\n\nconst MemberAvatar = ({ member }: Props) => {\n  return (\n    <Avatar css={avatarStyles} src={member?.avatar?.photo} alt=\"member-avatar\">\n      {member?.username?.charAt(0) || \"-\"}\n    </Avatar>\n  );\n};\n\nexport default MemberAvatar;\n","import { css } from \"@emotion/core\";\nimport {\n  TextareaAutosize,\n  TextareaAutosizeProps,\n  useTheme,\n} from \"@material-ui/core\";\nimport { commentBoxWidth, commentBoxWidthMobile } from \"const\";\nimport React from \"react\";\nimport { N800 } from \"utils/colors\";\n\nconst CommentTextarea = (props: TextareaAutosizeProps) => {\n  const theme = useTheme();\n\n  return (\n    <TextareaAutosize\n      aria-label=\"comment\"\n      placeholder=\"Add a comment...\"\n      rowsMin={4}\n      css={css`\n        line-height: 1.25rem;\n        font-size: 0.875rem;\n        color: ${N800};\n        width: ${commentBoxWidth}px;\n        border: 1px solid #bcbcbc;\n        border-radius: 4px;\n        padding: 12px 16px 0;\n        resize: none;\n        margin-bottom: 8px;\n        ${theme.breakpoints.down(\"sm\")} {\n          width: ${commentBoxWidthMobile}px !important;\n        }\n        &:focus {\n          outline: none;\n          border: 1px solid #999;\n        }\n      `}\n      {...props}\n    />\n  );\n};\n\nexport default CommentTextarea;\n","import styled from \"@emotion/styled\";\nimport { Box } from \"@material-ui/core\";\nimport MemberAvatar from \"components/MemberAvatar\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { selectMembersEntities } from \"features/member/MemberSlice\";\nimport React from \"react\";\nimport { deleteComment } from \"./CommentSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { TaskComment } from \"types\";\nimport { HINT } from \"utils/colors\";\n\ninterface Props {\n  comment: TaskComment;\n}\n\nconst CommentActionRow = ({ comment }: Props) => {\n  const dispatch = useDispatch();\n  const user = useSelector((state: RootState) => state.auth.user);\n  const memberEntities = useSelector(selectMembersEntities);\n  const author = memberEntities[comment.author];\n\n  if (!user || !author || user.id !== author.id) {\n    return null;\n  }\n\n  const handleDelete = () => {\n    if (window.confirm(\"Are you sure? Deleting a comment cannot be undone.\")) {\n      dispatch(deleteComment(comment.id));\n    }\n  };\n\n  return (\n    <Box>\n      <Link onClick={handleDelete} data-testid={`delete-comment-${comment.id}`}>\n        Delete\n      </Link>\n    </Box>\n  );\n};\n\nconst CommentItem = ({ comment }: Props) => {\n  const memberEntities = useSelector(selectMembersEntities);\n  const author = memberEntities[comment.author];\n\n  if (!author) {\n    return null;\n  }\n\n  return (\n    <Box display=\"flex\" mb={2}>\n      <Box marginRight={2} mt={0.25}>\n        <MemberAvatar member={author} />\n      </Box>\n      <Box>\n        <Box display=\"flex\">\n          <Name>{author.first_name || author.username}</Name>\n          <TimeAgo>\n            {formatDistanceToNow(new Date(comment.created), {\n              addSuffix: true,\n            })}\n          </TimeAgo>\n        </Box>\n        <Text>{comment.text}</Text>\n        {CommentActionRow({ comment })}\n      </Box>\n    </Box>\n  );\n};\n\nconst Link = styled.a`\n  font-size: 0.75rem;\n  color: ${HINT};\n  text-decoration: none;\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst Name = styled.div`\n  font-size: 0.75rem;\n  font-weight: bold;\n`;\n\nconst Text = styled.p`\n  font-size: 0.75rem;\n  margin-top: 4px;\n`;\n\nconst TimeAgo = styled.div`\n  font-size: 0.75rem;\n  color: ${HINT};\n  margin-left: 8px;\n`;\n\nexport default CommentItem;\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { faComments } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Box, Button, CircularProgress } from \"@material-ui/core\";\nimport MemberAvatar from \"components/MemberAvatar\";\nimport { selectMe } from \"features/auth/AuthSlice\";\nimport CommentTextarea from \"features/comment/CommentTextarea\";\nimport { selectMembersEntities } from \"features/member/MemberSlice\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CommentItem from \"./CommentItem\";\nimport {\n  createComment,\n  fetchComments,\n  selectAllComments,\n  selectCreateCommentStatus,\n  selectFetchCommentsStatus,\n} from \"./CommentSlice\";\n\ninterface Props {\n  taskId: number;\n}\n\nconst CommentSection = ({ taskId }: Props) => {\n  const dispatch = useDispatch();\n  const user = useSelector(selectMe);\n  const comments = useSelector(selectAllComments);\n  const memberEntities = useSelector(selectMembersEntities);\n  const fetchStatus = useSelector(selectFetchCommentsStatus);\n  const createStatus = useSelector(selectCreateCommentStatus);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    dispatch(fetchComments(taskId));\n  }, [dispatch, taskId]);\n\n  const postComment = () => {\n    setText(\"\");\n    dispatch(createComment({ text, task: taskId }));\n  };\n\n  const currentTaskComments = comments.filter(\n    (comment) => comment.task === taskId\n  );\n\n  return (\n    <>\n      <Header>\n        <FontAwesomeIcon icon={faComments} />\n        <Title>Discussion</Title>\n      </Header>\n\n      <Box display=\"flex\" mb={4}>\n        <MemberAvatar member={memberEntities[user?.id ?? -1]} />\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"flex-start\"\n          marginLeft={2}\n          marginRight={2}\n        >\n          <CommentTextarea\n            onChange={(e) => setText(e.target.value)}\n            value={text}\n          />\n          <Box>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={\n                createStatus === \"loading\" ? (\n                  <CircularProgress color=\"inherit\" size={16} />\n                ) : undefined\n              }\n              disabled={!text.length || createStatus === \"loading\"}\n              css={css`\n                text-transform: none;\n              `}\n              onClick={postComment}\n            >\n              Post comment\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n\n      {!currentTaskComments.length && fetchStatus === \"loading\" && (\n        <CircularProgress />\n      )}\n      {currentTaskComments.map((comment) => (\n        <CommentItem key={comment.id} comment={comment} />\n      ))}\n    </>\n  );\n};\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 20px 0;\n`;\n\nconst Title = styled.h3`\n  margin: 0 0 0 12px;\n`;\n\nexport default CommentSection;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Typography,\n  Avatar,\n} from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { TASK_G } from \"utils/colors\";\nimport { css } from \"@emotion/core\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectAllMembers,\n  selectMembersEntities,\n} from \"features/member/MemberSlice\";\nimport { ITask, SpectatorMember } from \"types\";\n\ninterface Props {\n  task: ITask;\n}\n\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0.5rem 0;\n  overflow-wrap: anywhere;\n`;\n\nconst SpectatorDialog = ({ task }: Props) => {\n  const membersById = useSelector(selectMembersEntities);\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [pendingAssignees, setPendingAssignees] = useState<SpectatorMember[]>(\n    []\n  );\n  console.log(pendingAssignees);\n  const members = useSelector(selectAllMembers);\n  const assignees = task.spectators.map(\n    (id) => membersById[id]\n  ) as SpectatorMember[];\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography\n        variant=\"body1\"\n        onClick={handleClickOpen}\n        style={{ cursor: \"pointer\" }}\n      >\n        <Button\n          onClick={handleClickOpen}\n          data-testid=\"delete-task\"\n          size=\"small\"\n          css={css`\n            font-size: 12px;\n            font-weight: bold;\n            color: ${TASK_G};\n            margin-bottom: 2rem;\n          `}\n        >\n          Spectators\n        </Button>\n      </Typography>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        fullWidth\n        maxWidth=\"sm\" // Use maxWidth=\"lg\" for large dialog\n      >\n        <DialogTitle>Spectators</DialogTitle>\n        <DialogContent>\n          {assignees.map((assignee) => (\n            <List key={assignee.id}>\n              <div>\n                <Avatar\n                  css={css`\n                    height: 2rem;\n                    width: 2rem;\n                    margin-right: 0.5rem;\n                  `}\n                  src={assignee.avatar?.photo}\n                  alt={assignee.avatar?.name}\n                >\n                  {assignee.username.charAt(0)}\n                </Avatar>\n              </div>\n              <div>{assignee.username}</div>\n            </List>\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SpectatorDialog;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  Dialog,\n  Button,\n  TextField,\n  TextareaAutosize,\n  useTheme,\n  useMediaQuery,\n  WithTheme,\n} from \"@material-ui/core\";\nimport { RootState } from \"store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setEditDialogOpen,\n  deleteTask,\n  updateTasksByColumn,\n  patchTask,\n} from \"./TaskSlice\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrash,\n  faLock,\n  faAlignLeft,\n  faArrowUp,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { createInfoToast } from \"features/toast/ToastSlice\";\nimport { PRIMARY, TASK_G } from \"utils/colors\";\nimport { IColumn, TasksByColumn, Id, Priority, Label } from \"types\";\nimport {\n  selectAllColumns,\n  selectColumnsEntities,\n} from \"features/column/ColumnSlice\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport { createMdEditorStyles, descriptionStyles } from \"styles\";\nimport MarkdownIt from \"markdown-it\";\nimport MdEditor from \"react-markdown-editor-lite\";\nimport TaskAssignees from \"./TaskAssignees\";\nimport TaskReporter from \"./TaskReporter\";\nimport {\n  MD_EDITOR_PLUGINS,\n  borderRadius,\n  PRIORITY_OPTIONS,\n  PRIORITY_MAP,\n  MD_EDITING_CONFIG,\n  MD_READ_ONLY_CONFIG,\n  Key,\n  taskDialogHeight,\n  taskSideWidth,\n} from \"const\";\nimport Close from \"components/Close\";\nimport {\n  selectAllLabels,\n  selectLabelEntities,\n} from \"features/label/LabelSlice\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport getMetaKey from \"utils/shortcuts\";\nimport LabelChip from \"components/LabelChip\";\nimport PriorityOption from \"components/PriorityOption\";\nimport CommentSection from \"features/comment/CommentSection\";\n\nimport SpectatorDialog from \"./SpectatorsDialog\";\n\nconst mdParser = new MarkdownIt({ breaks: true });\n\nconst Content = styled.div<WithTheme>`\n  display: flex;\n  padding: 2rem;\n  height: ${taskDialogHeight}px;\n  ${(props) => props.theme.breakpoints.down(\"xs\")} {\n    flex-direction: column;\n  }\n`;\n\nconst Main = styled.div`\n  width: 100%;\n`;\n\nconst Side = styled.div<WithTheme>`\n  margin-top: 2rem;\n  ${(props) => props.theme.breakpoints.up(\"sm\")} {\n    max-width: ${taskSideWidth}px;\n    min-width: ${taskSideWidth}px;\n  }\n`;\n\nconst Header = styled.div`\n  color: ${TASK_G};\n  height: 2rem;\n  h3 {\n    margin: 0 0.25rem 0 0;\n  }\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  color: ${PRIMARY};\n  font-size: 1rem;\n  textarea {\n    color: ${PRIMARY};\n    font-weight: bold;\n    font-size: 20px;\n    width: 100%;\n    margin: 0 2rem 0 0.375rem;\n    border: none;\n    resize: none;\n    &:focus {\n      outline: none;\n      border-radius: ${borderRadius}px;\n      box-shadow: inset 0 0 0 2px ${PRIMARY};\n    }\n  }\n`;\n\nconst EditorWrapper = styled.div<WithTheme & { editing: boolean }>`\n  margin: 1rem 0;\n  margin-right: 2rem;\n  ${(props) => createMdEditorStyles(props.editing)};\n\n  .rc-md-editor {\n    min-height: ${(props) => (props.editing ? 180 : 32)}px;\n    border: none;\n    .section-container {\n      ${(props) =>\n        props.editing &&\n        `\n        outline: none;\n        box-shadow: inset 0 0 0 2px ${PRIMARY};\n      `};\n      padding: ${(props) => (props.editing ? \"8px\" : \"0px\")} !important;\n      &.input {\n        line-height: 20px;\n      }\n    }\n  }\n`;\n\nconst DescriptionHeader = styled.div`\n  display: flex;\n  align-items: center;\n  h3 {\n    margin: 0 0 0 12px;\n  }\n`;\n\nconst Description = styled.div`\n  ${descriptionStyles}\n`;\n\nconst DescriptionActions = styled.div`\n  display: flex;\n`;\n\nconst Text = styled.p`\n  color: #626e83;\n  margin: 4px 0;\n  font-size: 12px;\n`;\n\nconst ButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst DESCRIPTION_PLACEHOLDER = \"Write here...\";\n\nconst EditTaskDialog = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const columns = useSelector(selectAllColumns);\n  const labels = useSelector(selectAllLabels);\n  const labelsById = useSelector(selectLabelEntities);\n  const columnsById = useSelector(selectColumnsEntities);\n  const tasksByColumn = useSelector((state: RootState) => state.task.byColumn);\n  const taskId = useSelector((state: RootState) => state.task.editDialogOpen);\n  const tasksById = useSelector((state: RootState) => state.task.byId);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [editingDescription, setEditingDescription] = useState(false);\n  const titleTextAreaRef = useRef<HTMLTextAreaElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const editorRef = useRef<MdEditor>(null);\n  const cancelRef = useRef<HTMLButtonElement>(null);\n  const xsDown = useMediaQuery(theme.breakpoints.down(\"xs\"));\n  const open = taskId !== null;\n\n  useEffect(() => {\n    if (taskId && tasksById[taskId]) {\n      setDescription(tasksById[taskId].description);\n      setTitle(tasksById[taskId].title);\n    }\n  }, [open, taskId]);\n\n  const handleSaveTitle = () => {\n    if (taskId) {\n      dispatch(patchTask({ id: taskId, fields: { title } }));\n    }\n  };\n\n  const handleSaveDescription = () => {\n    if (taskId) {\n      dispatch(patchTask({ id: taskId, fields: { description } }));\n      setEditingDescription(false);\n    }\n  };\n\n  const handleCancelDescription = () => {\n    if (taskId && tasksById[taskId]) {\n      setDescription(tasksById[taskId].description);\n      setEditingDescription(false);\n    }\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event: any) => {\n      if (\n        wrapperRef.current &&\n        !wrapperRef.current.contains(event.target) &&\n        cancelRef.current &&\n        !cancelRef.current?.contains(event.target)\n      ) {\n        handleSaveDescription();\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [wrapperRef, taskId, description]);\n\n  useEffect(() => {\n    if (editingDescription && editorRef && editorRef.current) {\n      editorRef.current.setSelection({\n        start: 0,\n        end: description.length,\n      });\n    }\n  }, [editingDescription]);\n\n  const findTaskColumnId = () => {\n    for (const columnId in tasksByColumn) {\n      for (const id of tasksByColumn[columnId]) {\n        if (id === taskId) {\n          return columnId;\n        }\n      }\n    }\n    return null;\n  };\n\n  const columnId = findTaskColumnId();\n\n  if (!taskId || !tasksById[taskId] || !columnId) {\n    return null;\n  }\n\n  const task = tasksById[taskId];\n  const column = columnsById[columnId];\n\n  const handleEditorKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode == Key.Enter && e.metaKey) {\n      handleSaveDescription();\n    }\n    if (e.keyCode === Key.Escape) {\n      // Prevent propagation from reaching the Dialog\n      e.stopPropagation();\n      handleCancelDescription();\n    }\n  };\n\n  const handleTitleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.keyCode === Key.Enter) {\n      e.preventDefault();\n      titleTextAreaRef?.current?.blur();\n    }\n    if (e.keyCode === Key.Escape) {\n      // Prevent propagation from reaching the Dialog\n      e.stopPropagation();\n    }\n  };\n\n  const handleClose = () => {\n    dispatch(setEditDialogOpen(null));\n    setEditingDescription(false);\n  };\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setTitle(e.target.value);\n  };\n\n  const handleColumnChange = (_: any, value: IColumn | null) => {\n    if (!column || !value || column.id === value.id) {\n      return;\n    }\n    const current: Id[] = [...tasksByColumn[column.id]];\n    const next: Id[] = [...tasksByColumn[value.id]];\n\n    const currentId = current.indexOf(task.id);\n    const newPosition = 0;\n\n    // remove from original\n    current.splice(currentId, 1);\n    // insert into next\n    next.splice(newPosition, 0, task.id);\n\n    const updatedTasksByColumn: TasksByColumn = {\n      ...tasksByColumn,\n      [column.id]: current,\n      [value.id]: next,\n    };\n    dispatch(updateTasksByColumn(updatedTasksByColumn));\n    handleClose();\n  };\n\n  const handlePriorityChange = (_: any, priority: Priority | null) => {\n    if (priority) {\n      dispatch(patchTask({ id: taskId, fields: { priority: priority.value } }));\n    }\n  };\n\n  const handleNotImplemented = () => {\n    dispatch(createInfoToast(\"Not implemented yet 😟\"));\n  };\n\n  const handleDelete = () => {\n    if (window.confirm(\"Are you sure? Deleting a task cannot be undone.\")) {\n      dispatch(deleteTask(task.id));\n      handleClose();\n    }\n  };\n\n  const handleDescriptionClick = () => {\n    setEditingDescription(true);\n  };\n\n  const handleEditorChange = ({ text }: any) => {\n    setDescription(text);\n  };\n\n  const handleLabelsChange = (newLabels: Label[]) => {\n    dispatch(\n      patchTask({\n        id: taskId,\n        fields: { labels: newLabels.map((label) => label.id) },\n      })\n    );\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    // don't listen for input when inputs are focused\n    if (\n      document.activeElement instanceof HTMLInputElement ||\n      document.activeElement instanceof HTMLTextAreaElement\n    ) {\n      return;\n    }\n\n    if (e.key === \"Backspace\" && e.metaKey) {\n      handleDelete();\n    }\n\n    if (e.key === \"Escape\" && e.metaKey) {\n      handleClose();\n    }\n\n    if (e.key === \"l\" && e.metaKey) {\n      e.preventDefault();\n      handleNotImplemented();\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      onKeyDown={handleKeyDown}\n      fullWidth\n      keepMounted={false}\n      fullScreen={xsDown}\n      css={css`\n        .MuiDialog-paper {\n          max-width: 920px;\n        }\n      `}\n    >\n      <Content theme={theme}>\n        <Close onClose={handleClose} />\n        <Main>\n          <Header>id: {task.id}</Header>\n          <Title>\n            <FontAwesomeIcon icon={faArrowUp} />\n            <TextareaAutosize\n              ref={titleTextAreaRef}\n              value={title}\n              onChange={handleTitleChange}\n              onBlur={handleSaveTitle}\n              onKeyDown={handleTitleKeyDown}\n              data-testid=\"task-title\"\n            />\n          </Title>\n          <DescriptionHeader>\n            <FontAwesomeIcon icon={faAlignLeft} />\n            <h3>Description</h3>\n          </DescriptionHeader>\n          <Description\n            key={`${taskId}${editingDescription}`}\n            data-testid=\"task-description\"\n          >\n            <EditorWrapper\n              onDoubleClick={\n                editingDescription ? undefined : handleDescriptionClick\n              }\n              editing={editingDescription}\n              ref={wrapperRef}\n              theme={theme}\n              onKeyDown={handleEditorKeyDown}\n            >\n              <MdEditor\n                ref={editorRef}\n                plugins={MD_EDITOR_PLUGINS}\n                config={\n                  editingDescription ? MD_EDITING_CONFIG : MD_READ_ONLY_CONFIG\n                }\n                value={\n                  editingDescription\n                    ? description\n                    : description || DESCRIPTION_PLACEHOLDER\n                }\n                renderHTML={(text) => mdParser.render(text)}\n                onChange={handleEditorChange}\n                placeholder={DESCRIPTION_PLACEHOLDER}\n              />\n            </EditorWrapper>\n            {editingDescription && (\n              <DescriptionActions>\n                <Button\n                  variant=\"contained\"\n                  data-testid=\"save-description\"\n                  onClick={handleSaveDescription}\n                  color=\"primary\"\n                  size=\"small\"\n                >\n                  Save ({getMetaKey()}+⏎)\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  data-testid=\"cancel-description\"\n                  onClick={handleCancelDescription}\n                  ref={cancelRef}\n                  size=\"small\"\n                  css={css`\n                    margin-left: 0.5rem;\n                  `}\n                >\n                  Cancel (Esc)\n                </Button>\n              </DescriptionActions>\n            )}\n          </Description>\n          <CommentSection taskId={task.id} />\n        </Main>\n        <Side theme={theme}>\n          <TaskAssignees task={task} />\n          <TaskReporter task={task} />\n          <SpectatorDialog task={task} />\n          <Autocomplete\n            id=\"column-select\"\n            size=\"small\"\n            options={columns}\n            getOptionLabel={(option) => option.title}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Column\" variant=\"outlined\" />\n            )}\n            value={column}\n            onChange={handleColumnChange}\n            disableClearable\n            openOnFocus\n            data-testid=\"edit-column\"\n            css={css`\n              width: 100%;\n            `}\n          />\n          <Autocomplete\n            id=\"priority-select\"\n            size=\"small\"\n            blurOnSelect\n            autoHighlight\n            options={PRIORITY_OPTIONS}\n            getOptionLabel={(option) => option.label}\n            value={PRIORITY_MAP[task.priority]}\n            onChange={handlePriorityChange}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Priority\" variant=\"outlined\" />\n            )}\n            renderOption={(option) => <PriorityOption option={option} />}\n            openOnFocus\n            disableClearable\n            data-testid=\"edit-priority\"\n            css={css`\n              width: 100%;\n              margin-top: 1rem;\n            `}\n          />\n          <Autocomplete\n            multiple\n            id=\"labels-select\"\n            data-testid=\"edit-labels\"\n            size=\"small\"\n            filterSelectedOptions\n            autoHighlight\n            openOnFocus\n            blurOnSelect\n            disableClearable\n            options={labels}\n            getOptionLabel={(option) => option.name}\n            value={\n              tasksById[taskId].labels.map(\n                (labelId) => labelsById[labelId]\n              ) as Label[]\n            }\n            onChange={(_, newLabels) => handleLabelsChange(newLabels)}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Labels\" variant=\"outlined\" />\n            )}\n            renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n                <LabelChip\n                  key={option.id}\n                  label={option}\n                  size=\"small\"\n                  {...getTagProps({ index })}\n                />\n              ))\n            }\n            renderOption={(option) => <LabelChip label={option} size=\"small\" />}\n            css={css`\n              width: 100%;\n              margin-top: 1rem;\n              margin-bottom: 2rem;\n            `}\n          />\n          <ButtonsContainer>\n            <Button\n              startIcon={<FontAwesomeIcon fixedWidth icon={faTrash} />}\n              onClick={handleDelete}\n              data-testid=\"delete-task\"\n              size=\"small\"\n              css={css`\n                font-size: 12px;\n                font-weight: bold;\n                color: ${TASK_G};\n                margin-bottom: 2rem;\n              `}\n            >\n              Delete task ({getMetaKey()}+⌫)\n            </Button>\n          </ButtonsContainer>\n          <Text>\n            Updated {formatDistanceToNow(new Date(task.modified))} ago\n          </Text>\n          <Text\n            css={css`\n              margin-bottom: 1rem;\n            `}\n          >\n            Created {formatDistanceToNow(new Date(task.created))} ago\n          </Text>\n        </Side>\n      </Content>\n    </Dialog>\n  );\n};\n\nexport default EditTaskDialog;\n","import styled from \"@emotion/styled\";\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport default Flex;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Button, TextField, IconButton, useTheme } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport {\n  TASK_G,\n  getContrastColor,\n  getRandomHexColor,\n  DANGER,\n  BLACK,\n} from \"utils/colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedoAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport Flex from \"components/Flex\";\nimport { useFormContext } from \"react-hook-form\";\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\ninterface Props {\n  fieldsId: string;\n  onSubmit: () => void;\n  setActive: (active: boolean) => void;\n}\n\nconst LabelFields = ({ fieldsId, onSubmit, setActive }: Props) => {\n  const theme = useTheme();\n  const {\n    register,\n    setValue,\n    triggerValidation,\n    watch,\n    errors,\n  } = useFormContext();\n\n  const setRandomColor = () => {\n    setValue(\"color\", getRandomHexColor());\n    triggerValidation();\n  };\n  const pendingColor = watch(\"color\");\n\n  return (\n    <Flex\n      css={css`\n        ${theme.breakpoints.down(\"xs\")} {\n          flex-direction: column;\n        }\n      `}\n    >\n      <div\n        css={css`\n          display: flex;\n          ${theme.breakpoints.down(\"xs\")} {\n            margin-bottom: 1rem;\n          }\n        `}\n      >\n        <TextField\n          id={`${fieldsId}label-name`}\n          autoFocus\n          size=\"small\"\n          label=\"Label name\"\n          variant=\"outlined\"\n          name=\"name\"\n          inputRef={register({ required: true })}\n          error={Boolean(errors.name)}\n          css={css`\n            margin-right: 1rem;\n          `}\n        />\n        <IconButton\n          size=\"small\"\n          onClick={setRandomColor}\n          data-testid=\"random-color\"\n          css={css`\n            height: 2.25rem;\n            width: 2.25rem;\n            color: ${TASK_G};\n            padding: 0.75rem;\n            margin-right: 0.5rem;\n            background-color: ${pendingColor};\n            color: ${Boolean(errors.color)\n              ? DANGER\n              : getContrastColor(pendingColor)};\n            border: ${getContrastColor(pendingColor) === BLACK &&\n            \"1px solid #ccc\"};\n            &:hover {\n              background-color: ${pendingColor};\n            }\n            font-size: 0.825rem;\n          `}\n        >\n          <FontAwesomeIcon icon={faRedoAlt} size=\"sm\" />\n        </IconButton>\n        <TextField\n          id={`${fieldsId}label-color`}\n          size=\"small\"\n          label=\"Color\"\n          variant=\"outlined\"\n          name=\"color\"\n          inputRef={register({\n            pattern: /^#(?:[0-9a-fA-F]{3}){1,2}$/,\n          })}\n          error={Boolean(errors.color)}\n          css={css`\n            width: 90px;\n            .MuiInputBase-input {\n              font-family: monospace;\n            }\n          `}\n        />\n      </div>\n      <Actions>\n        <Button\n          onClick={() => setActive(false)}\n          css={css`\n            margin: 0 0.5rem;\n            font-size: 0.625rem;\n          `}\n          variant=\"outlined\"\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={onSubmit}\n          color=\"primary\"\n          variant=\"contained\"\n          css={css`\n            font-size: 0.625rem;\n          `}\n        >\n          Save\n        </Button>\n      </Actions>\n    </Flex>\n  );\n};\n\nexport default LabelFields;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Button } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { patchLabel, deleteLabel } from \"./LabelSlice\";\nimport { css } from \"@emotion/core\";\nimport { Label } from \"types\";\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { borderRadius } from \"const\";\nimport Flex from \"components/Flex\";\nimport LabelFields from \"./LabelFields\";\nimport LabelChip from \"components/LabelChip\";\n\nconst RowDiv = styled.div`\n  padding: 0.5rem;\n  border-top: 1px solid #ccc;\n  border-left: 1px solid #ccc;\n  border-right: 1px solid #ccc;\n  &:first-of-type {\n    border-top-left-radius: ${borderRadius}px;\n    border-top-right-radius: ${borderRadius}px;\n  }\n  &:last-of-type {\n    border-bottom: 1px solid #ccc;\n    border-bottom-left-radius: ${borderRadius}px;\n    border-bottom-right-radius: ${borderRadius}px;\n  }\n`;\n\ninterface RowProps {\n  label: Label;\n}\n\ninterface DialogFormData {\n  name: string;\n  color: string;\n}\n\nconst LabelRow = ({ label }: RowProps) => {\n  const dispatch = useDispatch();\n  const [editing, setEditing] = useState(false);\n  const detail = useSelector((state: RootState) => state.board.detail);\n  const methods = useForm<DialogFormData>({\n    defaultValues: { name: label.name, color: label.color },\n    mode: \"onChange\",\n  });\n\n  const onSubmit = methods.handleSubmit(({ name, color }) => {\n    if (detail) {\n      dispatch(\n        patchLabel({ id: label.id, fields: { name, color, board: detail.id } })\n      );\n      setEditing(false);\n    }\n  });\n\n  const handleDelete = () => {\n    if (\n      window.confirm(\n        \"Are you sure? Deleting a label will remove it from all tasks.\"\n      )\n    ) {\n      dispatch(deleteLabel(label.id));\n    }\n  };\n\n  return (\n    <RowDiv data-testid={`row-${label.id}`}>\n      <Flex\n        css={css`\n          ${editing && \"margin-bottom: 1rem;\"}\n          transition: all 0.1s ease-in-out;\n        `}\n      >\n        <LabelChip label={label} />\n        <Flex>\n          {!editing && (\n            <Button\n              size=\"small\"\n              onClick={() => setEditing(true)}\n              css={css`\n                margin-left: 0.5rem;\n                font-size: 0.675rem;\n              `}\n            >\n              Edit\n            </Button>\n          )}\n          <Button\n            size=\"small\"\n            onClick={handleDelete}\n            css={css`\n              margin-left: 0.5rem;\n              font-size: 0.675rem;\n            `}\n          >\n            Delete\n          </Button>\n        </Flex>\n      </Flex>\n      <FormContext {...methods}>\n        {editing && (\n          <LabelFields\n            fieldsId={label.id.toString()}\n            onSubmit={onSubmit}\n            setActive={setEditing}\n          />\n        )}\n      </FormContext>\n    </RowDiv>\n  );\n};\n\nexport default LabelRow;\n","import React from \"react\";\nimport LabelFields from \"./LabelFields\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { useForm, FormContext } from \"react-hook-form\";\nimport { createLabel, selectAllLabels } from \"./LabelSlice\";\nimport { getRandomHexColor } from \"utils/colors\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  margin: 0 0.5rem;\n`;\n\ninterface Props {\n  setCreating: (creating: boolean) => void;\n}\n\ninterface DialogFormData {\n  name: string;\n  color: string;\n}\n\nconst LabelCreate = ({ setCreating }: Props) => {\n  const dispatch = useDispatch();\n  const boardId = useSelector((state: RootState) => state.board.detail?.id);\n  const labels = useSelector(selectAllLabels);\n  const methods = useForm<DialogFormData>({\n    defaultValues: { name: \"\", color: getRandomHexColor() },\n    mode: \"onChange\",\n  });\n\n  const onSubmit = methods.handleSubmit(({ name, color }) => {\n    if (labels.map((label) => label.name).includes(name)) {\n      methods.setError(\"name\", \"Label already exists\");\n      return;\n    }\n    if (boardId) {\n      dispatch(createLabel({ name, color, board: boardId }));\n      setCreating(false);\n    }\n  });\n\n  return (\n    <FormContext {...methods}>\n      <Container>\n        <LabelFields\n          fieldsId=\"create\"\n          onSubmit={onSubmit}\n          setActive={setCreating}\n        />\n      </Container>\n    </FormContext>\n  );\n};\n\nexport default LabelCreate;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport {\n  Dialog,\n  Button,\n  DialogTitle,\n  TextField,\n  InputAdornment,\n  Hidden,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { setDialogOpen, selectAllLabels } from \"./LabelSlice\";\nimport { css } from \"@emotion/core\";\nimport Close from \"components/Close\";\nimport Flex from \"components/Flex\";\nimport LabelRow from \"./LabelRow\";\nimport LabelCreate from \"./LabelCreate\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n  padding: 1rem;\n  height: 500px;\n`;\n\nconst LabelCount = styled.h3`\n  color: #333;\n  margin: 0 0 0 1rem;\n`;\n\nconst Table = styled.div`\n  margin: 1rem 0.5rem;\n`;\n\nconst LabelDialog = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const open = useSelector((state: RootState) => state.label.dialogOpen);\n  const labels = useSelector(selectAllLabels);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [creating, setCreating] = useState(false);\n  const xsDown = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const filteredLabels = labels.filter((label) =>\n    label.name.toLowerCase().match(searchValue.trim().toLowerCase())\n  );\n\n  const handleClose = () => {\n    dispatch(setDialogOpen(false));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"sm\"\n      fullWidth\n      fullScreen={xsDown}\n    >\n      <Close onClose={handleClose} />\n      <DialogTitle id=\"edit-labels\">Edit labels</DialogTitle>\n      <Container>\n        <Flex\n          css={css`\n            align-items: flex-end;\n            ${creating && \"margin-bottom: 1rem;\"}\n          `}\n        >\n          <LabelCount>\n            {filteredLabels.length} label{filteredLabels.length !== 1 && \"s\"}\n          </LabelCount>\n          <div>\n            <Hidden xsDown implementation=\"css\">\n              <TextField\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                placeholder=\"Search labels\"\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment\n                      position=\"start\"\n                      css={css`\n                        color: #ccc;\n                      `}\n                    >\n                      <FontAwesomeIcon icon={faSearch} />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n            </Hidden>\n          </div>\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => setCreating(true)}\n            css={css`\n              margin-right: 1rem;\n            `}\n          >\n            New label\n          </Button>\n        </Flex>\n        {creating && <LabelCreate setCreating={setCreating} />}\n        <Table>\n          {filteredLabels.map((label) => (\n            <LabelRow key={label.id + label.color + label.name} label={label} />\n          ))}\n        </Table>\n      </Container>\n    </Dialog>\n  );\n};\n\nexport default LabelDialog;\n","import React, { useState } from \"react\";\nimport {\n  Dialog,\n  TextField,\n  InputAdornment,\n  Avatar,\n  DialogTitle,\n  useTheme,\n  useMediaQuery,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectAllMembers,\n  setMemberListOpen,\n  setDialogMember,\n} from \"./MemberSlice\";\nimport { RootState } from \"store\";\nimport styled from \"@emotion/styled\";\nimport Flex from \"components/Flex\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { css } from \"@emotion/core\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { avatarStyles } from \"styles\";\nimport Close from \"components/Close\";\n\nconst Container = styled.div`\n  height: 500px;\n`;\n\nconst LabelCount = styled.h3`\n  color: #333;\n  margin: 0 0 1rem 0;\n`;\n\nconst Table = styled.div`\n  margin: 1rem 2rem;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n  height: 3rem;\n`;\n\nconst MemberListDialog = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const members = useSelector(selectAllMembers);\n  const open = useSelector((state: RootState) => state.member.memberListOpen);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const xsDown = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n  const filteredMembers = members.filter((member) =>\n    member.username.toLowerCase().match(searchValue.trim().toLowerCase())\n  );\n\n  const handleClose = () => {\n    dispatch(setMemberListOpen(false));\n    setSearchValue(\"\");\n  };\n\n  const handleClick = (memberId: number) => {\n    dispatch(setDialogMember(memberId));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      maxWidth=\"sm\"\n      fullWidth\n      fullScreen={xsDown}\n    >\n      <Container>\n        <Close onClose={handleClose} />\n        <DialogTitle id=\"edit-labels\">Board members</DialogTitle>\n        <Flex\n          css={css`\n            margin: 1.5rem 2rem 0rem 2rem;\n            ${theme.breakpoints.down(\"xs\")} {\n              flex-direction: column;\n            }\n          `}\n        >\n          <LabelCount>\n            {filteredMembers.length} member{filteredMembers.length !== 1 && \"s\"}{\" \"}\n          </LabelCount>\n          <div>\n            <TextField\n              value={searchValue}\n              onChange={(e) => setSearchValue(e.target.value)}\n              placeholder=\"Search members\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment\n                    position=\"start\"\n                    css={css`\n                      color: #ccc;\n                    `}\n                  >\n                    <FontAwesomeIcon icon={faSearch} />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </div>\n        </Flex>\n        <Table>\n          {filteredMembers.map((member) => (\n            <Row key={member.id}>\n              <Avatar\n                css={css`\n                  ${avatarStyles}\n                  &:hover {\n                    cursor: pointer;\n                  }\n                  margin-right: 0.5rem;\n                `}\n                onClick={() => handleClick(member.id)}\n                data-testid={`member-${member.id}`}\n                src={member?.avatar?.photo}\n                alt={member?.avatar?.name}\n              >\n                {member.username.charAt(0)}\n              </Avatar>\n              <div>{member.username}</div>\n            </Row>\n          ))}\n        </Table>\n      </Container>\n    </Dialog>\n  );\n};\n\nexport default MemberListDialog;\n","import { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { Button, Popover, Box } from \"@material-ui/core\";\nimport AssigneeAutoComplete from \"components/AssigneeAutoComplete\";\nimport { fetchBoardById } from \"features/board/BoardSlice\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoardMember } from \"types\";\nimport { selectAllMembers } from \"./MemberSlice\";\n\nconst FilterButton = styled.div`\n  margin-left: 0.5rem;\n  border-color: #d1d8e2;\n  border-radius: 12px;\n`;\n\nconst Content = styled.div`\n  padding: 2rem;\n  width: 300px;\n`;\n\nconst Description = styled.p`\n  margin-top: 0;\n  margin-bottom: 1rem;\n  font-size: 1.125rem;\n  font-weight: bold;\n  font-size: 0.875rem;\n`;\n\ninterface Props {\n  boardId: number;\n}\n\nconst MemberFilter = ({ boardId }: Props) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [filteredAssignee, setFilteredAssignee] = useState<BoardMember[]>([]);\n  const dispatch = useDispatch();\n  const members = useSelector(selectAllMembers);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const postFilterMember = async (users: BoardMember[]) => {\n    dispatch(\n      fetchBoardById({\n        boardId: boardId,\n        assigneeIds: users.map((m) => m.id),\n      })\n    );\n    handleClose();\n  };\n\n  const handleClickFilter = () => {\n    postFilterMember(filteredAssignee);\n  };\n\n  const handleClickClearFilter = () => {\n    setFilteredAssignee([]);\n    postFilterMember([]);\n  };\n\n  const ClearFilterButton = () => (\n    <FilterButton>\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        css={css`\n          text-transform: none;\n        `}\n        onClick={handleClickClearFilter}\n        data-testid=\"clear-filter\"\n      >\n        Clear Filters\n      </Button>\n    </FilterButton>\n  );\n\n  return (\n    <>\n      <FilterButton>\n        <Button\n          variant=\"outlined\"\n          size=\"small\"\n          css={css`\n            text-transform: none;\n          `}\n          onClick={handleClick}\n          aria-controls=\"member-filter-menu\"\n          aria-haspopup=\"true\"\n          data-testid=\"member-filter\"\n        >\n          Filter\n        </Button>\n      </FilterButton>\n      {filteredAssignee.length > 0 ? <ClearFilterButton /> : null}\n      <Popover\n        id=\"member-filter-menu\"\n        anchorEl={anchorEl}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n        transitionDuration={0}\n      >\n        <Content>\n          <Description>Filter tasks by assignees</Description>\n          <Box display=\"flex\" alignItems=\"center\">\n            <Box flexGrow={1}>\n              <AssigneeAutoComplete\n                assignee={filteredAssignee}\n                members={members}\n                controlId={\"assignee-filter\"}\n                dataTestId={\"filter-assignees\"}\n                setAssignee={setFilteredAssignee}\n              />\n            </Box>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              css={css`\n                font-size: 0.625rem;\n                margin-left: 0.5rem;\n              `}\n              onClick={handleClickFilter}\n              data-testid=\"filter-selected\"\n              disabled={filteredAssignee.length === 0}\n            >\n              Filter\n            </Button>\n          </Box>\n        </Content>\n      </Popover>\n    </>\n  );\n};\n\nexport default MemberFilter;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { RootState } from \"store\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { barHeight } from \"const\";\nimport { AvatarGroup } from \"@material-ui/lab\";\nimport { css } from \"@emotion/core\";\nimport { avatarStyles } from \"styles\";\nimport BoardName from \"components/BoardName\";\nimport MemberInvite from \"features/member/MemberInvite\";\nimport MemberDetail from \"features/member/MemberDetail\";\nimport MemberDialog from \"features/member/MemberDialog\";\nimport { currentBoardOwner } from \"./BoardSlice\";\nimport CreateTaskDialog from \"features/task/CreateTaskDialog\";\nimport EditTaskDialog from \"features/task/EditTaskDialog\";\nimport { Button } from \"@material-ui/core\";\nimport { PRIMARY } from \"utils/colors\";\nimport { addColumn } from \"features/column/ColumnSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport { setDialogOpen } from \"features/label/LabelSlice\";\nimport LabelDialog from \"features/label/LabelDialog\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  selectAllMembers,\n  setMemberListOpen,\n} from \"features/member/MemberSlice\";\nimport MemberListDialog from \"features/member/MemberList\";\nimport MemberFilter from \"features/member/MemberFilter\";\n\nconst Container = styled.div`\n  height: ${barHeight}px;\n  display: flex;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  font-weight: bold;\n  font-size: 1.25rem;\n`;\n\nconst Items = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  overflow-x: scroll;\n`;\n\nconst Left = styled.div`\n  white-space: nowrap;\n  display: flex;\n  margin-right: 1rem;\n`;\n\nconst Right = styled.div`\n  white-space: nowrap;\n`;\n\nconst buttonStyles = css`\n  color: ${PRIMARY};\n  .MuiButton-iconSizeSmall > *:first-of-type {\n    font-size: 12px;\n  }\n`;\n\nconst BoardBar = () => {\n  const dispatch = useDispatch();\n  const members = useSelector(selectAllMembers);\n  const error = useSelector((state: RootState) => state.board.detailError);\n  const detail = useSelector((state: RootState) => state.board.detail);\n  const boardOwner = useSelector(currentBoardOwner);\n  const { id } = useParams();\n  const detailDataExists = detail?.id.toString() === id;\n\n  if (!detailDataExists || error || !detail) {\n    return null;\n  }\n\n  const handleAddColumn = () => {\n    dispatch(addColumn(detail.id));\n  };\n\n  const handleEditLabels = () => {\n    dispatch(setDialogOpen(true));\n  };\n\n  return (\n    <Container data-testid=\"board\">\n      <Items>\n        <Left>\n          <BoardName\n            id={detail.id}\n            name={detail.name}\n            isOwner={boardOwner}\n            data-testid=\"board-name\"\n          />\n          <AvatarGroup\n            max={3}\n            data-testid=\"member-group\"\n            css={css`\n              margin-left: 1.5rem;\n              & .MuiAvatarGroup-avatar {\n                ${avatarStyles}\n                border: none;\n              }\n              &:hover {\n                cursor: pointer;\n              }\n            `}\n            onClick={(e: any) => {\n              if (e.target.classList.contains(\"MuiAvatarGroup-avatar\")) {\n                dispatch(setMemberListOpen(true));\n              }\n              console.log(\"hello\");\n            }}\n          >\n            {members.map((member) => (\n              <MemberDetail\n                key={member.id}\n                member={member}\n                isOwner={detail.owner === member.id}\n              />\n            ))}\n          </AvatarGroup>\n          {boardOwner && <MemberInvite boardId={detail.id} />}\n          <MemberFilter boardId={detail.id} />\n          <MemberInvite boardId={detail.id} />\n        </Left>\n        <Right>\n          <Button\n            size=\"small\"\n            css={css`\n              ${buttonStyles}\n              margin-right: 0.5rem;\n              font-weight: 600;\n            `}\n            onClick={handleEditLabels}\n            startIcon={<FontAwesomeIcon icon={faPen} />}\n            data-testid=\"open-labels-dialog\"\n          >\n            Edit labels\n          </Button>\n          <Button\n            size=\"small\"\n            css={css`\n              ${buttonStyles}\n              font-weight: 600;\n            `}\n            onClick={handleAddColumn}\n            startIcon={<FontAwesomeIcon icon={faPlus} />}\n            data-testid=\"add-col\"\n          >\n            Add Column\n          </Button>\n        </Right>\n      </Items>\n      <MemberDialog board={detail} />\n      <MemberListDialog />\n      <EditTaskDialog />\n      <CreateTaskDialog />\n      <LabelDialog />\n    </Container>\n  );\n};\n\nexport default BoardBar;\n","import React from \"react\";\nimport { Avatar, Button, Popover, Grid, Link } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport {\n  usePopupState,\n  bindTrigger,\n  bindPopover,\n} from \"material-ui-popup-state/hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { updateAvatar } from \"./ProfileSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst avatarBorderStyles = css`\n  cursor: pointer;\n  border: 2px solid #5195dd;\n  border-radius: 50%;\n`;\n\nconst pulseStyles = css`\n  ${avatarBorderStyles}\n  animation: pulse 1.5s infinite;\n\n  @keyframes pulse {\n    0% {\n      box-shadow: 0 0 0 0 rgba(104, 105, 246, 0.85);\n    }\n\n    70% {\n      box-shadow: 0 0 0 1em rgba(104, 105, 246, 0);\n    }\n\n    100% {\n      box-shadow: 0 0 0 0 rgba(104, 105, 246, 0);\n    }\n  }\n`;\n\nconst Container = styled.div`\n  margin: 2rem;\n  text-align: center;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n`;\n\nconst GridTitle = styled.h3`\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst GridFooter = styled.div`\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst AvatarListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  max-width: 330px;\n  max-height: 300px;\n`;\n\nconst UserAvatar = () => {\n  const user = useSelector((state: RootState) => state.profile.userDetail);\n  const avatars = useSelector((state: RootState) => state.profile.avatars);\n  const loading = useSelector(\n    (state: RootState) => state.profile.avatarLoading\n  );\n  const dispatch = useDispatch();\n  const popupState = usePopupState({\n    variant: \"popover\",\n    popupId: \"avatarPopover\",\n  });\n\n  const handleChangeAvatar = async (id: number) => {\n    dispatch(updateAvatar(id));\n  };\n\n  return (\n    <Container>\n      <Avatar\n        src={user?.avatar?.photo}\n        alt={user?.avatar?.name}\n        css={css`\n          height: 6rem;\n          width: 6rem;\n          font-size: 36px;\n        `}\n      />\n      <Button\n        css={css`\n          text-transform: initial;\n          margin-top: 0.75rem;\n          font-size: 0.75rem;\n          padding: 4px 12px;\n        `}\n        variant=\"outlined\"\n        {...bindTrigger(popupState)}\n        data-testid=\"change-avatar\"\n      >\n        Change\n      </Button>\n      <Popover\n        {...bindPopover(popupState)}\n        keepMounted\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\n      >\n        <AvatarListContainer>\n          <GridTitle>\n            <Text>Pick an Avatar</Text>\n            <Button\n              size=\"small\"\n              onClick={() => popupState.close()}\n              css={css`\n                min-width: 0;\n              `}\n              data-testid=\"close-avatar-picker\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </Button>\n          </GridTitle>\n          <Grid container>\n            {avatars.map((avatar) => (\n              <Grid item xs={3} key={avatar.id}>\n                <img\n                  onClick={() => handleChangeAvatar(avatar.id)}\n                  css={css`\n                    &:hover {\n                      ${avatarBorderStyles}\n                    }\n                    ${avatar.id === loading && pulseStyles}\n                  `}\n                  src={avatar.photo}\n                  alt={avatar.name}\n                  width={60}\n                  height={60}\n                  data-testid={`avatar-${avatar.name}`}\n                />\n              </Grid>\n            ))}\n          </Grid>\n          <GridFooter>\n            <Alert\n              severity=\"info\"\n              variant=\"outlined\"\n              css={css`\n                font-size: 12px;\n              `}\n            >\n              <span>\n                Icons made by{\" \"}\n                <Link\n                  href=\"https://www.flaticon.com/authors/pixel-perfect\"\n                  title=\"Pixel perfect\"\n                >\n                  Pixel perfect\n                </Link>{\" \"}\n                from{\" \"}\n                <Link href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n                  www.flaticon.com\n                </Link>\n              </span>\n            </Alert>\n          </GridFooter>\n        </AvatarListContainer>\n      </Popover>\n    </Container>\n  );\n};\n\nexport default UserAvatar;\n","/* eslint-disable react/jsx-no-undef */\nimport React from \"react\";\nimport {\n  Container,\n  Divider,\n  TextField,\n  Button,\n  useTheme,\n  WithTheme,\n} from \"@material-ui/core\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchUserDetail, fetchAvatarList, updateUser } from \"./ProfileSlice\";\nimport { RootState } from \"store\";\nimport { css } from \"@emotion/core\";\nimport { useForm } from \"react-hook-form\";\nimport UserAvatar from \"./UserAvatar\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport SEO from \"components/SEO\";\n\nconst Title = styled.h3`\n  margin-top: 2rem;\n  margin-bottom: 0.5rem;\n`;\n\nconst FormContainer = styled.div<WithTheme>`\n  margin-top: 2rem;\n  display: flex;\n  align-items: center;\n  ${(props) => props.theme.breakpoints.down(\"xs\")} {\n    flex-direction: column;\n  }\n`;\n\nconst Row = styled.div``;\n\nconst UserForm = styled.form`\n  width: 100%;\n`;\n\nconst Fields = styled.div``;\n\ninterface FormData {\n  username: string;\n  first_name: string;\n  last_name: string;\n  email: string;\n}\n\nconst Profile = () => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const userDetail = useSelector(\n    (state: RootState) => state.profile.userDetail\n  );\n  const apiErrors = useSelector((state: RootState) => state.profile.apiErrors);\n  const loading = useSelector((state: RootState) => state.profile.loading);\n  const { register, errors, handleSubmit, setError } = useForm<FormData>({\n    mode: \"onChange\",\n  });\n\n  React.useEffect(() => {\n    dispatch(fetchUserDetail());\n    dispatch(fetchAvatarList());\n  }, [userDetail?.id]);\n\n  React.useEffect(() => {\n    if (apiErrors) {\n      for (const errorKey in apiErrors) {\n        // @ts-ignore\n        setError(errorKey, \"api_error\", apiErrors[errorKey]);\n      }\n    }\n  }, [apiErrors]);\n\n  if (!userDetail) {\n    return null;\n  }\n\n  const onSubmit = async (data: FormData) => {\n    dispatch(updateUser({ ...userDetail, ...data }));\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <SEO title=\"Profile\" />\n      {userDetail.is_guest && (\n        <Alert\n          severity=\"warning\"\n          variant=\"outlined\"\n          css={css`\n            margin: 1rem 0;\n          `}\n        >\n          <AlertTitle>Warning</AlertTitle>\n          Guest accounts are deleted 24 hours after creation!\n        </Alert>\n      )}\n      <Title>About</Title>\n      <Divider />\n      <FormContainer theme={theme}>\n        <UserAvatar />\n        <UserForm onSubmit={handleSubmit(onSubmit)}>\n          <Fields>\n            <Row>\n              <TextField\n                id=\"username\"\n                name=\"username\"\n                inputRef={register({ required: \"This field is required\" })}\n                defaultValue={userDetail.username}\n                helperText={errors.username?.message}\n                error={Boolean(errors.username)}\n                label=\"Username\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Row>\n            <Row>\n              <TextField\n                id=\"first_name\"\n                name=\"first_name\"\n                inputRef={register()}\n                defaultValue={userDetail.first_name}\n                helperText={errors.first_name?.message}\n                error={Boolean(errors.first_name)}\n                label=\"First name\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Row>\n            <Row>\n              <TextField\n                id=\"last_name\"\n                name=\"last_name\"\n                inputRef={register()}\n                defaultValue={userDetail.last_name}\n                helperText={errors.last_name?.message}\n                error={Boolean(errors.last_name)}\n                label=\"Last name\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Row>\n            <Row>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                inputRef={register({\n                  pattern: {\n                    value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                    message: \"Invalid email\",\n                  },\n                })}\n                defaultValue={userDetail.email}\n                helperText={errors.email?.message}\n                error={Boolean(errors.email)}\n                label=\"Email\"\n                variant=\"outlined\"\n                margin=\"dense\"\n                fullWidth\n              />\n            </Row>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              disabled={loading}\n              data-testid=\"profile-save\"\n              css={css`\n                margin: 1rem 0;\n                text-align: right;\n              `}\n            >\n              Save\n            </Button>\n          </Fields>\n        </UserForm>\n      </FormContainer>\n    </Container>\n  );\n};\n\nexport default Profile;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.4336 11.9538L31.5195 12.9382V15.3757H29.7617V6.84442H31.5195V10.7116L32.293 9.65106L34.4668 6.84442H36.6289L33.5996 10.6354L36.7168 15.3757H34.625L32.4336 11.9538ZM38.8262 9.03583L38.8789 9.76825C39.332 9.20184 39.9395 8.91864 40.7012 8.91864C41.373 8.91864 41.873 9.11591 42.2012 9.51044C42.5293 9.90497 42.6973 10.4948 42.7051 11.28V15.3757H41.0117V11.321C41.0117 10.9616 40.9336 10.7018 40.7773 10.5417C40.6211 10.3776 40.3613 10.2956 39.998 10.2956C39.5215 10.2956 39.1641 10.4987 38.9258 10.905V15.3757H37.2324V9.03583H38.8262Z\",\n  fill: \"#C0C4FF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M49.707 12.2643C49.707 13.28 49.4902 14.0729 49.0566 14.6432C48.623 15.2097 48.0176 15.4929 47.2402 15.4929C46.5527 15.4929 46.0039 15.2292 45.5938 14.7018L45.5176 15.3757H43.9941V6.37567H45.6875V9.60419C46.0781 9.14716 46.5918 8.91864 47.2285 8.91864C48.002 8.91864 48.6074 9.2038 49.0449 9.77411C49.4863 10.3405 49.707 11.1393 49.707 12.1706V12.2643ZM48.0137 12.1413C48.0137 11.5007 47.9121 11.0339 47.709 10.7409C47.5059 10.444 47.2031 10.2956 46.8008 10.2956C46.2617 10.2956 45.8906 10.5163 45.6875 10.9577V13.4597C45.8945 13.905 46.2695 14.1276 46.8125 14.1276C47.3594 14.1276 47.7188 13.8581 47.8906 13.319C47.9727 13.0612 48.0137 12.6686 48.0137 12.1413ZM50.4922 12.1472C50.4922 11.5182 50.6133 10.9577 50.8555 10.4655C51.0977 9.97333 51.4453 9.59247 51.8984 9.32294C52.3555 9.05341 52.8848 8.91864 53.4863 8.91864C54.3418 8.91864 55.0391 9.18036 55.5781 9.7038C56.1211 10.2272 56.4238 10.9382 56.4863 11.8366L56.498 12.2702C56.498 13.2429 56.2266 14.0241 55.6836 14.614C55.1406 15.1999 54.4121 15.4929 53.498 15.4929C52.584 15.4929 51.8535 15.1999 51.3066 14.614C50.7637 14.028 50.4922 13.2311 50.4922 12.2233V12.1472ZM52.1855 12.2702C52.1855 12.8718 52.2988 13.3327 52.5254 13.653C52.752 13.9694 53.0762 14.1276 53.498 14.1276C53.9082 14.1276 54.2285 13.9714 54.459 13.6589C54.6895 13.3425 54.8047 12.8386 54.8047 12.1472C54.8047 11.5573 54.6895 11.1003 54.459 10.7761C54.2285 10.4518 53.9043 10.2897 53.4863 10.2897C53.0723 10.2897 52.752 10.4518 52.5254 10.7761C52.2988 11.0964 52.1855 11.5944 52.1855 12.2702ZM61.2148 15.3757C61.1367 15.2233 61.0801 15.0339 61.0449 14.8073C60.6348 15.2643 60.1016 15.4929 59.4453 15.4929C58.8242 15.4929 58.3086 15.3132 57.8984 14.9538C57.4922 14.5944 57.2891 14.1413 57.2891 13.5944C57.2891 12.9225 57.5371 12.4069 58.0332 12.0475C58.5332 11.6882 59.2539 11.5065 60.1953 11.5026H60.9746V11.1393C60.9746 10.8464 60.8984 10.612 60.7461 10.4362C60.5977 10.2604 60.3613 10.1725 60.0371 10.1725C59.752 10.1725 59.5273 10.2409 59.3633 10.3776C59.2031 10.5143 59.123 10.7018 59.123 10.9401H57.4297C57.4297 10.5729 57.543 10.2331 57.7695 9.92059C57.9961 9.60809 58.3164 9.36395 58.7305 9.18817C59.1445 9.00848 59.6094 8.91864 60.125 8.91864C60.9062 8.91864 61.5254 9.11591 61.9824 9.51044C62.4434 9.90106 62.6738 10.4518 62.6738 11.1628V13.9108C62.6777 14.5124 62.7617 14.9675 62.9258 15.2761V15.3757H61.2148ZM59.8145 14.1979C60.0645 14.1979 60.2949 14.1432 60.5059 14.0339C60.7168 13.9206 60.873 13.7702 60.9746 13.5827V12.4929H60.3418C59.4941 12.4929 59.043 12.7858 58.9883 13.3718L58.9824 13.4714C58.9824 13.6823 59.0566 13.8561 59.2051 13.9929C59.3535 14.1296 59.5566 14.1979 59.8145 14.1979ZM67.5371 10.6237C67.3066 10.5925 67.1035 10.5768 66.9277 10.5768C66.2871 10.5768 65.8672 10.7936 65.668 11.2272V15.3757H63.9746V9.03583H65.5742L65.6211 9.79169C65.9609 9.20966 66.4316 8.91864 67.0332 8.91864C67.2207 8.91864 67.3965 8.94403 67.5605 8.99481L67.5371 10.6237ZM67.9766 12.1589C67.9766 11.1706 68.1973 10.3835 68.6387 9.79755C69.084 9.21161 69.6914 8.91864 70.4609 8.91864C71.0781 8.91864 71.5879 9.14911 71.9902 9.61005V6.37567H73.6895V15.3757H72.1602L72.0781 14.7018C71.6562 15.2292 71.1133 15.4929 70.4492 15.4929C69.7031 15.4929 69.1035 15.1999 68.6504 14.614C68.2012 14.0241 67.9766 13.2057 67.9766 12.1589ZM69.6699 12.2819C69.6699 12.8757 69.7734 13.3307 69.9805 13.6472C70.1875 13.9636 70.4883 14.1218 70.8828 14.1218C71.4062 14.1218 71.7754 13.9011 71.9902 13.4597V10.9577C71.7793 10.5163 71.4141 10.2956 70.8945 10.2956C70.0781 10.2956 69.6699 10.9577 69.6699 12.2819Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 4.91754,\n  y: 1.14645,\n  width: 12,\n  height: 19,\n  rx: 1,\n  transform: \"rotate(15 4.91754 1.14645)\",\n  fill: \"#FEFEFE\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 4.51764,\n  y: 13.3757,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 4.51764 13.3757)\",\n  fill: \"#666EEE\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 5.51764,\n  y: 10.3757,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 5.51764 10.3757)\",\n  fill: \"#666EEE\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 6.51764,\n  y: 7.37567,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 6.51764 7.37567)\",\n  fill: \"#666EEE\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 12.4019,\n  width: 13.0426,\n  height: 19.8713,\n  rx: 1,\n  transform: \"rotate(15 12.4019 0)\",\n  fill: \"#727AEE\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 13.1719,\n  y: 0.375671,\n  width: 12,\n  height: 19,\n  rx: 1,\n  transform: \"rotate(15 13.1719 0.375671)\",\n  fill: \"white\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 12.5176,\n  y: 12.3757,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 12.5176 12.3757)\",\n  fill: \"#727AEE\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 13.5176,\n  y: 9.37567,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 13.5176 9.37567)\",\n  fill: \"#727AEE\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"rect\", {\n  x: 14.5176,\n  y: 6.37567,\n  width: 7,\n  height: 2,\n  transform: \"rotate(15 14.5176 6.37567)\",\n  fill: \"#727AEE\"\n});\n\nvar SvgLogo = function SvgLogo(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 75,\n    height: 23,\n    viewBox: \"0 0 75 23\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLogo, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/logo.eb72b059.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { Drawer, List, Hidden, Tooltip } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport { sidebarWidth } from \"const\";\nimport styled from \"@emotion/styled\";\nimport { ReactComponent as Logo } from \"static/svg/logo.svg\";\nimport { ReactComponent as GitHubIcon } from \"static/svg/github.svg\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  mobileDrawerOpen,\n  setMobileDrawerOpen,\n} from \"features/responsive/ResponsiveSlice\";\n\nconst Container = styled.div`\n  height: 100%;\n  background-color: #666eee;\n`;\n\nconst TopArea = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n`;\n\nconst linkStyles = css`\n  display: block;\n  color: #caceed;\n  font-weight: bold;\n  padding: 6px 20px;\n  text-decoration: none;\n  &:hover {\n    color: #fff;\n    cursor: pointer;\n  }\n  &.active {\n    color: #fff;\n  }\n`;\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const mobileOpen = useSelector(mobileDrawerOpen);\n\n  const handleCloseMobileDrawer = () => {\n    dispatch(setMobileDrawerOpen(false));\n  };\n\n  return (\n    <>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={mobileOpen}\n          onClose={handleCloseMobileDrawer}\n          ModalProps={{ keepMounted: true }}\n        >\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer anchor=\"left\" variant=\"permanent\">\n          <DrawerContent />\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nconst BottomBlock = styled.div`\n  position: absolute;\n  left: 0px;\n  bottom: 2rem;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst GithubLink = styled.a`\n  color: #fff;\n  font-size: 1.75rem;\n`;\n\nconst DrawerContent = () => {\n  const history = useHistory();\n\n  return (\n    <Container>\n      <TopArea>\n        <Logo\n          css={css`\n            &:hover {\n              cursor: pointer;\n            }\n          `}\n          onClick={() => history.push(\"/\")}\n        />\n      </TopArea>\n      <List\n        css={css`\n          width: ${sidebarWidth}px;\n          margin-top: 40px;\n        `}\n      >\n        <NavLink to=\"/\" exact css={linkStyles}>\n          Home\n        </NavLink>\n        <NavLink to=\"/boards/\" exact css={linkStyles}>\n          Boards\n        </NavLink>\n      </List>\n      <BottomBlock></BottomBlock>\n    </Container>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport { Switch, Route, RouteProps } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nimport Board from \"features/board\";\nimport BoardList from \"features/board/BoardList\";\nimport Navbar from \"components/Navbar\";\nimport Home from \"features/home/Home\";\nimport BoardBar from \"features/board/BoardBar\";\nimport Profile from \"features/profile/Profile\";\nimport Sidebar from \"features/sidebar/Sidebar\";\nimport PageError from \"components/PageError\";\nimport { sidebarWidth } from \"const\";\nimport { useTheme, WithTheme } from \"@material-ui/core\";\n\nconst Main = styled.div<WithTheme>`\n  ${(props) => props.theme.breakpoints.up(\"sm\")} {\n    margin-left: ${sidebarWidth + 8}px;\n  }\n`;\n\nconst Wrapper: React.FC = ({ children }) => {\n  const theme = useTheme();\n\n  return (\n    <>\n      <Sidebar />\n      <Main theme={theme}>\n        <Navbar />\n        {children}\n      </Main>\n    </>\n  );\n};\n\nconst AppRoute = (props: RouteProps) => (\n  <Route {...props}>\n    <Wrapper>{props.children}</Wrapper>\n  </Route>\n);\n\nconst AuthenticatedApp = () => {\n  return (\n    <Switch>\n      <AppRoute exact path=\"/profile\">\n        <Profile />\n      </AppRoute>\n      <AppRoute exact path=\"/boards\">\n        <BoardList />\n      </AppRoute>\n      <AppRoute exact path=\"/b/:id\">\n        <BoardBar />\n        <Board />\n      </AppRoute>\n\n      <AppRoute exact path=\"/\">\n        <Home />\n      </AppRoute>\n      <Route path=\"*\">\n        <PageError>Page not found.</PageError>\n      </Route>\n    </Switch>\n  );\n};\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}