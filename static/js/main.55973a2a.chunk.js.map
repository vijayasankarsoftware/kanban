{"version":3,"sources":["components/FullPageSpinner.tsx","features/toast/Toast.tsx","utils/localStorage.tsx","store.ts","App.tsx","index.tsx","api.tsx","features/board/BoardSlice.tsx","const.ts","features/auth/AuthSlice.tsx","utils/colors.ts","features/profile/ProfileSlice.tsx","features/column/ColumnSlice.tsx","features/member/MemberSlice.tsx","features/label/LabelSlice.tsx","features/task/TaskSlice.tsx","features/toast/ToastSlice.tsx","features/comment/CommentSlice.tsx","features/responsive/ResponsiveSlice.tsx"],"names":["FullPageSpinner","Fade","style","transitionDelay","unmountOnExit","CircularProgress","Toast","timer","dispatch","useDispatch","open","useSelector","state","toast","message","severity","handleClose","clearToast","useEffect","setTimeout","TOAST_AUTO_HIDE_DURATION","clearTimeout","Snackbar","Alert","action","Button","color","size","onClick","data-testid","css","icon","faTimes","loadState","serializedState","localStorage","getItem","LOCAL_STORAGE_KEY","JSON","parse","err","saveState","stringify","setItem","rootReducer","combineReducers","auth","authReducer","profile","profileReducer","toastReducer","board","boardReducer","column","columnReducer","task","taskReducer","comment","commentReducer","member","memberReducer","label","labelReducer","responsive","responsiveReducer","store","configureStore","devTools","process","preloadedState","reducer","subscribe","getState","authInitialState","user","setupInterceptors","loadAuthenticatedApp","AuthenticatedApp","React","lazy","UnauthenticatedApp","AuthWrapper","fallback","key","id","App","ThemeProvider","theme","CssBaseline","styles","FOCUS_BOX_SHADOW","modalPopperAutocompleteModalIndex","ReactDOM","render","document","getElementById","axios","defaults","xsrfHeaderName","xsrfCookieName","interceptors","response","use","error","status","logout","Promise","reject","API_LOGIN","API_LOGOUT","API_REGISTER","API_GUEST_REGISTER","API_AUTH_SETUP","API_AVATARS","API_BOARDS","API_COLUMNS","API_TASKS","API_COMMENTS","API_LABELS","API_SORT_COLUMNS","API_SORT_TASKS","API_USERS","API_SEARCH_USERS","API_CHANGE_PASSWORD","initialState","detail","all","fetchLoading","fetchError","createDialogOpen","createLoading","createError","detailLoading","detailError","undefined","patchBoard","createAsyncThunk","a","fields","api","patch","data","fetchAllBoards","get","fetchBoardById","boardSearchQuery","rejectWithValue","queryString","assigneeIds","boardId","createBoard","name","post","slice","createSlice","reducers","setCreateDialogOpen","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","owner","members","push","actions","currentBoardOwner","Boolean","Key","grid","borderRadius","imageSize","barHeight","sidebarWidth","taskHeaderTextareaWidth","taskWidth","taskSideWidth","taskDialogHeight","commentBoxWidth","commentBoxWidthMobile","PRIORITY_2","value","PRIORITY_OPTIONS","PRIORITY_MAP","reduce","acc","curr","PRIO_COLORS","H","PRIO1","M","PRIO2","L","PRIO3","MD_EDITOR_PLUGINS","MD_EDITOR_CONFIG","view","menu","md","html","canView","fullScreen","hideMenu","MD_EDITING_CONFIG","MD_READ_ONLY_CONFIG","createMuiTheme","palette","type","primary","main","PRIMARY_MAIN","secondary","light","grey","typography","fontFamily","props","MuiButtonBase","disableRipple","MuiDialog","transitionDuration","overrides","MuiButton","root","transition","modalPopperIndex","zIndex","modal","modalPopperWidth","loginLoading","loginErrors","registerErrors","changePassword","password","newPassword","headers","Authorization","register","credentials","console","log","guestRegister","_","createErrorToast","login","toString","resetProfile","createInfoToast","clearErrors","updateUser","username","updateAvatarFulfilled","photo_url","photo","selectMe","PRIMARY","DANGER","HINT","WHITE","BLACK","COLUMN_COLOR","TASK_G","OWNER_COLOR","R50","P100","T50","N0","N30","N70","N800","N900","N80A","getContrastColor","hexColor","length","split","map","h","join","parseInt","substr","getRandomHexColor","newColor","Math","floor","random","fetchUserDetail","userData","put","createSuccessToast","fetchAvatarList","avatars","userDetail","loading","apiErrors","avatarLoading","updateAvatarPending","avatar","updateAvatarRejected","updateAvatar","avatarId","addColumn","title","tasks","patchColumn","deleteColumn","delete","columnAdapter","createEntityAdapter","getInitialState","setColumns","setAll","columns","addOne","updateOne","changes","removeOne","columnSelectors","getSelectors","selectAllColumns","selectAll","selectColumnsEntities","selectEntities","updateColumns","previousColumns","order","col","memberAdapter","sortComparer","b","localeCompare","dialogMember","memberListOpen","addBoardMembers","addMany","removeBoardMember","setDialogMember","setMemberListOpen","memberSelectors","selectAllMembers","selectMembersEntities","selectTotal","createLabel","patchLabel","deleteLabel","labelAdapter","dialogOpen","setDialogOpen","labels","labelSelectors","selectAllLabels","selectLabelEntities","patchTask","createTask","errorMessages","Object","values","flat","deleteTask","byColumn","byId","createDialogColumn","editDialogOpen","setTasksByColumn","setCreateDialogColumn","setEditDialogOpen","t","entries","i","splice","deletedLabelId","taskId","filter","labelId","deletedMemberId","assignees","assigneeId","updateTasksByColumn","tasksByColumn","previousTasksByColumn","fetchComments","createComment","deleteComment","commentAdapter","created","fetchCommentsStatus","createCommentStatus","selectAllComments","selectFetchCommentsStatus","selectCreateCommentStatus","mobileDrawerOpen","setMobileDrawerOpen"],"mappings":"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","file":"static/js/main.55973a2a.chunk.js","sourcesContent":["import React from \"react\";\nimport { CircularProgress, Fade } from \"@material-ui/core\";\n\nconst FullPageSpinner = () => (\n  <Fade style={{ transitionDelay: \"800ms\" }} unmountOnExit>\n    <CircularProgress />\n  </Fade>\n);\n\nexport default FullPageSpinner;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Snackbar, Button } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { RootState } from \"store\";\nimport { clearToast } from \"./ToastSlice\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { css } from \"@emotion/core\";\nimport { TOAST_AUTO_HIDE_DURATION } from \"const\";\n\nconst Toast = () => {\n  const dispatch = useDispatch();\n\n  const open = useSelector((state: RootState) => state.toast.open);\n  const message = useSelector((state: RootState) => state.toast.message);\n  const severity = useSelector((state: RootState) => state.toast.severity);\n\n  let timer: ReturnType<typeof setTimeout>;\n\n  function handleClose() {\n    dispatch(clearToast());\n  }\n\n  useEffect(() => {\n    if (open) {\n      timer = setTimeout(() => {\n        handleClose();\n      }, TOAST_AUTO_HIDE_DURATION);\n    }\n    return () => clearTimeout(timer);\n  }, [open]);\n\n  return (\n    <Snackbar open={open}>\n      <Alert\n        severity={severity}\n        action={\n          <Button\n            color=\"inherit\"\n            size=\"small\"\n            onClick={handleClose}\n            data-testid=\"toast-close\"\n            css={css`\n              min-width: 0;\n            `}\n          >\n            <FontAwesomeIcon icon={faTimes} />\n          </Button>\n        }\n      >\n        {message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default Toast;\n","import { LOCAL_STORAGE_KEY } from \"const\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state: any) => {\n  const serializedState = JSON.stringify(state);\n  localStorage.setItem(LOCAL_STORAGE_KEY, serializedState);\n};\n\nexport default { loadState, saveState };\n","import { loadState, saveState } from \"./utils/localStorage\";\nimport { Action, configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\n\nimport authReducer from \"./features/auth/AuthSlice\";\nimport profileReducer from \"./features/profile/ProfileSlice\";\nimport toastReducer from \"./features/toast/ToastSlice\";\nimport boardReducer from \"./features/board/BoardSlice\";\nimport columnReducer from \"./features/column/ColumnSlice\";\nimport taskReducer from \"./features/task/TaskSlice\";\nimport commentReducer from \"./features/comment/CommentSlice\";\nimport labelReducer from \"./features/label/LabelSlice\";\nimport memberReducer from \"./features/member/MemberSlice\";\nimport responsiveReducer from \"./features/responsive/ResponsiveSlice\";\n\nimport authInitialState from \"./features/auth/AuthSlice\";\nimport { setupInterceptors } from \"api\";\n\nexport const rootReducer = combineReducers({\n  auth: authReducer,\n  profile: profileReducer,\n  toast: toastReducer,\n  board: boardReducer,\n  column: columnReducer,\n  task: taskReducer,\n  comment: commentReducer,\n  member: memberReducer,\n  label: labelReducer,\n  responsive: responsiveReducer,\n});\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== \"production\",\n  preloadedState: loadState() || {},\n  reducer: rootReducer,\n});\n\nstore.subscribe(() => {\n  const state = store.getState();\n  saveState({\n    auth: {\n      ...authInitialState,\n      user: state.auth.user,\n    },\n  });\n});\n\nsetupInterceptors(store);\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React, { useEffect, Suspense } from \"react\";\nimport { Provider, useSelector } from \"react-redux\";\nimport { ThemeProvider, CssBaseline } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Global, css } from \"@emotion/core\";\n\nimport FullPageSpinner from \"components/FullPageSpinner\";\nimport Toast from \"features/toast/Toast\";\nimport { theme, modalPopperAutocompleteModalIndex } from \"./const\";\nimport store, { RootState } from \"./store\";\nimport { FOCUS_BOX_SHADOW } from \"utils/colors\";\n\nconst loadAuthenticatedApp = () => import(\"./AuthenticatedApp\");\nconst AuthenticatedApp = React.lazy(loadAuthenticatedApp);\nconst UnauthenticatedApp = React.lazy(() => import(\"./features/auth/Auth\"));\n\nconst AuthWrapper = () => {\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    // Preload the AuthenticatedApp\n    // while the user is logging in\n    loadAuthenticatedApp();\n  }, []);\n\n  return (\n    <Suspense fallback={<FullPageSpinner />}>\n      {user ? <AuthenticatedApp key={user.id} /> : <UnauthenticatedApp />}\n    </Suspense>\n  );\n};\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <AuthWrapper />\n          <Toast />\n          <Global\n            styles={css`\n              .Mui-focusVisible {\n                box-shadow: 0 0 3px 2px ${FOCUS_BOX_SHADOW};\n              }\n              textarea {\n                font-family: inherit;\n              }\n              .MuiAutocomplete-popper {\n                z-index: ${modalPopperAutocompleteModalIndex} !important;\n              }\n            `}\n          />\n        </ThemeProvider>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","/* istanbul ignore file */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-markdown-editor-lite/lib/index.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import axios from \"axios\";\nimport { logout } from \"features/auth/AuthSlice\";\n\n// Config global defaults for axios/django\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nexport const setupInterceptors = (store: any) => {\n  axios.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      // Handle expired sessions\n      if (error.response && error.response.status === 401) {\n        store.dispatch(logout());\n      }\n      return Promise.reject(error);\n    }\n  );\n};\n\n// Available endpoints\nexport const API_LOGIN = \"/auth/login/\";\nexport const API_LOGOUT = \"/auth/logout/\";\nexport const API_REGISTER = \"/auth/registration/\";\nexport const API_GUEST_REGISTER = \"/auth/guest/\";\nexport const API_AUTH_SETUP = \"/auth/setup/\";\n\nexport const API_AVATARS = \"/api/avatars/\";\nexport const API_BOARDS = \"/api/boards/\";\nexport const API_COLUMNS = \"/api/columns/\";\nexport const API_TASKS = \"/api/tasks/\";\nexport const API_COMMENTS = \"/api/comments/\";\nexport const API_LABELS = \"/api/labels/\";\nexport const API_SORT_COLUMNS = \"/api/sort/column/\";\nexport const API_SORT_TASKS = \"/api/sort/task/\";\nexport const API_USERS = \"/api/users/\";\nexport const API_SEARCH_USERS = \"/api/u/search/\";\n\n//for change password\n\nexport const API_CHANGE_PASSWORD = \"change-password/\";\n\nexport default axios;\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { Board, IColumn, Id, ITask, Label, NanoBoard } from \"types\";\nimport api, { API_BOARDS } from \"api\";\nimport { RootState } from \"store\";\nimport { logout } from \"features/auth/AuthSlice\";\n\ninterface InitialState {\n  detail: Board | null;\n  all: NanoBoard[];\n  fetchLoading: boolean;\n  fetchError: string | null;\n  createDialogOpen: boolean;\n  createLoading: boolean;\n  createError: string | null;\n  detailLoading: boolean;\n  detailError?: string;\n}\n\nexport const initialState: InitialState = {\n  detail: null,\n  all: [],\n  fetchLoading: true,\n  fetchError: null,\n  createDialogOpen: false,\n  createLoading: false,\n  createError: null,\n  detailLoading: false,\n  detailError: undefined,\n};\n\ninterface PatchFields {\n  name: string;\n}\n\nexport const patchBoard = createAsyncThunk<\n  Board,\n  { id: Id; fields: Partial<PatchFields> }\n>(\"board/patchBoardStatus\", async ({ id, fields }) => {\n  const response = await api.patch(`${API_BOARDS}${id}/`, fields);\n  return response.data;\n});\n\ninterface ColumnsResponse extends IColumn {\n  tasks: ITask[];\n}\n\ninterface BoardDetailResponse extends Board {\n  columns: ColumnsResponse[];\n  labels: Label[];\n}\n\nexport interface BoardSearchQuery {\n  boardId: string | number;\n  assigneeIds?: number[];\n}\n\nexport const fetchAllBoards = createAsyncThunk<Board[]>(\n  \"board/fetchAllStatus\",\n  async () => {\n    const response = await api.get(API_BOARDS);\n    return response.data;\n  }\n);\n\nexport const fetchBoardById = createAsyncThunk<\n  BoardDetailResponse,\n  BoardSearchQuery,\n  {\n    rejectValue: string;\n  }\n>(\"board/fetchByIdStatus\", async (boardSearchQuery, { rejectWithValue }) => {\n  try {\n    const queryString = boardSearchQuery.assigneeIds\n      ? `?assignees=${boardSearchQuery.assigneeIds}`\n      : \"\";\n    const response = await api.get(\n      `${API_BOARDS}${boardSearchQuery.boardId}/${queryString}`\n    );\n    return response.data;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\n\nexport const createBoard = createAsyncThunk<Board, string>(\n  \"board/createBoardStatus\",\n  async (name) => {\n    const response = await api.post(API_BOARDS, { name });\n    return response.data;\n  }\n);\n\nexport const slice = createSlice({\n  name: \"board\",\n  initialState,\n  reducers: {\n    setCreateDialogOpen: (state, action: PayloadAction<boolean>) => {\n      state.createDialogOpen = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchAllBoards.pending, (state) => {\n      state.fetchLoading = true;\n      state.fetchError = null;\n      state.detailError = undefined;\n    });\n    builder.addCase(fetchAllBoards.fulfilled, (state, action) => {\n      state.all = action.payload;\n      state.fetchError = null;\n      state.fetchLoading = false;\n    });\n    builder.addCase(fetchAllBoards.rejected, (state, action) => {\n      state.fetchError = action.payload as string;\n      state.fetchLoading = false;\n    });\n    builder.addCase(fetchBoardById.pending, (state) => {\n      state.detailLoading = true;\n    });\n    builder.addCase(fetchBoardById.fulfilled, (state, action) => {\n      const { id, name, owner, members } = action.payload;\n      state.detail = { id, name, owner, members };\n      state.detailError = undefined;\n      state.detailLoading = false;\n    });\n    builder.addCase(fetchBoardById.rejected, (state, action) => {\n      state.detailError = action.payload;\n      state.detailLoading = false;\n    });\n    builder.addCase(createBoard.pending, (state) => {\n      state.createLoading = true;\n    });\n    builder.addCase(createBoard.fulfilled, (state, action) => {\n      state.all.push(action.payload);\n      state.createError = null;\n      state.createLoading = false;\n      state.createDialogOpen = false;\n    });\n    builder.addCase(createBoard.rejected, (state, action) => {\n      state.createError = action.payload as string;\n      state.createLoading = false;\n    });\n    builder.addCase(patchBoard.fulfilled, (state, action) => {\n      if (state.detail !== null) {\n        state.detail.name = action.payload.name;\n      }\n      state.detailError = undefined;\n      state.detailLoading = false;\n    });\n    builder.addCase(logout.fulfilled, (state) => {\n      state.all = [];\n      state.detail = null;\n    });\n  },\n});\n\nexport const { setCreateDialogOpen } = slice.actions;\n\nexport const currentBoardOwner = (state: RootState) => {\n  return (\n    Boolean(state.auth.user) &&\n    state.board.detail?.owner === state.auth.user?.id\n  );\n};\n\nexport default slice.reducer;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport { Priority, PriorityValue } from \"types\";\nimport { PRIO1, PRIO2, PRIO3, PRIMARY_MAIN } from \"utils/colors\";\nimport { grey } from \"@material-ui/core/colors\";\n\nexport const TOAST_AUTO_HIDE_DURATION = 4000;\nexport const LOCAL_STORAGE_KEY = \"knboard-data\";\n\nexport const grid = 8;\nexport const borderRadius = 4;\nexport const imageSize = 40;\nexport const barHeight = 50;\nexport const sidebarWidth = 120;\nexport const taskHeaderTextareaWidth = 180;\nexport const taskWidth = 250;\nexport const taskSideWidth = 220;\nexport const taskDialogHeight = 800;\nexport const commentBoxWidth = 390;\nexport const commentBoxWidthMobile = 300;\n\nexport const PRIORITY_1: Priority = { value: \"H\", label: \"High\" };\nexport const PRIORITY_2: Priority = { value: \"M\", label: \"Medium\" };\nexport const PRIORITY_3: Priority = { value: \"L\", label: \"Low\" };\n\nexport const PRIORITY_OPTIONS: Priority[] = [\n  PRIORITY_1,\n  PRIORITY_2,\n  PRIORITY_3,\n];\n\nexport const PRIORITY_MAP = PRIORITY_OPTIONS.reduce((acc, curr) => {\n  acc[curr.value] = curr;\n  return acc;\n}, {} as Record<PriorityValue, Priority>);\n\nexport const PRIO_COLORS = {\n  H: PRIO1,\n  M: PRIO2,\n  L: PRIO3,\n};\n\nexport const MD_EDITOR_PLUGINS = [\n  \"header\",\n  \"fonts\",\n  \"table\",\n  \"link\",\n  \"mode-toggle\",\n  \"full-screen\",\n];\n\nexport const MD_EDITOR_CONFIG = {\n  view: {\n    menu: true,\n    md: true,\n    html: false,\n  },\n  canView: {\n    menu: true,\n    md: true,\n    html: true,\n    fullScreen: true,\n    hideMenu: false,\n  },\n};\n\nexport const MD_EDITING_CONFIG = {\n  view: {\n    menu: false,\n    md: true,\n    html: false,\n  },\n  canView: {\n    menu: false,\n    md: true,\n    html: false,\n    fullScreen: false,\n    hideMenu: false,\n  },\n};\n\nexport const MD_READ_ONLY_CONFIG = {\n  view: {\n    menu: false,\n    md: false,\n    html: true,\n  },\n  canView: {\n    menu: false,\n    md: false,\n    html: true,\n    fullScreen: false,\n    hideMenu: false,\n  },\n};\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: PRIMARY_MAIN,\n    },\n    secondary: {\n      light: grey[700],\n      main: \"#FDB915\",\n    },\n  },\n  typography: {\n    fontFamily: '\"Inter var\", sans-serif',\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n    MuiDialog: {\n      transitionDuration: 100,\n    },\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        \"&:hover\": {\n          transition: \"none\",\n        },\n      },\n    },\n  },\n});\n\nexport const modalPopperIndex = theme.zIndex.modal + 100;\nexport const modalPopperAutocompleteIndex = modalPopperIndex + 100;\nexport const modalPopperAutocompleteModalIndex =\n  modalPopperAutocompleteIndex + 100;\nexport const modalPopperWidth = 300;\n\nexport enum Key {\n  Enter = 13,\n  Escape = 27,\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api, {\n  API_LOGIN,\n  API_LOGOUT,\n  API_REGISTER,\n  API_GUEST_REGISTER,\n  API_CHANGE_PASSWORD,\n} from \"api\";\nimport { User } from \"types\";\nimport { createErrorToast, createInfoToast } from \"features/toast/ToastSlice\";\nimport { AxiosError } from \"axios\";\nimport {\n  updateUser,\n  updateAvatarFulfilled,\n  resetProfile,\n} from \"features/profile/ProfileSlice\";\nimport { RootState } from \"store\";\nimport axios from \"api\";\nimport { Key } from \"const\";\nimport { useState } from \"react\";\n\ninterface InitialState {\n  user: User | null;\n  loginLoading: boolean;\n  loginErrors?: ValidationErrors;\n  registerErrors?: ValidationErrors;\n}\n\nexport const initialState: InitialState = {\n  user: null,\n  loginLoading: false,\n  loginErrors: undefined,\n  registerErrors: undefined,\n};\n\ninterface ValidationErrors {\n  non_field_errors?: string[];\n}\n\ninterface RegisterProps {\n  username: string;\n  email: string;\n  password1: string;\n  password2: string;\n}\n\n// method to call api for change password\n\n// to change password\n/*export const changePassword = createAsyncThunk(\n  \"auth/changePassword\",\n  async () => {\n    try {\n      const response = await api.post(\n        API_CHANGE_PASSWORD,\n        { newPassword: \"hello12345\" },\n        {\n          headers: {\n            Authorization: `Bearer bcdd05fcd896d1902c8d3449eb3f8547834f53f0`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);*/\n\nexport const changePassword = async (password: string): Promise<string> => {\n  try {\n    // here i am going to get token from local storage\n    const key = localStorage.getItem(\"knboard-data\")\n      ? (JSON.parse(localStorage.getItem(\"knboard-data\") as string) as {\n          auth: { user: { key: string } };\n        }).auth.user.key\n      : null;\n    const response = await api.post(\n      API_CHANGE_PASSWORD,\n      { newPassword: password },\n      {\n        headers: {\n          Authorization: `Bearer ${key}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n/*export const changePassword = createAsyncThunk(\n  \"auth/changePassword\",\n  async (newPassword, { getState }) => {\n    try {\n      // here i am going to get token from local storage\n      const response = await api.post(\n        API_CHANGE_PASSWORD,\n        { newPassword: \"sankar12345\" },\n        {\n          headers: {\n            Authorization: `Bearer 12aaa3a3db2d16a076cbfa2a04585cbb9a8edae8`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n);*/\n\nexport const register = createAsyncThunk<\n  User,\n  RegisterProps,\n  {\n    rejectValue: ValidationErrors;\n  }\n>(\"auth/registerStatus\", async (credentials, { rejectWithValue }) => {\n  try {\n    // Don't POST blank email\n    if (!credentials[\"email\"]) {\n      delete credentials[\"email\"];\n    }\n    const response = await api.post(API_REGISTER, credentials);\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    const error: AxiosError<ValidationErrors> = err;\n    if (!error.response) {\n      throw err;\n    }\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const guestRegister = createAsyncThunk<User>(\n  \"auth/guestRegisterStatus\",\n  async (_, { dispatch }) => {\n    try {\n      const response = await api.post(API_GUEST_REGISTER);\n      return response.data;\n    } catch (e) {\n      dispatch(\n        createErrorToast(\"Failed to enter as a guest, try again later.\")\n      );\n    }\n  }\n);\n\ninterface LoginProps {\n  username: string;\n  password: string;\n}\n\nexport const login = createAsyncThunk<\n  User,\n  LoginProps,\n  {\n    rejectValue: ValidationErrors;\n  }\n>(\"auth/loginStatus\", async (credentials, { rejectWithValue }) => {\n  try {\n    const response = await api.post(API_LOGIN, credentials);\n    return response.data;\n  } catch (err) {\n    const error: AxiosError<ValidationErrors> = err;\n    if (!error.response) {\n      throw err;\n    }\n    return rejectWithValue(error.response.data);\n  }\n});\n\nexport const logout = createAsyncThunk(\n  \"auth/logoutStatus\",\n  async (_, { dispatch }) => {\n    try {\n      await api.post(API_LOGOUT);\n    } catch (err) {\n      dispatch(createErrorToast(err.toString()));\n    } finally {\n      dispatch(resetProfile());\n      dispatch(createInfoToast(\"Logged out\"));\n    }\n  }\n);\n\nexport const slice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    clearErrors: (state) => {\n      state.loginErrors = undefined;\n      state.registerErrors = undefined;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(login.pending, (state) => {\n      state.loginLoading = true;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.loginLoading = false;\n      state.loginErrors = undefined;\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      state.loginErrors = action.payload;\n      state.loginLoading = false;\n    });\n    builder.addCase(logout.fulfilled, (state) => {\n      state.user = null;\n    });\n    builder.addCase(logout.rejected, (state) => {\n      state.user = null;\n    });\n    builder.addCase(updateUser.fulfilled, (state, action) => {\n      if (state.user) {\n        state.user.username = action.payload.username;\n      }\n    });\n    builder.addCase(register.fulfilled, (state, action) => {\n      state.user = action.payload;\n      state.registerErrors = undefined;\n    });\n    builder.addCase(register.rejected, (state, action) => {\n      state.registerErrors = action.payload;\n    });\n    builder.addCase(guestRegister.fulfilled, (state, action) => {\n      state.user = action.payload;\n    });\n    builder.addCase(updateAvatarFulfilled, (state, action) => {\n      if (state.user) {\n        // eslint-disable-next-line @typescript-eslint/camelcase\n        state.user.photo_url = action.payload.photo;\n      }\n    });\n  },\n});\n\nexport const { clearErrors } = slice.actions;\n\nexport const selectMe = (state: RootState) => state.auth.user;\n\nexport default slice.reducer;\nfunction async() {\n  throw new Error(\"Function not implemented.\");\n}\n","// Palette\nexport const PRIMARY = \"#263590\";\nexport const PRIMARY_MAIN = \"#5E68ED\";\nexport const SECONDARY_MAIN = \"#89DAFF\";\nexport const DANGER = \"#E25241\";\nexport const HINT = \"#626E83\";\n\n// Contrast\nexport const WHITE = \"#FFFFFF\";\nexport const BLACK = \"#000000\";\n\n// Priority\nexport const PRIO1 = \"#FAA\";\nexport const PRIO2 = \"#CCC\";\nexport const PRIO3 = \"#ADA\";\n\n// Custom\nexport const FOCUS_BOX_SHADOW = \"#98a2de\";\nexport const COLUMN_COLOR = \"#f2f5f9\";\nexport const TASK_G = \"#646e81\";\nexport const OWNER_COLOR = \"#ffbe47\";\n\n// Reds\nexport const R50 = \"#FFEBE6\";\nexport const R75 = \"#FFBDAD\";\nexport const R100 = \"#FF8F73\";\nexport const R200 = \"#FF7452\";\nexport const R300 = \"#FF5630\";\nexport const R400 = \"#DE350B\";\nexport const R500 = \"#BF2600\";\n\n// Yellows\nexport const Y50 = \"#FFFAE6\";\nexport const Y75 = \"#FFF0B3\";\nexport const Y100 = \"#FFE380\";\nexport const Y200 = \"#FFC400\";\nexport const Y300 = \"#FFAB00\";\nexport const Y400 = \"#FF991F\";\nexport const Y500 = \"#FF8B00\";\n\n// Greens\nexport const G50 = \"#E3FCEF\";\nexport const G75 = \"#ABF5D1\";\nexport const G100 = \"#79F2C0\";\nexport const G200 = \"#57D9A3\";\nexport const G300 = \"#36B37E\";\nexport const G400 = \"#00875A\";\nexport const G500 = \"#006644\";\n\n// Blues\nexport const B50 = \"#DEEBFF\";\nexport const B75 = \"#B3D4FF\";\nexport const B100 = \"#4C9AFF\";\nexport const B200 = \"#2684FF\";\nexport const B300 = \"#0065FF\";\nexport const B400 = \"#0052CC\";\nexport const B500 = \"#0747A6\";\n\n// Purples\nexport const P50 = \"#EAE6FF\";\nexport const P75 = \"#C0B6F2\";\nexport const P100 = \"#998DD9\";\nexport const P200 = \"#8777D9\";\nexport const P300 = \"#6554C0\";\nexport const P400 = \"#5243AA\";\nexport const P500 = \"#403294\";\n\n// Teals\nexport const T50 = \"#E6FCFF\";\nexport const T75 = \"#B3F5FF\";\nexport const T100 = \"#79E2F2\";\nexport const T200 = \"#00C7E6\";\nexport const T300 = \"#00B8D9\";\nexport const T400 = \"#00A3BF\";\nexport const T500 = \"#008DA6\";\n\n// Neutrals\nexport const N0 = \"#FFFFFF\";\nexport const N10 = \"#FAFBFC\";\nexport const N20 = \"#F4F5F7\";\nexport const N30 = \"#EBECF0\";\nexport const N40 = \"#DFE1E6\";\nexport const N50 = \"#C1C7D0\";\nexport const N60 = \"#B3BAC5\";\nexport const N70 = \"#A5ADBA\";\nexport const N80 = \"#97A0AF\";\nexport const N90 = \"#8993A4\";\nexport const N100 = \"#7A869A\";\nexport const N200 = \"#6B778C\";\nexport const N300 = \"#5E6C84\";\nexport const N400 = \"#505F79\";\nexport const N500 = \"#42526E\";\nexport const N600 = \"#344563\";\nexport const N700 = \"#253858\";\nexport const N800 = \"#172B4D\";\n\n// ATTENTION: update the tints if you update this\nexport const N900 = \"#091E42\";\n\n// Each tint is made of N900 and an alpha channel\nexport const N10A = \"rgba(9, 30, 66, 0.02)\";\nexport const N20A = \"rgba(9, 30, 66, 0.04)\";\nexport const N30A = \"rgba(9, 30, 66, 0.08)\";\nexport const N40A = \"rgba(9, 30, 66, 0.13)\";\nexport const N50A = \"rgba(9, 30, 66, 0.25)\";\nexport const N60A = \"rgba(9, 30, 66, 0.31)\";\nexport const N70A = \"rgba(9, 30, 66, 0.36)\";\nexport const N80A = \"rgba(9, 30, 66, 0.42)\";\nexport const N90A = \"rgba(9, 30, 66, 0.48)\";\nexport const N100A = \"rgba(9, 30, 66, 0.54)\";\nexport const N200A = \"rgba(9, 30, 66, 0.60)\";\nexport const N300A = \"rgba(9, 30, 66, 0.66)\";\nexport const N400A = \"rgba(9, 30, 66, 0.71)\";\nexport const N500A = \"rgba(9, 30, 66, 0.77)\";\nexport const N600A = \"rgba(9, 30, 66, 0.82)\";\nexport const N700A = \"rgba(9, 30, 66, 0.89)\";\nexport const N800A = \"rgba(9, 30, 66, 0.95)\";\n\n// Dark Mode Neutrals\nexport const DN900 = \"#E6EDFA\";\nexport const DN800 = \"#DCE5F5\";\nexport const DN700 = \"#CED9EB\";\nexport const DN600 = \"#B8C7E0\";\nexport const DN500 = \"#ABBBD6\";\nexport const DN400 = \"#9FB0CC\";\nexport const DN300 = \"#8C9CB8\";\nexport const DN200 = \"#7988A3\";\nexport const DN100 = \"#67758F\";\nexport const DN90 = \"#56637A\";\nexport const DN80 = \"#455166\";\nexport const DN70 = \"#3B475C\";\nexport const DN60 = \"#313D52\";\nexport const DN50 = \"#283447\";\nexport const DN40 = \"#202B3D\";\nexport const DN30 = \"#1B2638\";\nexport const DN20 = \"#121A29\";\nexport const DN10 = \"#0E1624\";\n\n// Each dark tint is made of DN0 and an alpha channel\nexport const DN800A = \"rgba(13, 20, 36, 0.06)\";\nexport const DN700A = \"rgba(13, 20, 36, 0.14)\";\nexport const DN600A = \"rgba(13, 20, 36, 0.18)\";\nexport const DN500A = \"rgba(13, 20, 36, 0.29)\";\nexport const DN400A = \"rgba(13, 20, 36, 0.36)\";\nexport const DN300A = \"rgba(13, 20, 36, 0.40)\";\nexport const DN200A = \"rgba(13, 20, 36, 0.47)\";\nexport const DN100A = \"rgba(13, 20, 36, 0.53)\";\nexport const DN90A = \"rgba(13, 20, 36, 0.63)\";\nexport const DN80A = \"rgba(13, 20, 36, 0.73)\";\nexport const DN70A = \"rgba(13, 20, 36, 0.78)\";\nexport const DN60A = \"rgba(13, 20, 36, 0.81)\";\nexport const DN50A = \"rgba(13, 20, 36, 0.85)\";\nexport const DN40A = \"rgba(13, 20, 36, 0.89)\";\nexport const DN30A = \"rgba(13, 20, 36, 0.92)\";\nexport const DN20A = \"rgba(13, 20, 36, 0.95)\";\nexport const DN10A = \"rgba(13, 20, 36, 0.97)\";\n\nexport const getContrastColor = (hexColor: string) => {\n  if (hexColor[0] === \"#\") {\n    hexColor = hexColor.slice(1);\n  }\n\n  if (hexColor.length === 3) {\n    hexColor = hexColor\n      .split(\"\")\n      .map((h) => h + h)\n      .join(\"\");\n  }\n\n  const r = parseInt(hexColor.substr(0, 2), 16);\n  const g = parseInt(hexColor.substr(2, 2), 16);\n  const b = parseInt(hexColor.substr(4, 2), 16);\n\n  // Calculate contrast using YIQ ratio\n  return (r * 299 + g * 587 + b * 114) / 1000 >= 178 ? BLACK : WHITE;\n};\n\nexport const getRandomHexColor = () => {\n  const newColor = (\n    \"000000\" + Math.floor(0x1000000 * Math.random()).toString(16)\n  ).slice(-6);\n  return `#${newColor}`;\n};\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { UserDetail, Avatar } from \"types\";\nimport api, { API_USERS, API_AVATARS } from \"api\";\nimport { RootState, AppDispatch } from \"store\";\nimport { createSuccessToast } from \"features/toast/ToastSlice\";\n\nexport interface ValidationErrors extends Partial<UserDetail> {\n  non_field_errors?: string[];\n}\n\nexport const fetchUserDetail = createAsyncThunk<UserDetail>(\n  \"profile/fetchUserDetailStatus\",\n  async (_, { getState }) => {\n    const id = (getState() as RootState).auth.user?.id;\n    const response = await api.get(`${API_USERS}${id}/`);\n    return response.data;\n  }\n);\n\nexport const updateUser = createAsyncThunk<\n  UserDetail,\n  UserDetail,\n  {\n    rejectValue: ValidationErrors;\n  }\n>(\n  \"profile/updateUserStatus\",\n  async (userData, { dispatch, getState, rejectWithValue }) => {\n    try {\n      // Don't POST blank email\n      if (!userData[\"email\"]) {\n        delete userData[\"email\"];\n      }\n      const id = (getState() as RootState).auth.user?.id;\n      const response = await api.put(`${API_USERS}${id}/`, userData);\n      dispatch(createSuccessToast(\"User saved\"));\n      return response.data;\n    } catch (err) {\n      if (!err.response) {\n        throw err;\n      }\n\n      return rejectWithValue(err.response.data);\n    }\n  }\n);\n\nexport const fetchAvatarList = createAsyncThunk<Avatar[]>(\n  \"profile/fetchAvatarListStatus\",\n  async () => {\n    const response = await api.get(API_AVATARS);\n    return response.data;\n  }\n);\n\ninterface InitialState {\n  avatars: Avatar[];\n  userDetail: UserDetail | null;\n  loading: boolean;\n  apiErrors?: ValidationErrors;\n  avatarLoading: number | null;\n}\n\nexport const initialState: InitialState = {\n  avatars: [],\n  userDetail: null,\n  loading: false,\n  apiErrors: undefined,\n  avatarLoading: null,\n};\n\nexport const slice = createSlice({\n  name: \"profile\",\n  initialState,\n  reducers: {\n    updateAvatarPending(state, action) {\n      state.avatarLoading = action.payload;\n    },\n    updateAvatarFulfilled(state, action) {\n      if (state.userDetail) {\n        state.userDetail.avatar = action.payload;\n      }\n      state.avatarLoading = null;\n    },\n    updateAvatarRejected(state) {\n      state.avatarLoading = null;\n    },\n    resetProfile: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchUserDetail.fulfilled, (state, action) => {\n      state.userDetail = action.payload;\n    });\n    builder.addCase(fetchAvatarList.fulfilled, (state, action) => {\n      state.avatars = action.payload;\n    });\n    builder.addCase(updateUser.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(updateUser.fulfilled, (state, action) => {\n      state.userDetail = action.payload;\n      state.loading = false;\n    });\n    builder.addCase(updateUser.rejected, (state, action) => {\n      state.apiErrors = action.payload;\n      state.loading = false;\n    });\n  },\n});\n\nexport const {\n  updateAvatarPending,\n  updateAvatarFulfilled,\n  updateAvatarRejected,\n  resetProfile,\n} = slice.actions;\n\nexport const updateAvatar = (avatarId: number) => async (\n  dispatch: AppDispatch,\n  getState: () => RootState\n) => {\n  dispatch(updateAvatarPending(avatarId));\n  try {\n    const id = getState().auth.user?.id;\n    const response = await api.post(`${API_USERS}${id}/update_avatar/`, {\n      id: avatarId,\n    });\n    dispatch(updateAvatarFulfilled(response.data));\n    dispatch(createSuccessToast(\"Avatar saved\"));\n  } catch (err) {\n    dispatch(updateAvatarRejected());\n  }\n};\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n} from \"@reduxjs/toolkit\";\nimport { fetchBoardById } from \"features/board/BoardSlice\";\nimport { IColumn, Id } from \"types\";\nimport api, { API_SORT_COLUMNS, API_COLUMNS } from \"api\";\nimport { createErrorToast, createInfoToast } from \"features/toast/ToastSlice\";\nimport { RootState, AppDispatch, AppThunk } from \"store\";\n\nexport const addColumn = createAsyncThunk<IColumn, number>(\n  \"column/addColumnStatus\",\n  async (boardId) => {\n    const response = await api.post(`${API_COLUMNS}`, {\n      board: boardId,\n      title: \"new column\",\n      tasks: [],\n    });\n    return response.data;\n  }\n);\n\ninterface PatchFields {\n  title: string;\n}\n\nexport const patchColumn = createAsyncThunk<\n  IColumn,\n  { id: Id; fields: Partial<PatchFields> }\n>(\"column/patchColumnStatus\", async ({ id, fields }) => {\n  const response = await api.patch(`${API_COLUMNS}${id}/`, fields);\n  return response.data;\n});\n\nexport const deleteColumn = createAsyncThunk<Id, Id>(\n  \"column/deleteColumnStatus\",\n  async (id, { dispatch }) => {\n    await api.delete(`${API_COLUMNS}${id}/`);\n    dispatch(createInfoToast(\"Column deleted\"));\n    return id;\n  }\n);\n\nconst columnAdapter = createEntityAdapter<IColumn>({});\n\nexport const initialState = columnAdapter.getInitialState();\n\nexport const slice = createSlice({\n  name: \"column\",\n  initialState,\n  reducers: {\n    setColumns: columnAdapter.setAll,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchBoardById.fulfilled, (state, action) => {\n      columnAdapter.setAll(\n        state,\n        action.payload.columns.map((column) => ({\n          id: column.id,\n          title: column.title,\n          board: action.payload.id,\n        }))\n      );\n    });\n    builder.addCase(addColumn.fulfilled, (state, action) => {\n      columnAdapter.addOne(state, action.payload);\n    });\n    builder.addCase(patchColumn.fulfilled, (state, action) => {\n      columnAdapter.updateOne(state, {\n        id: action.payload.id,\n        changes: { title: action.payload.title },\n      });\n    });\n    builder.addCase(deleteColumn.fulfilled, (state, action) => {\n      columnAdapter.removeOne(state, action.payload);\n    });\n  },\n});\n\nexport const { setColumns } = slice.actions;\n\nexport const columnSelectors = columnAdapter.getSelectors(\n  (state: RootState) => state.column\n);\n\nexport const {\n  selectAll: selectAllColumns,\n  selectEntities: selectColumnsEntities,\n} = columnSelectors;\n\n/**\n * Post the new order of columns.\n * If the request fails, restore the previous order of columns.\n */\nexport const updateColumns = (columns: IColumn[]): AppThunk => async (\n  dispatch: AppDispatch,\n  getState: () => RootState\n) => {\n  const previousColumns = selectAllColumns(getState());\n  try {\n    dispatch(setColumns(columns));\n    await api.post(API_SORT_COLUMNS, {\n      order: columns.map((col) => col.id),\n    });\n  } catch (err) {\n    dispatch(setColumns(previousColumns));\n    dispatch(createErrorToast(err.toString()));\n  }\n};\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  PayloadAction,\n  createEntityAdapter,\n} from \"@reduxjs/toolkit\";\nimport { BoardMember } from \"types\";\nimport { fetchBoardById } from \"features/board/BoardSlice\";\nimport { RootState } from \"store\";\n\nconst memberAdapter = createEntityAdapter<BoardMember>({\n  sortComparer: (a, b) => a.username.localeCompare(b.username),\n});\n\ninterface ExtraInitialState {\n  dialogMember: number | null;\n  memberListOpen: boolean;\n}\n\nexport const initialState = memberAdapter.getInitialState<ExtraInitialState>({\n  dialogMember: null,\n  memberListOpen: false,\n});\n\nexport const slice = createSlice({\n  name: \"member\",\n  initialState,\n  reducers: {\n    addBoardMembers: memberAdapter.addMany,\n    removeBoardMember: memberAdapter.removeOne,\n    setDialogMember: (state, action: PayloadAction<number | null>) => {\n      state.dialogMember = action.payload;\n    },\n    setMemberListOpen: (state, action: PayloadAction<boolean>) => {\n      state.memberListOpen = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchBoardById.fulfilled, (state, action) => {\n      memberAdapter.setAll(state, action.payload.members);\n    });\n  },\n});\n\nexport const {\n  addBoardMembers,\n  removeBoardMember,\n  setDialogMember,\n  setMemberListOpen,\n} = slice.actions;\n\nconst memberSelectors = memberAdapter.getSelectors(\n  (state: RootState) => state.member\n);\n\nexport const {\n  selectAll: selectAllMembers,\n  selectEntities: selectMembersEntities,\n  selectTotal: selectMembersTotal,\n} = memberSelectors;\n\nexport default slice.reducer;\n","import {\n  createSlice,\n  createEntityAdapter,\n  createAsyncThunk,\n  PayloadAction,\n} from \"@reduxjs/toolkit\";\nimport { Label, Id } from \"types\";\nimport { fetchBoardById } from \"features/board/BoardSlice\";\nimport { RootState } from \"store\";\nimport api, { API_LABELS } from \"api\";\nimport { createInfoToast, createErrorToast } from \"features/toast/ToastSlice\";\nimport { AxiosError } from \"axios\";\n\nexport const createLabel = createAsyncThunk<Label, Omit<Label, \"id\">>(\n  \"label/createLabelStatus\",\n  async (label, { dispatch }) => {\n    const response = await api.post(`${API_LABELS}`, label);\n    dispatch(createInfoToast(\"Label created\"));\n    return response.data;\n  }\n);\n\nexport const patchLabel = createAsyncThunk<\n  Label,\n  { id: Id; fields: Partial<Label> }\n>(\n  \"label/patchLabelStatus\",\n  async ({ id, fields }, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await api.patch(`${API_LABELS}${id}/`, fields);\n      dispatch(createInfoToast(\"Label updated\"));\n      return response.data;\n    } catch (err) {\n      const error: AxiosError = err;\n      if (!error.response) {\n        throw err;\n      }\n      dispatch(createErrorToast(error.response.data));\n      return rejectWithValue(error.response.data);\n    }\n  }\n);\n\nexport const deleteLabel = createAsyncThunk<Id, Id>(\n  \"label/deleteLabelStatus\",\n  async (id, { dispatch }) => {\n    await api.delete(`${API_LABELS}${id}/`);\n    dispatch(createInfoToast(\"Label deleted\"));\n    return id;\n  }\n);\n\nconst labelAdapter = createEntityAdapter<Label>({\n  sortComparer: (a, b) => a.name.localeCompare(b.name),\n});\n\ninterface ExtraInitialState {\n  dialogOpen: boolean;\n}\n\nexport const initialState = labelAdapter.getInitialState<ExtraInitialState>({\n  dialogOpen: false,\n});\n\nexport const slice = createSlice({\n  name: \"label\",\n  initialState,\n  reducers: {\n    setDialogOpen: (state, action: PayloadAction<boolean>) => {\n      state.dialogOpen = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchBoardById.fulfilled, (state, action) => {\n      labelAdapter.setAll(state, action.payload.labels);\n    });\n    builder.addCase(createLabel.fulfilled, (state, action) => {\n      labelAdapter.addOne(state, action.payload);\n    });\n    builder.addCase(patchLabel.fulfilled, (state, action) => {\n      const { id, name, color } = action.payload;\n      labelAdapter.updateOne(state, { id, changes: { name, color } });\n    });\n    builder.addCase(deleteLabel.fulfilled, (state, action) => {\n      labelAdapter.removeOne(state, action.payload);\n    });\n  },\n});\n\nexport const { setDialogOpen } = slice.actions;\n\nexport const labelSelectors = labelAdapter.getSelectors(\n  (state: RootState) => state.label\n);\n\nexport const {\n  selectAll: selectAllLabels,\n  selectEntities: selectLabelEntities,\n} = labelSelectors;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { TasksByColumn, ITask, Id, NewTask, PriorityValue } from \"types\";\nimport { fetchBoardById } from \"features/board/BoardSlice\";\nimport { AppDispatch, AppThunk, RootState } from \"store\";\nimport {\n  createErrorToast,\n  createSuccessToast,\n  createInfoToast,\n} from \"features/toast/ToastSlice\";\nimport api, { API_SORT_TASKS, API_TASKS } from \"api\";\nimport { addColumn, deleteColumn } from \"features/column/ColumnSlice\";\nimport { deleteLabel } from \"features/label/LabelSlice\";\nimport { removeBoardMember } from \"features/member/MemberSlice\";\n\ntype TasksById = Record<string, ITask>;\n\ninterface InitialState {\n  byColumn: TasksByColumn;\n  byId: TasksById;\n  createLoading: boolean;\n  createDialogOpen: boolean;\n  createDialogColumn: Id | null;\n  editDialogOpen: Id | null;\n}\n\nexport const initialState: InitialState = {\n  byColumn: {},\n  byId: {},\n  createLoading: false,\n  createDialogOpen: false,\n  createDialogColumn: null,\n  editDialogOpen: null,\n};\n\ninterface PatchFields {\n  title: string;\n  description: string;\n  priority: PriorityValue;\n  labels: Id[];\n  assignees: Id[];\n}\n\nexport const patchTask = createAsyncThunk<\n  ITask,\n  { id: Id; fields: Partial<PatchFields> }\n>(\"task/patchTaskStatus\", async ({ id, fields }) => {\n  const response = await api.patch(`${API_TASKS}${id}/`, fields);\n  console.log(response.data);\n  return response.data;\n});\n\ninterface CreateTaskResponse extends ITask {\n  column: Id;\n}\n\nexport const createTask = createAsyncThunk<\n  CreateTaskResponse,\n  NewTask,\n  {\n    rejectValue: string;\n  }\n>(\"task/createTaskStatus\", async (task, { dispatch, rejectWithValue }) => {\n  try {\n    console.log(task);\n    const response = await api.post(`${API_TASKS}`, task);\n    dispatch(createSuccessToast(\"Task created\"));\n    console.log(response.data);\n    return response.data;\n  } catch (err) {\n    if (err.response && err.response.data) {\n      // Handling Django's serializer.ValidationError\n      const errorMessages = Object.values(err.response.data).flat().join(\", \");\n      dispatch(createErrorToast(`${errorMessages}`));\n      return rejectWithValue(`Validation Error: ${errorMessages}`);\n    }\n    // Handling other types of errors\n    dispatch(createErrorToast(err.message));\n    return rejectWithValue(err.message);\n  }\n});\n\nexport const deleteTask = createAsyncThunk<Id, Id>(\n  \"task/deleteTaskStatus\",\n  async (id, { dispatch }) => {\n    await api.delete(`${API_TASKS}${id}/`);\n    dispatch(createInfoToast(\"Task deleted\"));\n    return id;\n  }\n);\n\nexport const slice = createSlice({\n  name: \"task\",\n  initialState,\n  reducers: {\n    setTasksByColumn: (state, action: PayloadAction<TasksByColumn>) => {\n      state.byColumn = action.payload;\n    },\n    setCreateDialogOpen: (state, action: PayloadAction<boolean>) => {\n      state.createDialogOpen = action.payload;\n    },\n    setCreateDialogColumn: (state, action: PayloadAction<Id>) => {\n      state.createDialogColumn = action.payload;\n    },\n    setEditDialogOpen: (state, action: PayloadAction<Id | null>) => {\n      state.editDialogOpen = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchBoardById.fulfilled, (state, action) => {\n      const byColumn: TasksByColumn = {};\n      const byId: TasksById = {};\n      for (const col of action.payload.columns) {\n        for (const task of col.tasks) {\n          byId[task.id] = task;\n        }\n        byColumn[col.id] = col.tasks.map((t) => t.id);\n      }\n      state.byColumn = byColumn;\n      state.byId = byId;\n    });\n    builder.addCase(patchTask.fulfilled, (state, action) => {\n      state.byId[action.payload.id] = action.payload;\n    });\n    builder.addCase(createTask.pending, (state) => {\n      state.createLoading = true;\n    });\n    builder.addCase(createTask.fulfilled, (state, action) => {\n      state.byId[action.payload.id] = action.payload;\n      state.byColumn[action.payload.column].push(action.payload.id);\n      state.createDialogOpen = false;\n      state.createLoading = false;\n    });\n    builder.addCase(createTask.rejected, (state) => {\n      state.createLoading = false;\n    });\n    builder.addCase(deleteTask.fulfilled, (state, action) => {\n      for (const [column, tasks] of Object.entries(state.byColumn)) {\n        for (let i = 0; i < tasks.length; i++) {\n          if (tasks[i] === action.payload) {\n            state.byColumn[column].splice(i, 1);\n          }\n        }\n      }\n      delete state.byId[action.payload];\n    });\n    builder.addCase(addColumn.fulfilled, (state, action) => {\n      state.byColumn[action.payload.id] = [];\n    });\n    builder.addCase(deleteColumn.fulfilled, (state, action) => {\n      delete state.byColumn[action.payload];\n    });\n    builder.addCase(deleteLabel.fulfilled, (state, action) => {\n      const deletedLabelId = action.payload;\n      for (const taskId in state.byId) {\n        const task = state.byId[taskId];\n        task.labels = task.labels.filter(\n          (labelId) => labelId !== deletedLabelId\n        );\n      }\n    });\n    builder.addCase(removeBoardMember, (state, action) => {\n      const deletedMemberId = action.payload;\n      for (const taskId in state.byId) {\n        const task = state.byId[taskId];\n        task.assignees = task.assignees.filter(\n          (assigneeId) => assigneeId !== deletedMemberId\n        );\n      }\n    });\n  },\n});\n\nexport const {\n  setTasksByColumn,\n  setCreateDialogOpen,\n  setCreateDialogColumn,\n  setEditDialogOpen,\n} = slice.actions;\n\nexport const updateTasksByColumn = (\n  tasksByColumn: TasksByColumn\n): AppThunk => async (dispatch: AppDispatch, getState: () => RootState) => {\n  const state = getState();\n  const previousTasksByColumn = state.task.byColumn;\n  const boardId = state.board.detail?.id;\n  try {\n    dispatch(setTasksByColumn(tasksByColumn));\n    await api.post(API_SORT_TASKS, {\n      board: boardId,\n      tasks: tasksByColumn,\n      order: Object.values(tasksByColumn).flat(),\n    });\n  } catch (err) {\n    dispatch(setTasksByColumn(previousTasksByColumn));\n    dispatch(createErrorToast(err.toString()));\n  }\n};\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Color } from \"@material-ui/lab/Alert\";\n\ninterface InitialState {\n  open: boolean;\n  message: string | null;\n  severity: Color;\n}\n\nexport const initialState: InitialState = {\n  open: false,\n  message: null,\n  severity: \"success\",\n};\n\nexport const slice = createSlice({\n  name: \"toast\",\n  initialState,\n  reducers: {\n    createSuccessToast: (state, action: PayloadAction<string>) => {\n      state.open = true;\n      state.message = action.payload;\n      state.severity = \"success\";\n    },\n    createInfoToast: (state, action: PayloadAction<string>) => {\n      state.open = true;\n      state.message = action.payload;\n      state.severity = \"info\";\n    },\n    createErrorToast: (state, action: PayloadAction<string>) => {\n      state.open = true;\n      state.message = action.payload;\n      state.severity = \"error\";\n    },\n    clearToast: (state) => {\n      state.open = false;\n    },\n  },\n});\n\nexport const {\n  createSuccessToast,\n  createInfoToast,\n  createErrorToast,\n  clearToast,\n} = slice.actions;\n\nexport default slice.reducer;\n","import {\n  createAsyncThunk,\n  createEntityAdapter,\n  createSlice,\n} from \"@reduxjs/toolkit\";\nimport api, { API_COMMENTS } from \"api\";\nimport { AxiosResponse } from \"axios\";\nimport {\n  createErrorToast,\n  createInfoToast,\n  createSuccessToast,\n} from \"features/toast/ToastSlice\";\nimport { RootState } from \"store\";\nimport { Id, NewTaskComment, Status, TaskComment } from \"types\";\n\nexport const fetchComments = createAsyncThunk<TaskComment[], number>(\n  \"comment/fetchCommentsStatus\",\n  async (taskId, { dispatch }) => {\n    try {\n      const response: AxiosResponse<TaskComment[]> = await api.get(\n        `${API_COMMENTS}?task=${taskId}`\n      );\n      return response.data;\n    } catch (err) {\n      dispatch(createErrorToast(err.message));\n      return [];\n    }\n  }\n);\n\nexport const createComment = createAsyncThunk<\n  TaskComment | undefined,\n  NewTaskComment\n>(\"comment/createCommentStatus\", async (comment, { dispatch }) => {\n  try {\n    const response: AxiosResponse<TaskComment> = await api.post(\n      API_COMMENTS,\n      comment\n    );\n    dispatch(createSuccessToast(\"Comment posted\"));\n    return response.data;\n  } catch (err) {\n    dispatch(createErrorToast(err.message));\n  }\n});\n\nexport const deleteComment = createAsyncThunk<Id | undefined, Id>(\n  \"task/deleteCommentStatus\",\n  async (id, { dispatch }) => {\n    try {\n      await api.delete(`${API_COMMENTS}${id}/`);\n      dispatch(createInfoToast(\"Comment deleted\"));\n      return id;\n    } catch (err) {\n      dispatch(createErrorToast(err.message));\n    }\n  }\n);\n\nconst commentAdapter = createEntityAdapter<TaskComment>({\n  sortComparer: (a, b) => b.created.localeCompare(a.created),\n});\n\ninterface ExtraInitialState {\n  fetchCommentsStatus: Status;\n  createCommentStatus: Status;\n}\n\nexport const initialState = commentAdapter.getInitialState<ExtraInitialState>({\n  fetchCommentsStatus: \"idle\",\n  createCommentStatus: \"idle\",\n});\n\nexport const slice = createSlice({\n  name: \"comment\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchComments.pending, (state) => {\n      state.fetchCommentsStatus = \"loading\";\n    });\n    builder.addCase(fetchComments.fulfilled, (state, action) => {\n      commentAdapter.addMany(state, action.payload);\n      state.fetchCommentsStatus = \"succeeded\";\n    });\n    builder.addCase(createComment.pending, (state) => {\n      state.createCommentStatus = \"loading\";\n    });\n    builder.addCase(createComment.fulfilled, (state, action) => {\n      commentAdapter.addOne(state, action.payload as TaskComment);\n      state.createCommentStatus = \"succeeded\";\n    });\n    builder.addCase(deleteComment.fulfilled, (state, action) => {\n      commentAdapter.removeOne(state, action.payload as Id);\n    });\n  },\n});\n\n// selectors\nexport const { selectAll: selectAllComments } = commentAdapter.getSelectors(\n  (state: RootState) => state.comment\n);\nexport const selectFetchCommentsStatus = (state: RootState) =>\n  state.comment.fetchCommentsStatus;\nexport const selectCreateCommentStatus = (state: RootState) =>\n  state.comment.createCommentStatus;\n\nexport default slice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"store\";\n\ninterface InitialState {\n  mobileDrawerOpen: boolean;\n}\n\nexport const initialState: InitialState = {\n  mobileDrawerOpen: false,\n};\n\nexport const slice = createSlice({\n  name: \"responsive\",\n  initialState,\n  reducers: {\n    setMobileDrawerOpen: (state, action: PayloadAction<boolean>) => {\n      state.mobileDrawerOpen = action.payload;\n    },\n  },\n});\n\nexport const { setMobileDrawerOpen } = slice.actions;\n\nexport const mobileDrawerOpen = (store: RootState) =>\n  store.responsive.mobileDrawerOpen;\n\nexport default slice.reducer;\n"],"sourceRoot":""}