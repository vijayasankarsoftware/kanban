{"version":3,"sources":["features/auth/LoginDialog.tsx","features/auth/EnterAsGuest.tsx","features/auth/Auth.tsx"],"names":["FormActions","LoginDialog","dispatch","useDispatch","useState","open","setOpen","apiErrors","useSelector","state","auth","loginErrors","loading","loginLoading","useForm","register","handleSubmit","errors","handleClose","clearErrors","onSubmit","username","password","login","Button","variant","color","onClick","data-testid","Dialog","onClose","keepMounted","aria-labelledby","css","maxWidth","fullWidth","Close","DialogTitle","id","DialogContent","non_field_errors","Grow","in","timeout","Alert","severity","map","errorMsg","key","TextField","autoFocus","name","margin","label","inputRef","required","helperText","message","error","Boolean","type","disabled","Separator","Container","EnterAsGuest","history","useHistory","allowGuest","setAllowGuest","useEffect","source","api","CancelToken","a","API_AUTH_SETUP","cancelToken","token","response","data","ALLOW_GUEST_ACCESS","isCancel","console","fetchData","cancel","Fade","guestRegister","push","Title","Auth","SEO","width","height"],"mappings":"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","file":"static/js/7.75103a88.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  Grow,\n} from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, clearErrors } from \"./AuthSlice\";\nimport { RootState } from \"store\";\nimport { Alert } from \"@material-ui/lab\";\nimport Close from \"components/Close\";\n\nconst FormActions = styled.div`\n  margin-top: 1rem;\n  text-align: right;\n`;\n\ninterface FormData {\n  username: string;\n  password: string;\n}\n\nconst LoginDialog = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n  const apiErrors = useSelector((state: RootState) => state.auth.loginErrors);\n  const loading = useSelector((state: RootState) => state.auth.loginLoading);\n  const { register, handleSubmit, errors } = useForm<FormData>();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(clearErrors());\n  };\n\n  const onSubmit = handleSubmit(({ username, password }) => {\n    dispatch(login({ username, password }));\n  });\n\n  return (\n    <>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleOpen}\n        data-testid=\"open-login-btn\"\n      >\n        Login\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        keepMounted={false}\n        aria-labelledby=\"login-dialog-title\"\n        css={css`\n          & .MuiDialog-paper {\n            padding: 2rem 1.5rem;\n          }\n        `}\n        maxWidth=\"xs\"\n        fullWidth\n      >\n        <Close onClose={handleClose} />\n        <DialogTitle id=\"login-dialog-title\">Login</DialogTitle>\n        <form onSubmit={onSubmit}>\n          <DialogContent>\n            {apiErrors?.non_field_errors && (\n              <Grow in timeout={100}>\n                <Alert\n                  severity=\"error\"\n                  css={css`\n                    margin-bottom: 0.75rem;\n                  `}\n                >\n                  {apiErrors.non_field_errors?.map((errorMsg) => (\n                    <div key={errorMsg}>{errorMsg}</div>\n                  ))}\n                </Alert>\n              </Grow>\n            )}\n            <TextField\n              autoFocus\n              name=\"username\"\n              margin=\"dense\"\n              id=\"username\"\n              label=\"Username\"\n              variant=\"outlined\"\n              inputRef={register({ required: \"This field is required\" })}\n              helperText={errors.username?.message}\n              error={Boolean(errors.username)}\n              fullWidth\n            />\n            <TextField\n              name=\"password\"\n              margin=\"dense\"\n              id=\"password\"\n              label=\"Password\"\n              variant=\"outlined\"\n              type=\"password\"\n              inputRef={register({ required: \"This field is required\" })}\n              helperText={errors.password?.message}\n              error={Boolean(errors.password)}\n              fullWidth\n            />\n            <FormActions>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={loading}\n                data-testid=\"submit-login-btn\"\n              >\n                Login\n              </Button>\n            </FormActions>\n          </DialogContent>\n        </form>\n      </Dialog>\n    </>\n  );\n};\n\nexport default LoginDialog;\n","import { Button, Fade } from \"@material-ui/core\";\nimport { css } from \"@emotion/core\";\nimport { guestRegister } from \"./AuthSlice\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport api, { API_AUTH_SETUP } from \"api\";\nimport { AuthSetup } from \"types\";\nimport { AxiosResponse } from \"axios\";\n\nconst Separator = styled.div`\n  margin-top: 1rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst EnterAsGuest = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [allowGuest, setAllowGuest] = useState(false);\n\n  useEffect(() => {\n    const source = api.CancelToken.source();\n\n    const fetchData = async () => {\n      try {\n        const response: AxiosResponse<AuthSetup> = await api(\n          `${API_AUTH_SETUP}`,\n          {\n            cancelToken: source.token,\n          }\n        );\n        setAllowGuest(response.data.ALLOW_GUEST_ACCESS);\n      } catch (err) {\n        if (!api.isCancel(err)) {\n          console.error(err);\n        }\n      }\n    };\n    fetchData();\n\n    return () => source.cancel();\n  }, []);\n\n  const handleClick = () => {\n    dispatch(guestRegister());\n    history.push(\"/\");\n  };\n\n  if (!allowGuest) {\n    return null;\n  }\n\n  return (\n    <Fade in={allowGuest}>\n      <Container>\n        <Separator>or</Separator>\n        <Button\n          css={css`\n            text-transform: initial;\n          `}\n          onClick={handleClick}\n        >\n          Enter as a guest\n        </Button>\n      </Container>\n    </Fade>\n  );\n};\n\nexport default EnterAsGuest;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { ReactComponent as Board } from \"static/svg/board.svg\";\nimport LoginDialog from \"./LoginDialog\";\nimport RegisterDialog from \"./RegisterDialog\";\nimport EnterAsGuest from \"./EnterAsGuest\";\nimport Footer from \"./Footer\";\nimport SEO from \"components/SEO\";\n\nconst Container = styled.div`\n  margin-top: 20vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 0.75rem;\n`;\n\nconst Auth = () => {\n  return (\n    <Container>\n      <SEO />\n      <div>\n        <Board width={200} height={200} />\n      </div>\n      <Title>Knboard</Title>\n      <div>\n        <LoginDialog />\n      </div>\n      <EnterAsGuest />\n    </Container>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}